(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    841932,      19604]
NotebookOptionsPosition[    827693,      19368]
NotebookOutlinePosition[    829244,      19413]
CellTagsIndexPosition[    829170,      19408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Teleportation in String Substitution System", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.8031146063478985`*^9, 
  3.803114615730757*^9}, {3.803470387436859*^9, 
  3.8034703951017895`*^9}},ExpressionUUID->"7f5a763c-439b-409d-85d9-\
b001eb779415"],

Cell["Muhammad Taufiq Murtadho", "Author",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.803114629538709*^9, 
  3.8031146364793267`*^9}},ExpressionUUID->"17c07b4e-577f-4fd8-bb63-\
78ea3b522bfe"],

Cell["Korea Advanced Institute of Science and Technology (KAIST)", \
"Affiliation",
 CellChangeTimes->{{3.802186209582007*^9, 3.802186214327465*^9}, {
  3.8031146408880925`*^9, 3.803114650341468*^9}, {3.8036896746198215`*^9, 
  3.8036896769142127`*^9}},ExpressionUUID->"96c2b484-c964-462d-9af7-\
4e5a7606bcb7"],

Cell[TextData[{
 StyleBox["Goal:",
  FontWeight->"Bold"],
 " Generate a string substitution system that can be interpreted as a quantum \
teleportation phenomenon, investigate its causal structure, and identify a \
signature of quantum effects.\n\n",
 StyleBox["Main Results",
  FontWeight->"Bold"],
 ": Usually, measurement under different basis requires us to define new \
foliation of a multiway system. However, I  found a very simple method to \
perform Bell measurement on a string substitution system by changing the \
Knuth-Bendix completion map in the default foliation. This method can also be \
generalized into a measurement on other bases as long as we can express them \
in terms of a superposition of computational basis states. After generating \
an initial entangled string state, I implemented this Bell completion \
technique and showed that quantum teleportation indeed occurs. After that, I \
investigated the causal multiway graph associated with this process and found \
a quantum signature in the form of new states that were inaccessible prior to \
the Bell measurement.  \n\n",
 StyleBox["Future Work",
  FontWeight->"Bold"],
 ": In this project, I have demonstrated quantum teleportation in string \
substitution systems without incorporating quantum phase between different \
eigenstates. In the Wolfram model, quantum amplitude and quantum phase \
originated from different aspects of the multiway system. Quantum amplitudes \
correspond to the state\[CloseCurlyQuote]s path weights whereas the phase is \
related to the coordinates in branchial space. If we include quantum phase in \
the model, we would be able to distinguish all of the four Bell states. \
Furthermore, string substitution systems are toy models for the actual \
Wolfram models that use hypergraph instead of string transformation. Thus, \
exploring quantum teleportation in a hypergraph multiway system is also a \
natural extension to this project."
}], "Abstract",
 CellChangeTimes->{{3.802186680026499*^9, 3.802186711462531*^9}, {
   3.8031146995891304`*^9, 3.803114700052828*^9}, {3.8034220420293627`*^9, 
   3.8034220783871565`*^9}, {3.8034222643422117`*^9, 
   3.8034222742143717`*^9}, {3.8034223712141585`*^9, 
   3.8034224340803056`*^9}, {3.8034224706975417`*^9, 
   3.8034226215283604`*^9}, {3.8034235310346036`*^9, 
   3.8034235361423693`*^9}, {3.8034245019099197`*^9, 
   3.8034245062134514`*^9}, {3.8034245965188494`*^9, 
   3.8034246020378017`*^9}, {3.8034261929698114`*^9, 3.803426221846518*^9}, {
   3.803426266908451*^9, 3.80342630469409*^9}, {3.8034281571255245`*^9, 
   3.8034282026089106`*^9}, {3.803428240883169*^9, 3.803428249537766*^9}, {
   3.803428352836381*^9, 3.8034283581454363`*^9}, {3.8034283940421195`*^9, 
   3.8034283988007665`*^9}, {3.8034284422145395`*^9, 
   3.8034284444634557`*^9}, {3.803428483095441*^9, 3.8034285250674915`*^9}, {
   3.8034285610396233`*^9, 3.803429070683202*^9}, {3.803429150643037*^9, 
   3.803429425297531*^9}, {3.8034295290696917`*^9, 3.803429541161143*^9}, {
   3.803429582947622*^9, 3.803429594442663*^9}, {3.8034296290760565`*^9, 
   3.803429730012268*^9}, {3.8034299978503003`*^9, 3.8034300078374834`*^9}, {
   3.803430079250289*^9, 3.8034302074767685`*^9}, {3.8034308164884257`*^9, 
   3.8034308175676126`*^9}, {3.8034316050260243`*^9, 3.803431630041071*^9}, {
   3.8034350163540316`*^9, 3.8034350201199493`*^9}, {3.803470335032366*^9, 
   3.8034703808148704`*^9}, {3.8034704275812836`*^9, 
   3.8034707382523766`*^9}, {3.8034707704815702`*^9, 3.803470856256149*^9}, {
   3.80352319901273*^9, 3.8035232050067077`*^9}, {3.803597636932788*^9, 
   3.8035977428848915`*^9}, {3.803597786108383*^9, 3.8035978781752014`*^9}, {
   3.8036184825621185`*^9, 3.80361849226038*^9}, {3.803618533325248*^9, 
   3.803618627757517*^9}, {3.80362509843423*^9, 3.8036252340320177`*^9}, {
   3.8036405543069086`*^9, 3.803640601735392*^9}, {3.803640635309654*^9, 
   3.803640752390975*^9}, {3.803640789464913*^9, 3.8036409494626737`*^9}, {
   3.803640989482668*^9, 3.8036411183026013`*^9}, {3.803641162563857*^9, 
   3.80364122648388*^9}, {3.803641271843029*^9, 3.8036413870193768`*^9}, {
   3.8036882569026957`*^9, 3.8036883317973604`*^9}, {3.80368836755613*^9, 
   3.803688443318957*^9}, {3.8036885129236984`*^9, 3.8036885141531997`*^9}, {
   3.8036885501799183`*^9, 3.803688964616508*^9}, {3.8036890531860743`*^9, 
   3.803689322455948*^9}, {3.803689416779893*^9, 3.8036894684488597`*^9}, {
   3.8036895352001915`*^9, 3.8036896357281475`*^9}, {3.803689863995382*^9, 
   3.8036901497588587`*^9}, {3.8036901982365904`*^9, 3.803690355407271*^9}, {
   3.8036904068284407`*^9, 3.803690421132272*^9}, {3.8036906668638315`*^9, 
   3.8036906673314447`*^9}, 3.8036908251182632`*^9, {3.8037043348398757`*^9, 
   3.803704354131573*^9}, {3.8037043896521406`*^9, 3.8037044140916595`*^9}, {
   3.8037044442570124`*^9, 3.803704447092268*^9}, {3.8037044916045775`*^9, 
   3.8037045453373613`*^9}, {3.8037046172752743`*^9, 
   3.803704617877591*^9}},ExpressionUUID->"bd44fc5d-a918-4ecb-a444-\
9098256d0564"],

Cell["Wolfram Community Post (material for blog post)", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 3.8021873367169733`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Title: ",
 StyleBox["Quantum Teleportation with String",
  FontWeight->"Bold"]
}], "Section",
 CellChangeTimes->{{3.8021862859717093`*^9, 3.8021862866993*^9}, {
   3.802186780928506*^9, 3.802186861789569*^9}, {3.8034297511295786`*^9, 
   3.8034297981432548`*^9}, 
   3.8035315043072186`*^9},ExpressionUUID->"2c2380b2-0547-4128-a721-\
db738b29388d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Graphics3D", "[", "line", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Opacity", "[", ".1", "]"}], ",", 
         RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", ".1", "]"}], ",", 
         RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"Tube", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.6"}], ",", "0", ",", 
                RowBox[{"-", "1.2"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "2"}], "}"}]}], "}"}], ",", 
            "0.05"}], "]"}], "]"}]}], "}"}], ",", "Green", ",", 
       RowBox[{"Sphere", "[", 
        RowBox[{"{", 
         RowBox[{"5", ",", "0", ",", "0"}], "}"}], "]"}], ",", "Red", ",", 
       RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"Tube", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"4.5", ",", "0", ",", 
              RowBox[{"-", "1.2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "0", ",", "2"}], "}"}]}], "}"}], ",", "0.05"}],
          "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"4", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", "2.5"}], ",", 
       RowBox[{"2", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", " ", "=", " ", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2.8", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", "2.5"}], ",", "0", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Opacity", "[", ".8", "]"}], ",", "Dashed"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"f1", ",", "f2", ",", "f3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.803594390082637*^9, 3.8035944846428137`*^9}, {
  3.803620922706762*^9, 3.8036209235529633`*^9}},
 CellLabel->
  "In[869]:=",ExpressionUUID->"794a2cdc-6805-448d-9948-b772491bf868"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0, 1, 0], Opacity[0.1], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Opacity[0.1], Arrowheads[0.1], 
     Arrow3DBox[TubeBox[{{-0.6, 0, -1.2}, {1, 0, 2}}, 0.05]]}, 
    {RGBColor[0, 1, 0], SphereBox[{5, 0, 0}]}, 
    {RGBColor[1, 0, 0], Arrowheads[0.1], 
     Arrow3DBox[TubeBox[{{4.5, 0, -1.2}, {6, 0, 2}}, 0.05]]}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
W5I75mXW4nmbm4xgTcr/f+/5F/yf/z+kmCLQ
        "]]},
      Annotation[#, "Charting`Private`Tag$25914#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[2], Opacity[0.8], 
       Dashing[{Small, Small}], Line3DBox[CompressedData["
1:eJxN2nk0ld/XAHBTZahIRYbMQ5lSIpKOSKkUZYhkikTJUKYmpAwNCskUQqnM
Q1Qoh8iUeShdMs/c+0gqs/d+13p/d19/sNZnPevc8+zn3P3svRfRcy6nzjMx
UH+ov5ipfzpvKSoyMLBoMvz/T0MJe8OActj+4V8UnnUc4I1HxQT5nrigxsHF
eT4e8GHNQ8MV4b4oyEMnR0kOfPvhZcbz4Y9R/My+u/am4LKiv8kWYc+RwVFX
r6occM4SczafkGxUYTlWaGuziubH0lUuCPtgtP68w1mXstU0T7x+tqxXsxFV
NzhEl+ey0VzlR37uJe8eNOx4sIfRbC3Nh6bcbMZFh9Fw8dHNb1vW0zzwzo0/
o9wTqNL1QJ/AT/CmgEqZWYkJ9ESkPe72CDhnnW/pqMoEmnbh+669CH6V49LH
y2cmkG6w4uoXkpw0/6i7XMWSOIG+XD71ucYLXP7N5x0mkpNIsbwEtazlorn2
PHf0qi1ktBw52tSyATzmYoa+oBQZaV5rS2/mAb82+1WCezcZ/RMzUKsVARcW
Kx+N1ScjORP/B692gyuNlUgLB5CR/0h1K/tZcL1wNZ+hMTJq4vqh450Krlby
eBdbLAWZ1rvUkzPBM9/ct9N8QUE2v+dybPLAzYdf3zDLoKD+5uCgg8Xg5LiX
yjtLKOh1P5vR3zrwNOHkIY9eCtKp+eDFNgUutXXbip4wgfpZHzkM795Ac08t
6eDlAKofZTaVVAPvl/M5YfuAQPcY1G6f0wCX7vm5OTWUQN0TxTe/64AfJwk+
+R5LoPPHNi6km4DzZbCV4EwC7Z/mUVj2Ar/rYEf+UE+gNtGnGiI3wR8ct4qR
bSbQsadWnpp+4MGGzYy+bQS62/vV6kYw+NNN0gtVJALNP/v0hxQNLn82Vb1/
iEBvTUyUKHHgogciPc+MEsjKTC58JREcxe86/XacQBscw7IFU8HH2ywZ1hAE
Ghq1Oa5ZCK4iGVSo/JdAVbxRXrGfwJefip9v/keg6gEe++ky8HPTlnK6cwRi
qvh9/1kt3TpL/GuqFgh0UKG5ZLIB/LVjEW/jIoGu9s/lqreCcxxQ2Z+3RI3z
7O7mlk7wMo32arYVAmkP1M3z94LPkC/J+lB9Waa423oQ/KVIZWI91WdVKm68
HAU/KB68bZbqxTyZTUOT4Cx9fp+XqH7WX71L4hfdfgZSnbupXk9Sjrf5A+5r
IC0fS/X9MrbccXPgppTDy4pUd5d4sLdtCXyNcEB/8jKBJKU9N7EzcdN8os+f
RFDvV38vOUFjNXhEC+cIL9Uj17wujV8PHpY3fGBunkCBhP9mLWFwNY5DEox/
qO7LfOq8OPjtBwZDUr8JpHnTVTlQGjzR/WyV9C8CfSjSmyzdAV7sRPpXNEkg
Y7OeWT5N8KkFR2PpfgLtTnp8TOYgeFC7gYNUD4Es135QV9UFf3PsxFuGLgLl
yVUQegbgfwr3MxxuJ1Ca7e5AM2twM+ctw/yVBLJu5L647AvOWvWRPJBIoGiH
58Iun8AZIsX/iKtT47yd3164DJynacfIeyUCuRpaatRXgD8NPymxXY5AORTZ
WNE68NGwuKQXggRyS7CZyiCBL1ooxM8tUFCNxnP54//AF94pf9qZT0Gdph1M
mQobaa5wmOmZAAcFmTiziBU8BT/Z3lsVbTyJ/GMqo0KiwZe7GXPGDk2i2Bqp
Yttn4Ot38u4VVp1EIwzMrGxJ4JHFNy6r8k+i8Aae13sywLNmbo5K/JxAudnD
thKfwQVSutBviwlExP5EeybBq/HHg63HxhHFYvsLYbVNNI/QT/Wy6RpB7jX4
2yN18K2zctURX0ZQdweX6IIGeN3l/RyZWSOIuUX0X60WuJPl5eaHfiNoXnb4
6WE98O4XZ9Fa8RGkfX1iTb4l+A/3x5xitsOoh8NZzfg2uL5i6fzFpkHUIRLt
HvUJnHWCovbjfB9iSBlol8HgbROc5zYc60OOrWtCikvBhzddslVV7EPLjscX
2srB71janjWc70Uzknz1IzXgnSc2bC4N6UUyefumH7aDx0Ttvr/FtgcVso7X
tIyD6x3YPGvV2Ym2GaXs4poEb+/aumcqqRMF+fEOHyWDP1inTC1NOtE6tjHZ
DwR4X85vh6UZEso36Ze5MgN+cfzoZmItCRUJuxTYLoH7hT4qZ1XtQHLj9vzq
6zbTfNv9LcZZN9tQX4xOo+B68CJDlfArB9pQ3qnSvgU6Z2Yt9RNf3Yae9BYI
5XGBO207YqT3uBWZJM5OL28Er2PyZS1NbEGz9q9+8PGDXxl75W1T2oQ+8DJe
MJQA121VyN03WoO03CLce+n8xqkg/sbLNWhY6jTpoiT40wd/Dx35XY0kLEcy
vaTArbtOffy7VIWYPbCb2zZwk9arg1rclUhyY+WpIVm6OFho1K7e8xlRTPe1
H5YD52+PPqlXXIZYjYSyXtP5TRbtaT9UhqZzas9ZydO50+PThYdL0RWfy+1Z
CuCKy9bqI1kfEZfb7sZ6RXBHe0udidF8VDtzW599J/j1th0jMaS3aOTwlgxt
Ok8vaDmwqy4PyfT2zGXQOTnRsEciOwdNV+kPm+0CD7Pd3nd+9A168+DU4Vt0
zrbMK5BU+woNrVO5G0/nt12Wyz5nvERzTDfD2uh8rHzi22fXRKTH0mgzQec2
65+x66XEIfG+gXUrdM4lkK017RCN5hc05gSVwLXf1j3u73mMTNqvq0rT+UgG
ln9tH4R+lToYKtD5Gs4dG1+QbqHg0lVHd9F5vYpUZEajI7r53kBQic4nzTf0
bZQzwA0Xj9Qq0rk4SSWvc8kdi92eMpSl85cPNrkcn/XHJf6HC8XofGZTfXGU
2wN874fBPA+dy+57lGDzJwyzN3PystJ5iJmP6sDOSOwQGcz5ly4OPbdqx485
x2Kn1x+fVNO5qVx6rdXVJOy1ambsMJ3L3j5/vX08FRvYag4J07kt6YuoK2sG
ns4N+jhD99wdk64ZTUhmYZKr6koEne+vbqTsU8zF/n8yvmXTnbcTu7nvkxwL
cNwE388TdOdTtO5Flm7HJ6zrmv18hu48r5yU3/ZwqATvO3YJRdH59I5LfzOm
MRbJwDytdN+LU8xxk5qry7DYDCEtSff9MknX+ykrXI4FR/4Ru6TBlcdtj33T
q8Lcms+4cui+v/edS8Z31lThNKVV3jJ0PnJq/3FPnWpsx5cjwEuXB9xfbfN8
r1GDN57bWtQoRrefx7I86+W/4ozd1ldLtoJHvXJqT17diKV8cubDN4BL/jUX
2XCyFetEeiWJ/4L8SQ6S0jHMIeHjtvqaJLo8nPZ5R0wkhYQrfNKKQyjgOzyn
mIrlOvGymuORiQnwAakL8ylvOvGIUe5Xv2HwY50f8hcTuvAO1xflmzvBl7wO
ZboEdOPe141u42XgBzh8dpUL9OGmE/6qZoHg4bZ+OZOhg3i6Eosa3QXPjGV4
lJY2iAVszMX0/Onev4vOj05WDOJoTvIlJR+6+zqdHnjm3yA2+HlBsceD7v2u
oadpfHYIuzyuZsiwAz/B8/h+u+gwbmO+NSekCb6llxRwMHYEi6x58/YRBeqK
8x+tHxioj2PCtSmIma7eOLoScnD/8XHMLvZ31mMMnFw+nMVtNY6VarPyDQfB
r7k8OeXiP47XmMm+mP5Bt46P38KfqnF8xrZ/tKQCfISx96TMiQm8aigm5ild
fTXPKS1VemgS261afwTT1WNBFMlUO+NJ7N+H0obDwWsPNI+SbSfxoFvsXYUQ
cN8lI/ssv0ncfOVaRvJt8InssY6hD5N4D7PY+a0XwfklWcbFJMhYrIbwtlED
T2eXSr01RMamjyq4VpTBH5QPPA79RcbXjhqvi90F3pPbHnZ7iYzPcNxRrZYF
L/S+lLu0iYJ1Y8WvrBKiqzOrLClntSiYe7vvcRYmcFFrHZOMSArm8RtK5q+G
OtbTPy5ivySBi5zqPtrT1cnXZNqTluQI3OUZYZ5TCv4rRfV8zG4CM5guyu4r
BB9WV5601ybwQHqZskoaODFVuNHMisDrZYS68h+Ak+WPcD8JJbDEeGb5jyDw
9WmuTXyRBK7ef+DA4h3wMr6a+pvPCDxt1cq09ya4aEHz5e8pBM5671oS7UTX
Tx2+ndz9gcCzk6Jcg3rgY59CLBQ7CNzhuLJP+gi47sMfOQc6CVyST1g66IBr
jAvGKnUTOK68KGBQA3z/Aw7xwgECn9H9412hQLd/UkfFUTKBxRStHf7JgA+1
mt6yJgjMyqZvtI2u/8rdOPfe5BeBP0Rdl7xL18c9dF5MH5whMI/Q1SpxLvCK
9GDrwHkCM7PZFRxaC24bmT7/fIHA++odX19gpevjmknssYsEfvfJOyGQBdyu
UjjUfYnA1mkBz14w0MX5X/K9HcsEnugJeF6yCH0riSXjby3Vg6Rd0r/PgnOm
Jn07tELg9Mo9pZQZ8NyPbNtfUP2Hz7duZro+2lv5HrmH6hYhWqy8ZPAeqUFx
at+NN6Zf1dg2Bm79eenrPNVl1p7z3TME/vB0x1AH1QetVjce7ANfZ/TULYrq
Vk1m8gY/we9oe7ioUF2fyeSZ2Q9wncbvPQXU+5pN3Jlm3wx+5Pd+fhNqfP4V
rj5+sR681zlhyJMaz2uTLsxONeD8eipS3tT4x+8gshzp5iFCWwU4BOcIfC9O
X/BELviBTaTAsWkCH4hz9dLKBD/UrC20nnoeWPg2UnbTzWdOyEipbKSen36x
rp2bksDn92gTJeMETsh8uuNjKLjzksKXuF4CXw/45p/0EDzTpC3+y08Cs/O/
nLtLN1/arv2XrZFE4A2dv40P0c2jypZ93txpo97X8sBQngt4iMgmU/dKAt9d
9NDdfQLc8IROnudLAguqB88mHaHbj5WukdZzAi8ORzxcRzdPszxsYTYWQ+CW
mInz3ergidLpKTWPqPlntoXpwnZwwQ/Pl1s9CRxh+mbDZhbwuv7K+c2aBH7f
do+Z8h7mgSLWiwz331Mww88jAn184F9S8p6E7SPjL8Z6JMvn62j+8cCuxvzW
URyzdX2LFRcHzdOfLKhISA9g4XO6809kWWmu8GHvya+O3/H5SfKbm/Ywf577
7lX/5xfGvKR0k45UJojD7l9rS31K0IY5actClxX0P9/H6PtZkqUDcfu80yvg
nqf5e8eJ7PHRfhQ13SXW6TdDcyMuIity4xiq7t5wSauUQnM+DbUSKVsy0opv
3Hf7GbjHMMn/vgsZ1dYpLXz1BO94EkxqvkFGlvZWNgHy4DlhBRs5IshINyen
NvgZmeaEo4CDVDkZjTqvL/9xbZLmg+zctX8FKOihg5JGHxqnOX/B7/yC9xTk
vbQ/MksQ3PKb16Indd/zRyt/Bc+N0fywUXoYfw0FOdQrt9i9BTcy7b7DSqKg
jm8XJIukwRkfEy995ikogVfMrZ97lOblc7sl6pUJdMoprs329xDNpzNIFuVP
CfR5TWrfukbwyvSuNplnBNJj0nKvTgNfO9tv75xIoN50HUOXc+ANz9Ur7qUR
6MRiOW9AyyDNi/9VVHJ9IlDdTNDLHwUDNP/p/DLQvJNAchblraHh4DFsv9T8
uwm0Pm+zrJkL+EefquK7fQSKlZ27tnU7uMHAo61bRwhkmeCb7RHfT/MS71/M
z6YIZJRrqvL+Ovga8e9tz6cJVKnyaTe7KTiDmbOF3wyBXm4OwIPc4K9zDEPa
/hEoUuO+ldNUH81NmEiK/811H7lYJqxqAF/R9r8bNU8grVg/4cv3wAXvO6vU
LBJo2FzXQ/0CeOir3eHpSwSqftsSKqAD/n1IJMZxmUDXKY031omDP/I2P8r8
3/z2yATawAi+pVU5xZvqq3/XDkv19NLcIksmtYbq55i4rp/4BH6etdv4L9VZ
r5swBz8DxxJb05epHqyl/LD1Gnjxw+43/VTfvW2/0E5TcE9OLf1kql/vWPqc
qAKeVxaaoEH1XT0Ld8Q2gwct7YvKp97Xm8Me7U4jPTTvt+lXW0P1nHpnxsKX
4PXNOkHK1Piw+rQlbD8HHnvV2A9R47nllNs175/dNO/cwXB9mPpcdFeMukye
gdd36dy6M0sghp6lBTMz8KifD3cu/qWunxfwsaH9J80PJKnl+/03H45z1XNv
6qL5+s76s9/Gqc9Lf087riPR3HwnU/S7FgJ5jwuN7wgDD9aOEdVvJJDfzHam
MmNwK8PTitVfCWSgc9XzUM8Pmk90W0yYVxCo1D6Qrfd3B83lW+c02fMJ9CFT
8+EZ8e/w3I88FggMIdDUNvuBpmetNI/PXeMmtJ0a56lgtVt24MIL9cVNotT9
f1Q105MHn1l22mPHT11foF3WELfQnGfwXbcCBzXOMcqxLEPNNP+wNeuz4QQF
VbeVWzPtaaJ53z4jcn8KBTXF1g89mKihOfsCyc6YhYJc977oqg0Cz22+e8dz
joxyNr39pi8B/rPbS+QGhYw0v65VkrOspvmeMIEVhQ4yCh1uEtrZXknzgB+u
17XSqP6vX9CvqRzOv4EJv9gRMvLr3br15VwxzX1q2pd4rkwiv2rpMa3gGJo/
9dVsqbg6jvySb/0wqIiEvJ1UX/TamurWRpskmSNoLnmhme/ycWoeLy5fPMQd
QvP7HL5hz6Wovjba0Cn/Ms2f+V+tTfk+hvycF35oOoTh/7n/scyho7upebxz
pDulPIPmbhwd9rEdI6jUkjITK1FKczbWLRbV1Dzb6yLwpsUGfEbGsrO0iOrl
TjYfEsDH019KpCRT3VYpPYS3jOa+qw577rwyiHIk3jJYrvpM86qvbzPMuQZR
aay5yL3mcpo36naacxwZQNZRukVvZKtorhRpevBORh9KfGsgpzdYR3PSsMTB
dv8ulHhBjHuJs57mudkLGm46XYirRIThqDp4cNRw2+SaLqR4W7L8fSg4RwDD
zJ2HncjAWzysT6WB5ntsPQrUIkgoZ08Jm51rI80v3lZPZ0zoQKZcNlsnvzbB
/d6pvrwU14Z6A7ilrneCJ6RP7Nhytg1x/dIPbh8Hb1p77LmAQBtSDRo6PMPa
THPp8KTsn9GtyDRtVL1ZC9xlW2SZyZMWFC1kd3FVJrjc+w5Dy7tNiGuXkKeG
eQvNdSrfn0nLrUYdXlF/22zBd7XFi27ZXY22yKhMICfwsO57xZffVaFe78Bt
oTfBzUyTLFuKKlG0o1Ex3zPwKr2tYo8/VyBVG/WUxkZwjtqkkYMNpUhxTOpu
fDt47PT7oYv6pWh2c0PR/k7wNEXLXYxJGM3+Kdq+MATuz1OtMv/yE+qIcR0z
nwP3tnPvCk0vRKwP/hLFvK00d/CSZ9+Rn4sM3E4WlfCDf9ksUjOan4OaPkt8
jdgK/lhPOkf8UjYKjbr4qUgMfMPFaxWXLqejqeUn8eyS4OROl/fnnVORd+yL
Mnlp8EuiN7QPubxGBjyWrWQZ8ASRtaLlri9QtSpf6X058Iyjoy62bkmodGMn
ZV4e/JsZS8rgQAKKfnfYav8OcPclh8cDg7Fo6uz6DcaK4DmlLXFVQ5Gow3mM
Ge0EFyxQ/BoxHI6q/RL2LNK5+r0NOxMaQlCO4XL6w13gom4jq/40BqAt7YPW
U3R+Y8BOzCn5BhIRVjORVgLnNrXUSDlyAfl5kx/spPMxlzy+o7YnsZ/RCiMn
nd8UWjK8auKOuQy9PmC69b9n3h9d2e6PqzUds7Xp93PamSl/231czTMzHEu3
/4H010uvNoZhLhS8pZwuPrIeT+vYuGOw7rk1GyMUwEmFbC94N8TjUE4OfVW6
OGccv6bKEpyIXcNXh8xvB78Tz+dTFvgSj75eJ28vCr5jdJlD5U4GDg5xSO4W
olt/27bEdd5ZWLeoiE9OENwr8/ucrUoOjt45zHWIB5yvkzGdIpOHuSxYVDxZ
wQ/MXNWQ3fgOd+Q+FKsehHOeMtAo59LzCQdPxAuE9YC7epQ5+XWUYMX1HZI7
SOClf7w43ZsxVjyxeGW8AXyPXrK1b18p3mZXxGP5DnzZ/H2XdstnrBp4t3Pv
LfBAjqelx3IqsaJyfrSxB7jVnPrTbGpeztn30E/nMvjErdWyS6+qcLDe0veX
Z8GzWyNLDeOrscO72G4bNfAXUp6v+oJrsamH4q7v45DHjL9YHuAzb8C6C0W6
pfLgvZ13hc/NtOCOSzUsdsLgReIWN/SVW7FuxGBxOxf4mltJEtKerTjHqlRW
/Dfk2xNBD/ZG/GvFmqnPg+0LwNve7PSymGvDvXJNfE8Uwf9a8rx0mv2GuT66
SR1jhveC5eyJzUH9JFway63SKVwNeTKMPJgt24dznhzMWEWB99fX5xzBrof6
sF/NvuDOYvCM7nxZEZs+nIinku+ZgD9vyOXQi+zDoQWsn6eCKmlec/uwYetK
H7a+Kdj7h1QBeSaUzeZeYz/W/COZrKYF719unzTRfutB7Mdb5lqwM4/mFbX+
7PM6I9jPL1iuIjqX5v28TEeCLUZwL6fH9KaVHIi/8J+gBfcRzPBxQ/x8eDbk
Q4nfsaEvqOscOmrdlZZGcwUWM6krKyO4tMZa9NeTRJp3fgouX8gdxQwNO7/L
VPvT6paz7w2OejGOY+v1zut1Kgpp/sUk2X3q4CQuDePjDg8qojnifv7trdEk
ZihqHbp3DOou96GptNN2kzhRmUn8WvtHmoetZT+veYfqBbVT+r8wze3MVmtG
4Eks8u7BhtMSUNcJNZxZt2cXGbv2KFSdKIK6sT16z+HFZTJu2jyfckmqlubO
e26OZrFTsGKAiQkpHJz11JFNmjwUzCU9mpfh9JXm14z5O5bkKNhg7XVWMYl6
mn/l5c4dMqXg0PjPovwnoe4dzrKWPptGwaNNx1PXkaGu3p1m3helRODRFzJ+
YhJtNN+UycIdtJfABjy/1czMwRtFC5ZPH6Be/61YRK4WvOrYz18JJwg8a/xU
yz61neb+Fx+FlF6gXl/y+5+wM/QFmtfULh+PIDDDG8tXeq/BjVTXBBrHEFjX
+odFbC944bX55f0JBO795ZQTbQh9x9krdssFrwnMWmFkIawOfUpuy9ECpUIC
i+RZBupyddI8hl3J4+I36uf66+3yPQbOMiUTGfiDwFOOl1d9CwSX4+H+caeL
+rnnSkYGlsA7LisXivZT178gzupLhv7rD+aMGZ8g8JZVF8wKtkO/Nl5J+HBS
COzKyWDJYQ+udajjyuYpAvttyj3E0wN+pZz1VsVvAnfMdsyntEA/GBBxbiJr
jsCqv6qOdXBCv2lltGND1zzVBbVJ24/T9aFr4lXHF6j7Z3V0l6kG72A9F5y6
RGAjZfHcSSbof9+1rMk+s0xg9hfsqa2i4Hr3JlonqV63zpm/VhP88T3fv1Yr
BJb6W7fUaAVOaBjx5FP9utCLY0M+4F+EtiiNUX36ocMiWwJ4Ul6U3grVw0PC
WPfTzQFuP/p07i/Vk98+crjdBd5jHO7RQPWszrpNbQvgaUX7AoL+u16+YJWK
AMwfpG4xhov+t0+hTKXXe8GTL2nHxVHv650rT5T0GXChc3dezlLj844z+p/1
Tbq5SvFgkzjVfYYpUhkJ4IqXZO7LLBI4rZD5q9cAuOXNxde11Of1KoSZZ+Ay
zG0qTVmKjKnP982Wh6TUUPCDoVkeFr8IvL5DWdj/LThz6+uvmgSBiyqVGC/M
0V0vf9Ig9r958p63XIyBMHfSOLmJPaaHwCpKWvhUKvi/iNTBW9TzHGi4El9Q
B14RZ+K2n3r+g5cyyrM2wnzs9Agl+1QLgbnGbCMuJ4N3PRlQqv5M4BOrm6w2
lcOcbZhIdpqIo57DfauPu4+Aj+CtviFRBP6r0F05yDFMc94qjXCOcOo6B8ZU
/hmB6z7PaX0WSOBlkeeDvSPg5fvkb61zpp7Pwi7dEi6YHxb+mSlRVyEwRfTt
NxNnmFvO21z5t5xOwREklwPS4eD6qzO3dSRTsOB7pSmWd+DUzDwZHkPBPk0K
f0eWwN39vpzKDKTgTYV1qcceTdDctCg2wdOKgikyTa23c2G+urVHvt+Wg4IP
KQRlODISNJ/kl42c0SPjb9mKj0P7f8H3ZWD4dtq1CVzpG7ZU+vUvzVtP5zma
5w7jUVsBd33HRZq7pKdsLV/owSnNhMOmCQbN/7n157zXyK0Z133V9TH6B655
/A27KrUeOjJu7PeUmZHm5tYCtwTGmrA4d5w6vyD4zxf5XS+tm3CDsrKUwnFw
FpKT9tP4Bpz0NS3gZjY473HeJhP9WnxYnGlXjDsTzT9aCxYKxZXhG3fK4wg/
8HLGgptbuMpw0Xvtm4dCwI+vHLu6dKcUb4nyuP8nBTxpq88R3u8leG/F0eum
38E34t6YqKtFOFLz3VmFvcw0jzbhUOp/lYuFRTr17x8CT+O4FNP1MAc7vwq4
MXwK3PfpvZSAoSysjs5cfn4JXLFTfl/OzTQsdPfuyY3x4JlV9lejUpOwwpLZ
c9dUcA+vFPvtYwn413jomoYC8EMWDXuWfWJxqjbXlnsN4CSkYayXFob5FRo/
DJPAvc1GaxN97+Nbj7rsDo6AV2UnxQen3cYZMVe3JP8GP3hwW0NBmhuW8G9s
XFkBX1QM+e///Ev+D2AncWg=
        "]]},
      Annotation[#, "Charting`Private`Tag$25932#1"]& ]}, {}}},
  ImageSize->Large,
  ViewPoint->{-0.3837982600774003, -3.3580484634619765`, \
-0.16189321357673306`},
  ViewVertical->{-0.02888923682562072, -0.5528668530579891, 
   0.8327686682298927}]], "Output",
 CellChangeTimes->{3.8035945504271708`*^9, 3.8036209265066504`*^9, 
  3.8036223752137794`*^9},
 CellLabel->"Out[874]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
du8IGGRtdEeINFsJYXq28h39B5/DWnQDe/kcb/bkqSvyDDB53kN/Mjj0zdTC
Z4vlMY/Se90CeVtMeCfIbbv5BDQ3oXZg4kEhdABtjmv3dgI1tJtvR8LpJr6d
3xj/7wD/qGAt8qiA2O5RHetvxxWbNb0d+GvnlzxG7x202a69rm/nFv9MNCUE
oI9u+arVxDP5KRNhj1orXnWLX7DktRp4c1rihGk3ni8deJmD7lrf8NcqhZUj
2r1W4PT5a21MU1MA4J3hZbB6In2ZSvhNZEB/mW+H5EuK9qHtXkvIhwTx17rW
n0fIJ6pEBBe/8fZ2rxfEtv31vtechG+jPw7SxOnLFE1JeL0noRa5gIRT2r1W
EAr117rJL2kjL0fj3l+2e5m1pyu3wV+G5BpBTaBIljRblkQbZYcJ5vS1ck++
vY3ku9mTTwtVgFhvbfdaJeS7Nc0RAlF/Gl6mt1x286bku80vqRSTDmr3WoFx
5q+1NU2+AJNom6kwF5a+VtaUfHelyScC9YftXiYwSvxltoXkSwrU/wyvdWA5
R/C1AnPDX+s+v6SUIfH7TS5TCy5j/wXs6S9BrmpzC+GABN3lOtX4OnIWf4kd
nmKlWv8t4SXwvdJLCLX8JR7yhEqJzptaPbtWjP7sj4SPPCkx+za5REVfwrGV
P/9j/vylUpLK0STP71jJn//xNHVEMqJgY/rUgcngT/1kSJqkNHSF56ff+PyF
nH+ggW2eoS8OqZA7Wjm9GIn+9M82Jwobl0EcMzhrmlWe8/QoVbfFUKfWT8Kf
+nl/wyntmvmz7o3OmiEVcmfHuVPiywtExTJ1Ku8V/Ie5rCnSlDhksBNuuQtO
1Qn31AU32wVn6YI1dcKfVFBNILrCJZACGb7me/UNsvXNH6EMBPf+SovX64Lr
dcHlOkEsuoAKXXDlTlhIFzBGJ1x4NlwIf6pixVHu/AB1N+QhOHHDGzmx7Rvp
ghvpHPpG6L1t8j26dfxbOAsG1ejMeA28Wp+7A7wXuKs/1LfuPLzLW7xruspv
9a674K7u1HfdywFDk7kb7oL3Ood3w11wmyeGN9wFn3aO4IaRF86km5420nPT
6sJz48sfM1n+2/8H15LoAw==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"7e510b4c-b39b-4c67-8cd0-6ad48e6c3992"]
}, {2}]],

Cell["\<\
Alice and Bob are friends living in the future era when quantum technology is \
already ubiquitous. One weekend, Bob wants to send Alice a secret message. In \
the quantum world, a unit of information is called qubit (quantum bit). In \
contrast with classical bit that takes value either 0 or 1, a qubit can be \
both 0 and 1 at the same time - a property known as superposition. To send \
his message to Alice, Bob decided to encrypt his message into a qubit. One \
option for Bob to send the qubit to Alice is by using a quantum channel - \
communication channel that can maintain qubit in superposition. The process \
of sending a message through a (quantum) channel can be illustrated by the \
following string substitution system. \
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwdzlsow2EABfCZy4NMGcott6zNWBRiLonGw5JEzUqWyZBkm8uYS+JBuSye
TFZSNuZBqyUyUku5DAsxkbQHUdgYI6T4zv/h9Hs75yTUyytldBqNFksC8xVp
qm7Rc9Eer4Ayp2N9EAbz18bg/tO7EW4L2o5gUn2MAxabjl/g7/v9DxxqamT0
EK/lViZ0e9vDoc34FQnNNlUcjL5bSIG7XFkmFMlMufD8tKoCZjRVS+A8q1AO
Db15HfDG4hiF+a87Gui7rJyFiQfSRRhR4rmEZ0FOF9XXN+GBWxtTAWqi68RB
ebH5EQo/dewweNrS+DBOFNZxXDCUVeqFtYxbxgRR2cBjQrV1hAXFPgMSWP79
JoOWya5APVHyyI6C2ULbtJFoD6/VwtJKuw5yVpLnoOWvRg81ArcRmumHrav4
Kehsg7ol6eEesXlmm9Irrhm7wF+DnVLLvB66JPo5y4Zhv78i4wp7fHoWjA/p
T/UQWyzcdPgPqGb2yA==
  "],ExpressionUUID->"960e072d-a194-4e89-955b-14a8b9321ef7"],

Cell["A = Alice, B = Bob, C = Message, X = Channel", "CodeText",
 CellChangeTimes->{{3.803433130594201*^9, 
  3.803433151604272*^9}},ExpressionUUID->"555f8454-b95e-4a1e-a1b8-\
2382e285a7ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BC\>\"", "\[Rule]", " ", "\"\<CB\>\""}], ",", 
     RowBox[{"\"\<XC\>\"", "\[Rule]", " ", "\"\<CX\>\""}], ",", 
     RowBox[{"\"\<AC\>\"", "\[Rule]", " ", "\"\<CA\>\""}]}], "}"}], ",", 
   "\"\<AXXBC\>\"", ",", "5", ",", "\"\<StatesGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8034330926123734`*^9, 3.8034330947851315`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a15d2847-c797-4ae4-b779-98a01f282631"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXBC", "AXXCB", "AXCXB", "ACXXB", "CAXXB"}, {{{1, 2}, {2, 3}, {3, 
       4}, {4, 5}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 7.347880794884119*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXCB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 6.123233995736766*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXCXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 4.898587196589413*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ACXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 2.4492935982947064`*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CAXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$5"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 700.7999999999984}, {-7.902000000000092, 
       5.098000000000033}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{875.9999999999978, Automatic}]], "Output",
 CellChangeTimes->{3.803433036481126*^9, 3.8034330953755484`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"69b1ef32-d093-4824-bcd1-d8e4a857c3b4"]
}, Open  ]],

Cell["\<\
The goal is to move the message\[CloseCurlyQuote]s qubit C from the last \
letter to the first. Since information transfer is limited by the speed of \
light, C can only move one step at a time. Unfortunately, a quantum channel \
service is still expensive for Bob. So, Bob and Alice agree to perform a \
quantum teleportation protocol instead. Using this protocol, Bob can \
\[OpenCurlyDoubleQuote]teleport\[CloseCurlyDoubleQuote] his message to Alice \
provided that they already share a pair of qubits having a special property \
known as entanglement. If Alice and Bob share an entangled qubits, their bit \
values would be correlated no matter how far apart they are from each other. \
For example, if Bob has a bit value of 0, Alice bit would also be 0, and if \
Bob has a bit value of 1 Alice bit would also be 1. Intuitively, one might \
think that an entangled state  can be used to \[OpenCurlyDoubleQuote]teleport\
\[CloseCurlyDoubleQuote] message faster than light as shown in a string \
substitution system below. \
\>", "Text",
 CellChangeTimes->{
  3.8034326487815123`*^9, {3.8034327377354527`*^9, 3.8034327747833867`*^9}, {
   3.803433366259884*^9, 3.803433377093155*^9}, {3.8034335653078537`*^9, 
   3.803433622089873*^9}, {3.8034336654135633`*^9, 3.803433754417009*^9}, {
   3.8034722133017855`*^9, 3.803472246554635*^9}, {3.8034722861718297`*^9, 
   3.803472332516679*^9}, {3.80347236631501*^9, 3.8034723708167725`*^9}, {
   3.803472467317993*^9, 3.8034724729871244`*^9}, {3.8035212702966957`*^9, 
   3.8035215078411293`*^9}, {3.803521554973507*^9, 3.803521628424032*^9}, {
   3.8035217444154105`*^9, 3.8035217461953926`*^9}, {3.8035255486343637`*^9, 
   3.8035255508642163`*^9}, {3.8035305993029413`*^9, 3.803530704238755*^9}, {
   3.803626537455022*^9, 3.8036265570348067`*^9}, {3.803630039631819*^9, 
   3.8036300660143037`*^9}, {3.803679137396348*^9, 3.8036791401797233`*^9}, {
   3.8036909323426003`*^9, 
   3.8036909328142657`*^9}},ExpressionUUID->"19f8ccee-2bfa-4bd7-824e-\
1f4188595a33"],

Cell["\<\
String substitution system demonstrating entanglement non-local effect\
\>", "CodeText",
 CellChangeTimes->{{3.8036225057894917`*^9, 3.8036225101811314`*^9}, {
  3.803630081178447*^9, 
  3.8036301101322823`*^9}},ExpressionUUID->"3b45b2ab-31db-4bd6-a84b-\
c1fb005984f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<B\>\"", "\[Rule]", " ", "\"\<C\>\""}]}], "}"}], ",", 
   "\"\<AXXBC\>\"", ",", "3", ",", "\"\<EvolutionCausalGraph\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8034724215162363`*^9, 3.8034724278848114`*^9}, {
  3.8035216711671333`*^9, 3.803521674361841*^9}, {3.8036266000803576`*^9, 
  3.803626615373147*^9}},
 CellLabel->
  "In[876]:=",ExpressionUUID->"2312f2fc-0885-476a-9971-30576fbdcb56"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXBC", "BXXBC", "AXXCC", "BXXCC", "CXXBC", "CXXCC", {
       "A" -> "B", "A", {"", "XXBC"}}, {"B" -> "C", "B", {"AXX", "C"}}, {
       "A" -> "B", "A", {"", "XXCC"}}, {"B" -> "C", "B", {"", "XXBC"}}, {
       "B" -> "C", "B", {"BXX", "C"}}, {"B" -> "C", "B", {"", "XXCC"}}, {
       "B" -> "C", "B", {"CXX", "C"}}}, {{{1, 7}, {1, 8}, {3, 9}, {2, 10}, {2,
        11}, {4, 12}, {5, 13}, {7, 2}, {7, 10}, {7, 12}, {9, 4}, {9, 12}, {10,
        5}, {12, 6}, {8, 3}, {11, 4}, {13, 6}}, Null}, {
      EdgeStyle -> {
        DirectedEdge["CXXBC", {"B" -> "C", "B", {"CXX", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXBC", {"B" -> "C", "B", {"BXX", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXCC", {"A" -> "B", "A", {"", "XXCC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXCC"}}, "BXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXBC"}}, "BXXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXBC", {"B" -> "C", "B", {"", "XXBC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXBC", {"A" -> "B", "A", {"", "XXBC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXBC"}}, "CXXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXBC", {"B" -> "C", "B", {"AXX", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"AXX", "C"}}, "AXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXCC"}}, {
           "B" -> "C", "B", {"", "XXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXBC"}}, {
           "B" -> "C", "B", {"", "XXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"B" -> "C", "B", {"CXX", "C"}}, "CXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXCC"}}, "CXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXCC", {"B" -> "C", "B", {"", "XXCC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXBC"}}, {
           "B" -> "C", "B", {"", "XXBC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"B" -> "C", "B", {"BXX", "C"}}, "BXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {{"B" -> "C", "B", {"BXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"AXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "B" -> "C", "B", {"", "XXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "CXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "CXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "A" -> "B", "A", {"", "XXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "A" -> "B", "A", {"", "XXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"CXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"", "XXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.5219218021925992, 4.7390390989037}, {0.7043917048148253, 
           4.647804147592588}, {0.9076573882666816, 4.546171305866659}, {
           1.1317188525481685`, 4.434140573725916}, {1.3765760976592858`, 
           4.311711951170357}, {1.6422291236000337`, 4.178885438199983}, {
           1.7173168384000266`, 4.136403309195048}, {1.7835707044000206`, 
           4.088461561380236}, {1.8409907216000154`, 4.035060194755549}, {
           1.8895768900000105`, 3.9761992093209826`}, {1.9293292096000068`, 
           3.9118786050765397`}, {1.9602476804000037`, 3.842098382022221}, {
           1.9823323024000015`, 3.766858540158024}, {1.9955830756000004`, 
           3.686159079483951}, {2., 3.6}, {2., 3.51358024691358}, {2., 
           3.432098765432099}, {2.0000000000000004`, 3.355555555555556}, {2., 
           3.283950617283951}, {2., 3.217283950617284}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.24042613086921105`, 4.759573869130789}, {0.32011027392758673`, 
           4.679889726072413}, {0.4076254611223915, 4.592374538877609}, {
           0.5029716924536255, 4.497028307546374}, {0.6061489679212887, 
           4.393851032078711}, {0.717157287525381, 4.2828427124746185`}, {
           0.7765193382916591, 4.218542390103401}, {0.8288976183795513, 
           4.151349295200696}, {0.8742921277890583, 4.081263427766498}, {
           0.9127028665201794, 4.008284787800808}, {0.9441298345729148, 
           3.9324133753036286`}, {0.9685730319472646, 3.8536491902749574`}, {
           0.9860324586432287, 3.771992232714796}, {0.9965081146608072, 
           3.687442502623144}, {1., 3.4}, {1., 3.3111111111111104`}, {1., 
           3.2222222222222223`}, {1.0000000000000002`, 3.133333333333334}, {
           1., 3.0444444444444443`}, {1., 2.9555555555555557`}, {1., 
           2.8666666666666667`}, {1., 2.7777777777777777`}, {1., 
           2.688888888888889}, {1., 2.4000000000000004`}, {1., 
           2.311111111111112}, {1., 2.222222222222222}, {1.0000000000000002`, 
           2.1333333333333337`}, {1., 2.0444444444444447`}, {1., 
           1.9555555555555557`}, {1., 1.8666666666666667`}, {1., 
           1.777777777777778}, {1., 1.688888888888889}, {1., 1.6}, {1., 
           1.5135802469135802`}, {1., 1.4320987654320987`}, {
           1.0000000000000002`, 1.3555555555555558`}, {1., 
           1.2839506172839508`}, {1., 1.217283950617284}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {-1., 
           2.7827160493827163`}, {-1., 2.7160493827160495`}, {-1., 
           2.644444444444445}, {-1., 2.567901234567902}, {-1., 
           2.48641975308642}, {-1., 
           2.4000000000000004`}, {-0.9955830756000004, 
           2.31384092051605}, {-0.9823323024000018, 
           2.233141459841976}, {-0.960247680400004, 
           2.15790161797778}, {-0.9293292096000066, 
           2.0881213949234603`}, {-0.8895768900000104, 
           2.0238007906790174`}, {-0.840990721600015, 
           1.964939805244452}, {-0.7835707044000204, 
           1.9115384386197634`}, {-0.7173168384000268, 
           1.8635966908049517`}, {-0.6422291236000337, 
           1.8211145618000169`}, {-0.3765760976592858, 
           1.6882880488296428`}, {-0.1317188525481685, 1.5658594262740844`}, {
           0.09234261173331831, 1.453828694133341}, {0.29560829518517484`, 
           1.3521958524074127`}, {0.4780781978074008, 1.2609609010962997`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 6.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"CXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$13"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-1.4210854715202004`*^-14, 
       165.04960495855983`}, {-140.69920991711962`, 137.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{206.31200619819975`, Automatic}]], "Output",
 CellChangeTimes->{
  3.803472428677865*^9, 3.8035216749826365`*^9, {3.8036266019564104`*^9, 
   3.8036266165579743`*^9}},
 CellLabel->
  "Out[876]=",ExpressionUUID->"533e889e-23cb-451c-8029-4cb9b622ce88"]
}, Open  ]],

Cell[TextData[{
 "The blue box represents the string and the yellow box represents updating \
events that act on the string above it. Also, the orange arrow represents \
causal connection between different updating events (see ",
 ButtonBox["\"Multiway Causal Graph\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-relationship-between-graphs-and-\
the-multiway-causal-graph/"], None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-relationship-between-graphs-and-\
the-multiway-causal-graph/"],
 "). Note that C can arrive in Alice side ",
 StyleBox["only ",
  FontWeight->"Bold"],
 "by virtue of correlation between A and B (as well as B and C). In other \
words, A is not directly correlated with C (e.g. there is no rule like A\
\[Rule]C). It is straightforward to see that in this model Alice can receive \
the message after exactly three steps regardless of how far apart Alice and \
Bob are (i.e. no matter how many X there are between A and B). One may then \
(incorrectly) interpret the above graph as an indication that entanglement \
can be used to teleport message faster than light. But actually, this graph \
is not a realistic model of quantum mechanics. For one, it violates ",
 ButtonBox["no-cloning theorem",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.quantiki.org/wiki/no-cloning-theorem"], None},
  ButtonNote->"https://www.quantiki.org/wiki/no-cloning-theorem"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "which states that an arbitrary quantum state can not be copied. The final \
state has three C\[CloseCurlyQuote]s whereas we only have one in the \
beginning. If C is an arbitrary qubit state, then indeed, we have violated \
no-cloning theorem in this model. How does quantum teleportation really work, \
then?"
}], "Text",
 CellChangeTimes->{{3.8035217948059163`*^9, 3.803522150404289*^9}, {
   3.8035222333949437`*^9, 3.803522263952077*^9}, {3.803522320664892*^9, 
   3.803522361906684*^9}, {3.803522736883128*^9, 3.8035227390803685`*^9}, {
   3.803523241995756*^9, 3.8035233304470778`*^9}, {3.8035307586927342`*^9, 
   3.8035307792508307`*^9}, 3.803624091699922*^9, {3.803626637427087*^9, 
   3.8036267561339617`*^9}, {3.8036269259314814`*^9, 3.803627170225278*^9}, {
   3.803627316200301*^9, 3.803627419932144*^9}, {3.8036292299065437`*^9, 
   3.8036292322023954`*^9}, {3.803629267795251*^9, 3.8036292744414854`*^9}, {
   3.8036295758473787`*^9, 3.803629657258099*^9}, {3.803629771606022*^9, 
   3.8036298256841946`*^9}, {3.803629882321555*^9, 3.8036299614132767`*^9}, {
   3.803630147524647*^9, 3.8036302099529476`*^9}, {3.8036314035793147`*^9, 
   3.8036314067967787`*^9}, {3.803631493721492*^9, 3.8036315501746364`*^9}, {
   3.803679179252016*^9, 3.8036791989752383`*^9}, {3.8036909724960084`*^9, 
   3.8036910600729675`*^9}, {3.8037047486016564`*^9, 
   3.8037047609480543`*^9}, {3.8037048033163614`*^9, 
   3.8037048307280684`*^9}, {3.8037048643018527`*^9, 
   3.8037048739822416`*^9}},ExpressionUUID->"6079feef-923d-4ea1-a0d3-\
0c45afc35a7d"],

Cell[CellGroupData[{

Cell["How Quantum Teleportation Works", "Subsubsection",
 CellChangeTimes->{{3.8035223684929585`*^9, 3.80352237587897*^9}, {
  3.803529680819234*^9, 
  3.803529686182083*^9}},ExpressionUUID->"c71020d7-7b0e-41c9-9a42-\
a2ee903d130d"],

Cell[TextData[{
 "In order to understand quantum teleportation, a little mathematics seems \
inevitable. Let\[CloseCurlyQuote]s start with notation. In the standard \
notation of quantum mechanics, when a qubit is in state 0, we write its state \
as  |0\[RightAngleBracket] and if its state is 1, we write its state to be |1\
\[RightAngleBracket] . Previously, I mentioned the concept of entangled \
state. By this notation, an example of entangled state would be,\n \n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     SuperscriptBox[
      SubscriptBox["Bell", "1"], "\[PlusMinus]"]},
    "Ket"], "=", 
   RowBox[{
    TemplateBox[{"00"},
     "Ket"], "\[PlusMinus]", 
    TemplateBox[{"11"},
     "Ket"]}]}]], "DisplayFormula",
  FontWeight->"Bold",ExpressionUUID->"cd2f4c54-1be0-4999-a0f2-fb2a8cef96a0"],
 "\n\nwhere the first bit is kept by Alice and the second bit is kept by Bob. \
In this way, Bob\[CloseCurlyQuote]s and Alice\[CloseCurlyQuote]s bit values \
are perfectly correlated with each other. There is another kind of Bell state \
in which their respective bit states are anti-correlated.\n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     SuperscriptBox[
      SubscriptBox["Bell", "2"], "\[PlusMinus]"]},
    "Ket"], "=", 
   RowBox[{
    TemplateBox[{"01"},
     "Ket"], "\[PlusMinus]", 
    TemplateBox[{"10"},
     "Ket"]}]}]], "DisplayFormula",
  FontWeight->"Bold",ExpressionUUID->"f957b8e6-28fe-4dec-9798-29d95022ed59"],
 "\n\nWhen Alice\[CloseCurlyQuote]s state is 0, Bob\[CloseCurlyQuote]s state \
is guaranteed to be 1 and vice versa. Both of these entangled states can be \
used as a resource for quantum teleportation. Without any loss of generality, \
we can assume Alice and Bob shares ",
 Cell[BoxData[
  TemplateBox[{
    SubscriptBox["Bell", "1"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"f543624b-2d51-4c96-a3f6-bd2cfd6e0b60"],
 ". We also assume that Bob\[CloseCurlyQuote]s message can be encoded into a \
qubit in the following superposition state,\n \n ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Message"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{"\[Alpha]", 
     TemplateBox[{"0"},
      "Ket"]}], "+", 
    RowBox[{"\[Beta]", 
     TemplateBox[{"1"},
      "Ket"]}]}]}]],
  FontWeight->"Bold",ExpressionUUID->"e6c84283-04ad-40db-a9f8-b7abeee418e7"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "\n \n where \[Alpha] and \[Beta] are coefficients proportional to the \
probability of the qubit to be in state 0 and 1 respectively. Then, the whole \
three qubits\[CloseCurlyQuote] state of Alice and Bob can be written as \n ",
 StyleBox["\n", "DisplayFormulaNumbered"],
 StyleBox[Cell[BoxData[
  RowBox[{
   TemplateBox[{"Initial"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       SubscriptBox["Bell", "1"]},
      "Ket"], 
     TemplateBox[{"Message"},
      "Ket"]}], "=", 
    RowBox[{
     RowBox[{"\[Alpha]", 
      TemplateBox[{"000"},
       "Ket"]}], "+", 
     RowBox[{"\[Alpha]", 
      TemplateBox[{"110"},
       "Ket"]}], "+", 
     RowBox[{"\[Beta]", 
      TemplateBox[{"001"},
       "Ket"]}], "+", " ", 
     RowBox[{"\[Beta]", 
      TemplateBox[{"111"},
       "Ket"]}]}]}]}]], "DisplayFormula",
  FontWeight->"Bold",ExpressionUUID->"d2ed70e9-b432-44b5-a32f-014bd587a534"], 
  "DisplayFormulaNumbered"],
 "\n\nBy a little of algebra, one can express the above equation into a \
superposition of Bell states.\n",
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Initial"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", 
        TemplateBox[{"0"},
         "Ket"]}], "+", 
       RowBox[{"\[Beta]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "1"], "+"]},
      "Ket"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", 
        TemplateBox[{"0"},
         "Ket"]}], "-", 
       RowBox[{"\[Beta]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "1"], "-"]},
      "Ket"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", 
        TemplateBox[{"0"},
         "Ket"]}], "+", 
       RowBox[{"\[Alpha]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "2"], "+"]},
      "Ket"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", 
        TemplateBox[{"0"},
         "Ket"]}], "-", 
       RowBox[{"\[Alpha]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "2"], "-"]},
      "Ket"]}]}]}]], "DisplayFormulaNumbered",
  FontWeight->"Bold",ExpressionUUID->"effdb850-1e66-4fc3-9680-bfaa8ac4aaf5"],
 "\n\nReaders are encouraged to verify this equation. Since Bob has two \
qubits, he can then perform a ",
 StyleBox["Bell measurement",
  FontSlant->"Italic"],
 " on his qubits. In this type of measurement,  he would obtain one among \
four possible outcomes {",
 Cell[BoxData[
  TemplateBox[{
    SuperscriptBox[
     SubscriptBox["Bell", "1"], "\[PlusMinus]"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"3d46cdec-4f5b-4d13-9234-7c622fa952b6"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    SuperscriptBox[
     SubscriptBox["Bell", "2"], "\[PlusMinus]"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"eeaa265a-56df-468e-b33e-c4cb3de4ec61"],
 "}. Consequently, the state of Alice\[CloseCurlyQuote]s qubit would \
\[OpenCurlyDoubleQuote]collapse\[CloseCurlyDoubleQuote] into one of the \
states in parenthesis depending on Bob\[CloseCurlyQuote]s measurement \
outcome. For example,  if Bob measure ",
 Cell[BoxData[
  TemplateBox[{
    SuperscriptBox[
     SubscriptBox["Bell", "1"], "+"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"34812f46-3534-4093-a6c2-c9c07deade8c"],
 ", Alice qubit state would collapse into ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Alpha]", 
       TemplateBox[{"0"},
        "Ket"]}], "+", 
      RowBox[{"\[Beta]", 
       TemplateBox[{"1"},
        "Ket"]}]}], ")"}]}]}]],
  FontWeight->"Bold",ExpressionUUID->"5ee1d1fd-9157-481a-ac30-a461bda03486"],
 ". This means, information about \[Alpha] and \[Beta] has been \
\[OpenCurlyDoubleQuote]teleported\[CloseCurlyDoubleQuote] from C to A! \
However, in order for Alice to obtain the correct state,  Bob must send his \
measurement result through \[OpenCurlyDoubleQuote]classical\
\[CloseCurlyDoubleQuote] communication channel (e.g. telephone, internet) to \
Alice, so that Alice can decide what operation she needs to do to change her \
qubit into Bob\[CloseCurlyQuote]s original message. Since classical \
communication channel is required, ",
 StyleBox["this protocol can not teleport a message faster than light.",
  FontWeight->"Bold"],
 " But, in this way, Bob can make sure that Alice receive his message \
correctly without violating the no-cloning theorem, since the original qubit\
\[CloseCurlyQuote]s message are no longer identical with ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Message"},
    "Ket"], " "}]],
  FontWeight->"Bold",ExpressionUUID->"83ae4ec7-f47c-45c8-951a-303518f662fb"],
 "after Bob has performed his measurement. "
}], "Text",
 CellChangeTimes->{
  3.803472377775651*^9, {3.8035224522772455`*^9, 3.803522586058579*^9}, {
   3.8035227746075563`*^9, 3.803522987930007*^9}, {3.803523023257701*^9, 
   3.803523079386664*^9}, {3.8035233472769327`*^9, 3.803523360138878*^9}, {
   3.8035239784148817`*^9, 3.8035239883014045`*^9}, {3.803524077324028*^9, 
   3.803524122153561*^9}, {3.803524172013693*^9, 3.803524236252082*^9}, {
   3.8035243184187775`*^9, 3.803524337900936*^9}, {3.803524391534884*^9, 
   3.8035243964772906`*^9}, {3.8035244892192717`*^9, 3.803524625391714*^9}, {
   3.803524684735073*^9, 3.803524989219329*^9}, {3.8035250503972673`*^9, 
   3.8035251170015726`*^9}, {3.8035253068820763`*^9, 3.803525462232487*^9}, {
   3.8035279809343557`*^9, 3.8035281270707083`*^9}, {3.8035281991875525`*^9, 
   3.8035283003876843`*^9}, {3.8035307881034365`*^9, 
   3.8035307925424604`*^9}, {3.8035308270272694`*^9, 3.803531073770652*^9}, {
   3.803624127661766*^9, 3.8036241323427744`*^9}, {3.8036241835946875`*^9, 
   3.8036242604340315`*^9}, {3.8036298622687035`*^9, 3.803629873432025*^9}, {
   3.8036302254064703`*^9, 3.803630265582842*^9}, {3.8036302997586536`*^9, 
   3.8036303293452673`*^9}, {3.8036303864186115`*^9, 
   3.8036304146754847`*^9}, {3.803630666539054*^9, 3.8036308433175554`*^9}, {
   3.8036308735891347`*^9, 3.80363092722655*^9}, {3.8036910646923637`*^9, 
   3.803691066163389*^9}, {3.8036911128564625`*^9, 3.8036911731924067`*^9}, {
   3.8037048979466305`*^9, 3.803704898346425*^9}, {3.803704943100801*^9, 
   3.8037049528922634`*^9}, {3.8037050097112956`*^9, 
   3.8037050158769655`*^9}, {3.8037050599195724`*^9, 3.803705063630206*^9}, {
   3.8037051212886434`*^9, 
   3.8037052358268166`*^9}},ExpressionUUID->"bb9ed4a0-1854-4eb9-b7e1-\
17ff80a01260"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Project Result: Quantum Teleportation with String", "Subsubsection",
 CellChangeTimes->{{3.8034422976341624`*^9, 3.8034423319679193`*^9}, {
   3.8035254957125187`*^9, 3.8035255183365593`*^9}, 
   3.80353150938494*^9},ExpressionUUID->"469caed8-b655-4bfb-80b3-\
14d7e470aa57"],

Cell[TextData[{
 "This project is motivated by ",
 ButtonBox["Wolfram Physics Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/"], None},
  ButtonNote->"https://www.wolframphysics.org/"],
 ", a quest to find the fundamental law of physics based on hypergraph \
transformation rule. String is a simple one dimensional toy model of this. \
For this reason, finding quantum teleportation in string substitution system \
is actually a preliminary investigation to the same phenomenon in the \
hypergraph case. So, how can we simulate quantum teleportation in string \
substitution system? The basic idea is to introduce a notation where we \
replace 0 with A and 1 with B. But, since a string does not have a natural \
sign (\[PlusMinus]) assigned, we immediately face some difficulties:"
}], "Text",
 CellChangeTimes->{{3.8035255237764363`*^9, 3.8035255406614285`*^9}, 
   3.8035258140346994`*^9, {3.803525869854211*^9, 3.803525913703757*^9}, {
   3.803525948793776*^9, 3.803526006392272*^9}, {3.8035260783532076`*^9, 
   3.8035260811663857`*^9}, {3.803526149140051*^9, 3.803526201211111*^9}, {
   3.803553544345392*^9, 3.8035538990134735`*^9}, {3.8035539290139894`*^9, 
   3.8035539513233466`*^9}, {3.803597023049919*^9, 3.803597085681134*^9}, {
   3.803624297747076*^9, 3.803624328205927*^9}, {3.8036263695836678`*^9, 
   3.803626441848395*^9}, {3.8036309500514913`*^9, 3.803630996191075*^9}, {
   3.803631313399744*^9, 3.8036313134027348`*^9}, {3.803679400891458*^9, 
   3.803679407134796*^9}, {3.803705269160588*^9, 3.8037052712366743`*^9}, {
   3.8037053030837*^9, 
   3.803705363549676*^9}},ExpressionUUID->"3bae0be1-14d7-4e74-8d81-\
7edfbfe3c92e"],

Cell[CellGroupData[{

Cell["How can we generate superposition and entanglement? ", "Item",
 CellChangeTimes->{{3.8035259385502605`*^9, 3.8035259413836575`*^9}, {
  3.8035260114453106`*^9, 3.803526052697049*^9}, {3.80352609569592*^9, 
  3.8035261395795574`*^9}},ExpressionUUID->"fda0892f-2d42-4129-8e58-\
e9853b7a14ac"],

Cell["How can we perform Bell measurement? ", "Item",
 CellChangeTimes->{{3.8035259385502605`*^9, 3.8035259413836575`*^9}, {
  3.8035260114453106`*^9, 3.803526052362959*^9}, {3.8035260838724236`*^9, 
  3.803526125202569*^9}, {3.8035262115321307`*^9, 
  3.8035262115340743`*^9}},ExpressionUUID->"402ddea6-2194-4548-87bd-\
aed9e4e52e2b"],

Cell["\<\
Since string substitution system has a fixed rule, how can we combine initial \
state generation and Bell measurement into a single substitution rule without \
their corresponding rules interfering with each other? \
\>", "Item",
 CellChangeTimes->{{3.8035259385502605`*^9, 3.8035259413836575`*^9}, {
  3.8035260114453106`*^9, 3.803526052362959*^9}, {3.8035260838724236`*^9, 
  3.803526125202569*^9}, {3.8035262127251024`*^9, 3.8035263310592756`*^9}, {
  3.803526390472267*^9, 3.803526423808753*^9}, {3.8035971090456533`*^9, 
  3.803597115367394*^9}},ExpressionUUID->"21994070-eb12-4a72-a304-\
4c6630d05edd"]
}, Open  ]],

Cell["\<\
In this project, I managed to find a string substitution rule that can solve \
all these three problems simultaneously. The codes demonstrating the main \
result of my project is provided below.\
\>", "Text",
 CellChangeTimes->{{3.8035264566820855`*^9, 3.803526527343703*^9}, {
  3.8035265607442646`*^9, 3.803526623716374*^9}, {3.803531147905531*^9, 
  3.803531203170698*^9}, {3.8035539695545044`*^9, 3.8035539712706337`*^9}, {
  3.8035966324877415`*^9, 3.8035966483230762`*^9}, {3.8035971355103226`*^9, 
  3.8035971379187574`*^9}, {3.803618399516813*^9, 3.8036184045644426`*^9}, {
  3.803631018646837*^9, 3.8036310224924803`*^9}, {3.803679558320955*^9, 
  3.803679563491247*^9}, {3.803679601107952*^9, 3.8036796208830347`*^9}, {
  3.8036796672030673`*^9, 3.8036796734757967`*^9}, {3.803687036687689*^9, 
  3.8036870403548107`*^9}},ExpressionUUID->"43468bb0-bf17-448a-b142-\
8462725d07ba"],

Cell["\<\
Drawing evolution graph of string substitution system that simulates quantum \
teleportation\
\>", "CodeText",
 CellChangeTimes->{{3.803632130665717*^9, 
  3.8036321606560497`*^9}},ExpressionUUID->"2c7e70bf-7f24-45cb-ac17-\
eef62970a154"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Specifying", " ", "rule"}], ",", " ", 
    RowBox[{"initial", " ", "state"}], ",", " ", 
    RowBox[{"and", " ", "Bell", " ", "completion", " ", "procedure"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rule", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitialState", " ", "=", "\"\<DC\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BellCompletion", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", " ", 
       RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", 
       RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
       RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", " ", 
       RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", 
       RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<AB\>\""}], ",", " ", 
       RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
       RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<AB\>\""}]}], "}"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "draw", " ", "the", " ", "graph", " ", "with",
      " ", "annotation"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DrawGraph", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EvolVertexList", " ", "=", " ", 
        RowBox[{"VertexList", "[", 
         RowBox[{
          RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", 
           "InitialState", ",", "4", ",", "\"\<EvolutionGraph\>\""}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"TeleportInitState", " ", "=", " ", 
        RowBox[{"FilterRules", "[", 
         RowBox[{"EvolVertexList", ",", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"BellVertex1", " ", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "\[Rule]", " ", "#"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"StringCases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FilterRules", "[", 
               RowBox[{"EvolVertexList", ",", "3"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", "b"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"__", "~~", "\"\<AA\>\""}], ",", 
               RowBox[{"__", "~~", "\"\<BB\>\""}]}], "}"}]}], "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"BellVertex2", " ", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "\[Rule]", " ", "#"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"StringCases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FilterRules", "[", 
               RowBox[{"EvolVertexList", ",", "3"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", "b"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"__", "~~", "\"\<AB\>\""}], ",", 
               RowBox[{"__", "~~", "\"\<BA\>\""}]}], "}"}]}], "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stripMetadata", "[", "expression_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "expression", "]"}], "===", "Rule"}], ",", 
          RowBox[{"Last", "[", "expression", "]"}], ",", "expression"}], 
         "]"}]}], ";", 
       RowBox[{"a", " ", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], 
           "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", 
            "InitialState", ",", "3", ",", "\"\<EvolutionGraph\>\"", ",", 
            RowBox[{
            "\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
            RowBox[{
            "VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], "]"}],
           ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "BellVertex1"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.45", ",", "0.87"}], "]"}]}], "]"}]}],
                    ",", 
                   RowBox[{"FrameMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
                   RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.52", ",", "0.8200000000000001"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{"a", ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "BellVertex2"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{
                    RowBox[{"1", "/", "3"}], ",", "1", ",", "1", ",", ".5"}], 
                    "]"}]}], "]"}]}], ",", 
                   RowBox[{"FrameMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
                   RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.1", ",", "0.8200000000000001"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{"b", ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "TeleportInitState"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.1", ",", "0.7", ",", "3"}], "]"}]}], "]"}]}], 
                   ",", 
                   RowBox[{"FrameMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
                   RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.1", ",", "0.8200000000000001"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", "the", " ", "function"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DrawGraph", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8034426350581417`*^9, 3.8034426642123322`*^9}, {
   3.8034433593898935`*^9, 3.803443361299015*^9}, {3.803443411723054*^9, 
   3.803443463922355*^9}, {3.8034435495497293`*^9, 3.803443597136104*^9}, {
   3.803443821623077*^9, 3.803443871663987*^9}, {3.803444022100918*^9, 
   3.803444075854952*^9}, {3.8034443157812304`*^9, 3.803444447837804*^9}, {
   3.803444512875676*^9, 3.8034446444804707`*^9}, {3.803444679395758*^9, 
   3.8034447254943733`*^9}, {3.8034448843235836`*^9, 
   3.8034449778131647`*^9}, {3.8034450276703095`*^9, 3.803445053559498*^9}, {
   3.803445108772855*^9, 3.803445109754223*^9}, {3.8035251588771825`*^9, 
   3.803525238502618*^9}, {3.8035256021109066`*^9, 3.803525656701886*^9}, {
   3.8035256922716684`*^9, 3.8035257850056334`*^9}, {3.803526348118894*^9, 
   3.803526368479573*^9}, 3.8035266951208243`*^9, {3.8035267281077394`*^9, 
   3.8035267287377243`*^9}, {3.8035267639836655`*^9, 3.803526776222223*^9}, {
   3.8035269273104672`*^9, 3.803527079355946*^9}, 3.8035290794086933`*^9, {
   3.803529132966996*^9, 3.8035293115400105`*^9}, {3.803535879310569*^9, 
   3.8035359029538717`*^9}, {3.8035366883156476`*^9, 
   3.8035367225537524`*^9}, {3.8035367535889683`*^9, 3.80353687835139*^9}, {
   3.8035369101919107`*^9, 3.8035369449970646`*^9}, {3.803537023044797*^9, 
   3.8035370283049135`*^9}, {3.8035966699743524`*^9, 3.8035967614180436`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"804ccb53-1672-4274-ae45-782711e47aeb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXAC", 1 -> "BXBC", 1 -> "DA", 1 -> "DB", 2 -> "AXAA", 
       2 -> "AXAB", 2 -> "BXBA", 2 -> "BXBB", 3 -> "AXAA", 3 -> "AXAB", 3 -> 
       "AXBA", 3 -> "AXBB", 3 -> "BXAA", 3 -> "BXAB", 3 -> "BXBA", 3 -> 
       "BXBB"}, {{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {4, 6}, {2, 7}, {5, 
       7}, {3, 8}, {4, 8}, {3, 9}, {5, 9}, {7, 10}, {6, 11}, {6, 12}, {7, 
       13}, {8, 14}, {9, 15}, {9, 16}, {8, 17}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , (2 -> "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& )}, 
       VertexWeight -> {1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-3.552713678800501*^-14, 
       442.66666666666663`}, {-96.10116145845485, 91.99999999999999}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{553.3333333333334, Automatic}]], "Output",
 CellChangeTimes->{{3.803529228329492*^9, 3.8035292461967106`*^9}, 
   3.803529316329779*^9, 3.8035359037310734`*^9, {3.8035369028590555`*^9, 
   3.803536913839706*^9}, 3.803536948574195*^9, 3.8035370382772827`*^9, 
   3.803596773400339*^9, 3.803682916448897*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"769465f3-0108-4747-9976-e55735a5091c"]
}, Open  ]],

Cell[TextData[{
 "Each downward path in the above graph represents a possible history for the \
state. And the number below/above each string correspond to the state\
\[CloseCurlyQuote]s path weight, which counts the number of possible path one \
can go from initial state \[OpenCurlyDoubleQuote]DC\[CloseCurlyDoubleQuote] \
to the corresponding string. Thus, the bigger the weight, the higher \
probability of obtaining the state. Then, we can understand quantum \
superposition in this model by looking at states and their associated weights \
in each layer. For example, strings on the orange layer actually represent an \
initial state for teleportation protocol with 0 replaced by A and 1 replaced \
by B as we can see below. \n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Initial"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"AAA", "\[PlusMinus]", "AAB"}], "\[PlusMinus]", 
       RowBox[{"BBA", "\[ImplicitPlus]", 
        RowBox[{"\[PlusMinus]", "BBB"}]}]}], ")"}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"AA", "\[PlusMinus]", "BB"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "\[PlusMinus]", "B"}], ")"}], "\[ImplicitPlus]"}]}]}]}]],
  ExpressionUUID->"eb1dab5f-3a53-4b31-9603-e8b9c835d46b"],
 "\n\nUnder the orange layer are the states after Bell measurement. If we \
consider the states in green and red separately, we may factorize each of \
them into,\n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Green"},
    "Ket"], "=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"AAB", "\[PlusMinus]", "ABA"}], "\[PlusMinus]", "BAB"}], 
       "\[PlusMinus]", 
       RowBox[{"BBA", "\[ImplicitPlus]"}]}], ")"}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"A", "\[PlusMinus]", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AB", "\[PlusMinus]", "BA"}], ")"}]}]}]}]],ExpressionUUID->
  "e5811c00-bed3-4aa5-9393-01ec344cc080"],
 "\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Red"},
    "Ket"], "    ", "=", " ", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"AAA", "\[PlusMinus]", "ABB"}], "\[PlusMinus]", 
       RowBox[{"BBB", "\[ImplicitPlus]", 
        RowBox[{"\[PlusMinus]", "ABB"}], "\[ImplicitPlus]"}]}], ")"}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"A", "\[PlusMinus]", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AA", "\[PlusMinus]", "BB"}], ")"}]}]}]}]],ExpressionUUID->
  "0590ea38-0ecd-4e6c-bc9f-65eaa9f1286d"],
 "\n\nThus, Alice qubit state after Bell measurement is proportional to (A\
\[PlusMinus]B). Indeed, the system simulates a teleportation of qubit with \
\[Alpha] = \[Beta] = 1. To control the state we want to teleport, we just \
need to rewrite the rules \[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote] \
\[Rule]\[CloseCurlyDoubleQuote]A\[CloseCurlyDoubleQuote] \[Alpha] times and \
\[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote] \[Rule]\
\[CloseCurlyDoubleQuote]B\[CloseCurlyDoubleQuote] \[Beta] times. For example, \
if Bob wants to teleport  2 |0\[RightAngleBracket]+ 3 |1\[RightAngleBracket] \
to Alice, then we just do,"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQzXM18dSysDeObe1+p0H0lQSRnyB6xe+Zf8F0y1uW
5UD6QBm3HIie0fBWCUTrBO3SANHfuP/pg+j5Gb1mINqvrt8BRK/QEUkG0a/W
6k8C0X8NvbaC6BY3/10gWkoh7z6Ilm95/BhEG/oGPwfRYYyb+FYA6XP394Fp
o5YEJxDtdLXRGURHzTr3G0RPYb8gsBJIt6s4ioLoH2+8wPS0P5mqIDqpvUYL
RAvejpfYAqQXBSwH00KtRxRAdNmDnVog+trDk3og+rbQHH0Q3VBz2wZEn15y
xQlEu8pHl18D0mvuBTaDaIm7zX0g2k/69UEQ7VZ/uvojkL7l7dcAotPmb1L6
DqQn3XutD6JntC7l+AekLcRl+EF0eKC6CIjmrbsqBqKZ5n6WBdFfCuTlQDQA
Jb3Ppg==
  "],ExpressionUUID->"5849fcf5-f9a6-42f1-92db-982aebb103bf"],

Cell["Controlling the superposition of the message\[CloseCurlyQuote]s qubit", \
"CodeText",
 CellChangeTimes->{{3.803632182524168*^9, 3.8036321943601007`*^9}, {
  3.8036827646632643`*^9, 
  3.80368276505114*^9}},ExpressionUUID->"d2c95cd3-4366-4762-9ae2-\
d7e71697538b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawGraph", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8035293399683285`*^9, 3.803529384766429*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"0f125b8b-6120-4827-b700-8f17fc747ff9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXAC", 1 -> "BXBC", 1 -> "DA", 1 -> "DB", 2 -> "AXAA", 
       2 -> "AXAB", 2 -> "BXBA", 2 -> "BXBB", 3 -> "AXAA", 3 -> "AXAB", 3 -> 
       "AXBA", 3 -> "AXBB", 3 -> "BXAA", 3 -> "BXAB", 3 -> "BXBA", 3 -> 
       "BXBB"}, {{{9, 16}, {5, 9}, {3, 8}, {3, 9}, {9, 15}, {2, 6}, {1, 2}, {
       1, 3}, {1, 5}, {8, 17}, {6, 12}, {6, 11}, {8, 14}, {4, 6}, {4, 8}, {1, 
       4}, {7, 10}, {7, 13}, {2, 7}, {5, 7}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , (2 -> "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& )}, 
       VertexWeight -> {1, 1, 1, 2, 3, 4, 6, 4, 6, 6, 4, 4, 6, 4, 6, 6, 4}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-3.552713678800501*^-14, 
       436.26666666666677`}, {-94.75172456447098, 91.00000000000009}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{545.3333333333335, Automatic}]], "Output",
 CellChangeTimes->{{3.8035293822293453`*^9, 3.8035293853348417`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"7de98fb9-584e-4a1e-8d0c-d5c8fa96b422"]
}, Open  ]],

Cell[TextData[{
 "Now, the factorization becomes\n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Green"},
    "Ket"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"4", "AAB"}], "\[PlusMinus]", 
       RowBox[{"4", "ABA"}]}], "\[PlusMinus]", 
      RowBox[{"6", "BAB"}]}], "\[PlusMinus]", 
     RowBox[{"6", 
      RowBox[{"BBA", "\[ImplicitPlus]"}]}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "A"}], "\[PlusMinus]", 
       RowBox[{"3", "B"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AB", "\[PlusMinus]", "BA"}], ")"}]}]}]}]],ExpressionUUID->
  "e17fd901-f205-4d63-9ff9-be979f37d889"],
 "\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Red"},
    "Ket"], "   ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"6", "AAA"}], "\[PlusMinus]", 
       RowBox[{"6", "ABB"}]}], "\[PlusMinus]", 
      RowBox[{"4", "BAA"}]}], "\[PlusMinus]", 
     RowBox[{"4", 
      RowBox[{"BBB", "\[ImplicitPlus]", " ", "\[ImplicitPlus]"}]}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "A"}], "\[PlusMinus]", 
       RowBox[{"2", "B"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AA", "\[PlusMinus]", "BB"}], ")"}]}]}]}]],ExpressionUUID->
  "51d28c0c-85dc-462b-a8f0-1927ab3cae32"],
 "\n\nIn order for Alice to get Bob\[CloseCurlyQuote]s message correctly, Bob \
must tell Alice about his measurement outcome. If Bob \
\[OpenCurlyDoubleQuote]measure\[CloseCurlyDoubleQuote] green, then Alice does \
not need to do anything to her qubit, whereas if Bob \
\[OpenCurlyDoubleQuote]measure\[CloseCurlyDoubleQuote] red, Alice needs to \
perform string transformation A\[Rule]B, and B\[Rule]A. As previously \
mentioned, it is for this reason, Bob can not teleport his message faster \
than light. \n\nThis teleportation protocol always work regardless of spatial \
separation between Alice and Bob. To see this, just increase the number of X \
in the rule D\[Rule]AXA and D\[Rule]BXB."
}], "Text",
 CellChangeTimes->{{3.8035294040018587`*^9, 3.8035295312905703`*^9}, {
  3.803529593428549*^9, 3.8035296307956333`*^9}, {3.803531647987611*^9, 
  3.803531687726927*^9}, {3.803531726188395*^9, 3.8035319353568287`*^9}, {
  3.803531989064783*^9, 3.8035320111773853`*^9}, {3.8035320863075905`*^9, 
  3.8035321711878595`*^9}, {3.803554347765708*^9, 3.8035544134677615`*^9}, {
  3.8036797742013206`*^9, 3.803679783464381*^9}, {3.803679821176575*^9, 
  3.803679863767638*^9}, {3.8036914250449347`*^9, 
  3.8036914302281256`*^9}},ExpressionUUID->"d70bccf0-fe2f-4f06-bdf4-\
a34d027e7792"],

Cell["Increasing spatial separation between Alice and Bob", "CodeText",
 CellChangeTimes->{{3.803632209919908*^9, 
  3.8036322211005754`*^9}},ExpressionUUID->"36db9fb0-2f59-482e-8c3c-\
b079b61731cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXXXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXXXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawGraph", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8035369878732347`*^9, 3.8035369968581*^9}, {
  3.803537117606492*^9, 3.803537118999848*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"df4318bd-d09a-4af8-9bd2-996dd925dc75"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXXXAC", 1 -> "BXXXBC", 1 -> "DA", 1 -> "DB", 2 -> 
       "AXXXAA", 2 -> "AXXXAB", 2 -> "BXXXBA", 2 -> "BXXXBB", 3 -> "AXXXAA", 
       3 -> "AXXXAB", 3 -> "AXXXBA", 3 -> "AXXXBB", 3 -> "BXXXAA", 3 -> 
       "BXXXAB", 3 -> "BXXXBA", 3 -> "BXXXBB"}, {{{6, 12}, {7, 10}, {7, 13}, {
       5, 7}, {6, 11}, {8, 17}, {2, 6}, {2, 7}, {1, 2}, {1, 5}, {8, 14}, {4, 
       6}, {4, 8}, {1, 4}, {9, 15}, {9, 16}, {5, 9}, {3, 8}, {3, 9}, {1, 3}}, 
       Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , (3 -> "AXXXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXXXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXXXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXXXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXXXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "AXXXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "AXXXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXXXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXXXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXXXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXXXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXXXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& )}, 
       VertexWeight -> {1, 1, 1, 2, 3, 4, 6, 4, 6, 6, 4, 4, 6, 4, 6, 6, 4}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-3.552713678800501*^-14, 
       420.59999999999815`}, {-90.06370271692624, 86.99999999999993}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{525.7499999999977, Automatic}]], "Output",
 CellChangeTimes->{
  3.8035369973446355`*^9, 3.8035370420699916`*^9, 3.803537119565056*^9, {
   3.803682888613168*^9, 3.8036829209906855`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"dbc5c4b3-6f14-4c02-83df-21ecbf8450df"]
}, Open  ]],

Cell["\<\
Now that we have seen the above string substitution system work properly, let\
\[CloseCurlyQuote]s go deeper. The evolution of the strings in this system \
can be divided into two phase, initial state preparation (up to the orange \
layer) and Bell measurement (the green and red layer). Let\[CloseCurlyQuote]s \
consider the causal multiway graph for the initial state preparation. \
\>", "Text",
 CellChangeTimes->{{3.8036427577068806`*^9, 3.803642815709893*^9}, {
  3.803679813039804*^9, 3.803679816285636*^9}, {3.803682448129937*^9, 
  3.803682737227172*^9}, {3.8036836630081263`*^9, 3.8036836639044857`*^9}, {
  3.8036914609657307`*^9, 3.8036915463723993`*^9}, {3.803705629664872*^9, 
  3.803705633916958*^9}},ExpressionUUID->"480fd69c-ecff-4ae7-9859-\
b605c70c8d8d"],

Cell["Causal multiway graph of initial state preparation", "CodeText",
 CellChangeTimes->{{3.803682744984952*^9, 
  3.803682782792365*^9}},ExpressionUUID->"d48fc7a8-a2bd-4a7e-b254-\
f8a910ebe27f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
  "rule", ",", " ", "InitialState", ",", "2", ",", 
   "\"\<EvolutionCausalGraph\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.803682786405662*^9, 3.803682817137539*^9}, {
  3.803682852859166*^9, 3.8036828653491945`*^9}, {3.8036829426461763`*^9, 
  3.8036829589902525`*^9}, {3.8036829949643526`*^9, 3.8036830216421275`*^9}, {
  3.8036869198557243`*^9, 3.8036869227589407`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"fa700034-57b3-4e3a-bba8-4225a26e7aa4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", {
       "C" -> "A", "C", {"AXA", ""}}, {"C" -> "B", "C", {"AXA", ""}}, {
       "C" -> "A", "C", {"BXB", ""}}, {"C" -> "B", "C", {"BXB", ""}}, {
       "D" -> "AXA", "D", {"", "A"}}, {"D" -> "BXB", "D", {"", "A"}}, {
       "D" -> "AXA", "D", {"", "B"}}, {"D" -> "BXB", "D", {"", "B"}}, {
       "C" -> "A", "C", {"D", ""}}, {"C" -> "B", "C", {"D", ""}}, {
       "D" -> "AXA", "D", {"", "C"}}, {"D" -> "BXB", "D", {"", "C"}}}, {{{4, 
       10}, {4, 11}, {5, 12}, {5, 13}, {2, 14}, {2, 15}, {3, 16}, {3, 17}, {1,
        18}, {1, 19}, {1, 20}, {1, 21}, {10, 6}, {12, 7}, {18, 2}, {11, 8}, {
       13, 9}, {19, 3}, {14, 6}, {16, 8}, {20, 4}, {15, 7}, {17, 9}, {21, 5}},
        Null}, {
      EdgeStyle -> {
        DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {"AXAC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.01906487232574189], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-2., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-3., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-2., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$21"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-7.105427357601002*^-15, 
       351.59999999999906`}, {-100.79999999999949`, 97.00000000000001}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{439.4999999999988, Automatic}]], "Output",
 CellChangeTimes->{{3.803682887702895*^9, 3.8036829595346637`*^9}, {
   3.8036830036177683`*^9, 3.803683023381153*^9}, 3.8036869235851383`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"4d286a7c-07cf-48de-86cc-b4bdc44dc3aa"]
}, Open  ]],

Cell[TextData[{
 "The interpretation of the rule D\[Rule]AXA and D\[Rule]BXB is that some \
\[OpenCurlyDoubleQuote]origin\[CloseCurlyDoubleQuote] state D produce a Bell \
state, which are then carried by Alice and Bob to different spatial \
locations. Meanwhile, the message qubit state C can be expressed in terms of \
superposition of string basis A and B ( By the absence of orange arrows \
between any of the yellow boxes, we can infer that each updating events are \
causally independent. Thus, each path in the multiway graph, which represent \
the possible system\[CloseCurlyQuote]s histories, do not interact with one \
another. They nevertheless generate an entangled state that may be causally \
connected due to their common ancestry in the multiway system. \
\[OpenCurlyDoubleQuote]Entanglement map\[CloseCurlyDoubleQuote] of states in \
a multiway system is illustrated by its ",
 ButtonBox["branchial graph",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-concept-of-branchial-graphs/"], 
    None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-concept-of-branchial-graphs/"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8036830633264546`*^9, 3.803683435944917*^9}, {
  3.8036835303883715`*^9, 3.8036836447432237`*^9}, {3.8036837165402927`*^9, 
  3.8036837900665646`*^9}, {3.803683826711342*^9, 3.8036839870244646`*^9}, {
  3.8036840280554066`*^9, 3.803684054335722*^9}, {3.803684104748723*^9, 
  3.803684111356166*^9}, {3.803684538810404*^9, 3.803684603701357*^9}, {
  3.803686292824942*^9, 3.8036863300185547`*^9}, {3.803686445258136*^9, 
  3.803686596550767*^9}, {3.8036867506504655`*^9, 3.803686750657509*^9}, {
  3.803686845713875*^9, 3.803686871874375*^9}, {3.803691555552726*^9, 
  3.8036916007161446`*^9}, {3.803705646543711*^9, 3.8037056480145464`*^9}, {
  3.8037139764581375`*^9, 3.803714099093072*^9}, {3.803714138995326*^9, 
  3.803714165409412*^9}},ExpressionUUID->"dc5318eb-1cba-4d91-a103-\
eebc354d1bba"],

Cell["Branchial graph of the initial state", "CodeText",
 CellChangeTimes->{{3.8036871222303586`*^9, 
  3.803687129516683*^9}},ExpressionUUID->"7dc05339-1e8e-48a3-89c4-\
6453dadf6775"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
  "rule", ",", " ", "InitialState", ",", "2", ",", "\"\<BranchialGraph\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8036869005083303`*^9, 3.803686929715313*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"5d2bb8f7-26e3-41e5-b7ef-f39504bb911e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"AXAA", "AXAB", "BXBA", "BXBB"}, {
      Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
         Hue[0.89, 0.97, 0.71]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Hue[0.89, 0.97, 0.71], 
       LineBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 1.0106430996148606`*^-15}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-7.044813998280222*^-16, 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {6.049014748177263*^-16, -1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., -1.133107779529596*^-15}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$4"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.105427357601002*^-15, 
       171.5999999999978}, {-80.89999999999776, 77.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{214.49999999999721`, Automatic}]], "Output",
 CellChangeTimes->{{3.803686916477261*^9, 3.8036869300761786`*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"af4f80c3-f9d5-43c6-a758-c35bb101ccb0"]
}, Open  ]],

Cell[TextData[{
 "By imposing measurement, we introduce causal relations between updating \
events in different branches. The final form of the multiway causal graph \
would be determined by our choice of measurement. In general, different \
choice of measurement correspond to different \[OpenCurlyDoubleQuote]layering\
\[CloseCurlyDoubleQuote] of the multiway system (See ",
 ButtonBox["quantum measurement",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/potential-\
relation-to-physics/quantum-measurement/"], None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/potential-relation-\
to-physics/quantum-measurement/"],
 "). In the ",
 ButtonBox["quantum formalism of Wolfram model,",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/wolframphysics/Documents/some-\
quantum-mechanical-properties-of-the-wolfram-model.pdf"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/wolframphysics/Documents/some-quantum-\
mechanical-properties-of-the-wolfram-model.pdf"],
 " measurement is imposed by inducing ",
 ButtonBox["Knuth-Bendix completion",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/wolframphysics/Documents/some-\
quantum-mechanical-properties-of-the-wolfram-model.pdf"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/wolframphysics/Documents/some-quantum-\
mechanical-properties-of-the-wolfram-model.pdf"],
 " between events on the same layer. Until now, we have used default layering \
which correspond to computational basis measurement frame. However, in our \
case, we need to perform Bell measurement to carry out the teleportation \
protocol. It is not at all clear how can one defines layering that correspond \
to Bell basis measurement frame in a string substitution system. However, I \
managed to solve this problem by customizing the Knuth-Bendix completion map \
on a default layering instead of customizing the system\[CloseCurlyQuote]s \
layering itself. I define the following ",
 StyleBox["Bell completion map.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{
  3.8036867835394*^9, {3.8036871137771416`*^9, 3.803687116866124*^9}, {
   3.803687182953666*^9, 3.803687189570927*^9}, {3.803687260233127*^9, 
   3.803687304126845*^9}, {3.8036880176030416`*^9, 3.803688129508906*^9}, {
   3.803691609868182*^9, 3.8036916523141537`*^9}, {3.8036917022418566`*^9, 
   3.8036917300328207`*^9}, {3.803705692838442*^9, 3.8037056990932837`*^9}, {
   3.8037057318249483`*^9, 3.803705733045906*^9}, {3.8037057912591147`*^9, 
   3.803705815161242*^9}},ExpressionUUID->"13df9533-a5e2-495c-8224-\
3b3d4e676322"],

Cell["An illustration of Bell completion map", "CodeText",
 CellChangeTimes->{{3.803684208141538*^9, 3.8036842238867083`*^9}, {
  3.8036917717466135`*^9, 
  3.8036917729216466`*^9}},ExpressionUUID->"43b2498a-fc35-4b0e-9090-\
e236179ad445"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{"BellCompletion", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<AA\>\"", ",", "\"\<AB\>\"", ",", "\"\<BA\>\"", ",", "\"\<BB\>\""}], 
    "}"}], ",", "1", ",", " ", "\"\<StatesGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8036841492262087`*^9, 3.8036841812797947`*^9}, {
  3.8036853709252815`*^9, 3.803685371903472*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"ec76fac3-bd7c-4aec-be4d-a0468e756f0a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AB", "AA", "BA", "BB"}, {{{1, 2}, {3, 2}, {2, 1}, {4, 1}, {2, 3}, {4, 
       3}, {1, 4}, {3, 4}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.5332572940331453, -0.15130721083010584`}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.8499026954602148, 0.5212198069801938}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$2", Automatic, Center], {
          0.5246841946656199, 0.17737465309847977`}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation[
          "VertexID$2", Automatic, Center], {-0.1497024459406013, 
          0.49487847411401686`}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.17897668933305574`, 0.5045062310273692}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.49562209076013136`, 1.1770332488376771`}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          1.178702989616798, 0.5306681794761109}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          0.504316349010579, 0.8481720004916518}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1.0286672453063102`, 0.026067442268373875`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.02927424339245399, 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 0.9993847051413874}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.999938439770701, 1.0258205441879404`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$4"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-0.2393066909899053, 
       178.2393066909899}, {-90.2393066909899, 88.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{224.24999999999847`, Automatic}]], "Output",
 CellChangeTimes->{3.8036841823834057`*^9, 3.803685372871176*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"230dc2ee-cd7f-48cf-af06-21ca20ddf143"]
}, Open  ]],

Cell["\<\
Note that AA and BB as well as AB and BA are not perceived to be equivalent. \
There is a nice interpretation for this completion map, namely we are \
collapsing the system\[CloseCurlyQuote]s state into either a superposition of \
AA and BB or superposition of AB and BA. And this is exactly what Bell \
measurement does! The exciting part is that this way of thinking can be \
generalized into making measurement on any basis as long as we can express \
the basis in terms of superposition of computational basis states! If we now \
impose the Bell completion map onto our initial state, we obtain quantum \
teleportation phenomenon as demonstrated earlier. Additionally, the final \
causal multiway graph of the system turns into a beautiful and symmetric \
network. \
\>", "Text",
 CellChangeTimes->{{3.8036846223200727`*^9, 3.8036847562401543`*^9}, {
  3.803684848509742*^9, 3.803684877850457*^9}, {3.803684934902114*^9, 
  3.803685055216903*^9}, {3.803685091652238*^9, 3.803685115982113*^9}, {
  3.8036854285385876`*^9, 3.8036854292624364`*^9}, {3.8036873191041994`*^9, 
  3.803687351755149*^9}, {3.8036881733730755`*^9, 3.8036881735015936`*^9}, {
  3.803705865627343*^9, 
  3.803705960896109*^9}},ExpressionUUID->"326904fb-5391-45da-8902-\
a423d3d64625"],

Cell["Causal multiway graph after Bell completion", "CodeText",
 CellChangeTimes->{{3.803691752016958*^9, 
  3.8036917655447626`*^9}},ExpressionUUID->"46e11b04-f007-4775-9576-\
5e95af777fe4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stripMetadata", "[", "expression_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "expression", "]"}], "===", "Rule"}], ",", 
     RowBox[{"Last", "[", "expression", "]"}], ",", "expression"}], "]"}]}], 
  ";", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", "InitialState", 
      ",", "3", ",", "\"\<EvolutionCausalGraph\>\""}], "]"}], ",", 
    RowBox[{"VertexShapeFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "\"\<AXBA\>\"", ",", "\"\<BXAA\>\"", ",", " ", "\"\<BXAB\>\"", ",", 
          " ", "\"\<AXBB\>\""}], "}"}]}], "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Framed", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
               RowBox[{"Hue", "[", 
                RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Background", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                RowBox[{"Hue", "[", 
                 RowBox[{"0", ",", "0.45", ",", "0.87"}], "]"}]}], "]"}]}], 
             ",", 
             RowBox[{"FrameMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2", ",", "2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                RowBox[{"Hue", "[", 
                 RowBox[{"0", ",", "0.52", ",", "0.8200000000000001"}], 
                 "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8036853533488226`*^9, 3.8036853541742797`*^9}, {
  3.803685468402881*^9, 3.8036855496178026`*^9}, {3.8036855897534885`*^9, 
  3.803685653083412*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"3dc861aa-9566-4d80-8bc1-379a28f5b9c3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", 
       "AXBA", "AXBB", "BXAA", "BXAB", {"AA" -> "AB", "AA", {"AX", ""}}, {
       "AA" -> "BA", "AA", {"AX", ""}}, {"AB" -> "AA", "AB", {"AX", ""}}, {
       "AB" -> "BB", "AB", {"AX", ""}}, {"C" -> "A", "C", {"AXA", ""}}, {
       "C" -> "B", "C", {"AXA", ""}}, {"BA" -> "AA", "BA", {"BX", ""}}, {
       "BA" -> "BB", "BA", {"BX", ""}}, {"BB" -> "AB", "BB", {"BX", ""}}, {
       "BB" -> "BA", "BB", {"BX", ""}}, {"C" -> "A", "C", {"BXB", ""}}, {
       "C" -> "B", "C", {"BXB", ""}}, {"D" -> "AXA", "D", {"", "A"}}, {
       "D" -> "BXB", "D", {"", "A"}}, {"D" -> "AXA", "D", {"", "B"}}, {
       "D" -> "BXB", "D", {"", "B"}}, {"C" -> "A", "C", {"D", ""}}, {
       "C" -> "B", "C", {"D", ""}}, {"D" -> "AXA", "D", {"", "C"}}, {
       "D" -> "BXB", "D", {"", "C"}}}, {{{6, 14}, {6, 15}, {8, 16}, {8, 17}, {
       4, 18}, {4, 19}, {7, 20}, {7, 21}, {9, 22}, {9, 23}, {5, 24}, {5, 
       25}, {2, 26}, {2, 27}, {3, 28}, {3, 29}, {1, 30}, {1, 31}, {1, 32}, {1,
        33}, {14, 8}, {15, 10}, {16, 6}, {17, 11}, {20, 12}, {21, 9}, {22, 
       13}, {23, 7}, {18, 6}, {18, 14}, {18, 15}, {24, 7}, {24, 20}, {24, 
       21}, {30, 2}, {30, 14}, {30, 15}, {30, 20}, {30, 21}, {19, 8}, {19, 
       16}, {19, 17}, {25, 9}, {25, 22}, {25, 23}, {31, 3}, {31, 16}, {31, 
       17}, {31, 22}, {31, 23}, {26, 6}, {26, 14}, {26, 15}, {28, 8}, {28, 
       16}, {28, 17}, {32, 4}, {32, 14}, {32, 15}, {32, 16}, {32, 17}, {27, 
       7}, {27, 20}, {27, 21}, {29, 9}, {29, 22}, {29, 23}, {33, 5}, {33, 
       20}, {33, 21}, {33, 22}, {33, 23}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAB", {"AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "BA", "AA", {"AX", ""}}, "AXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBB", {"BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "AA", "BA", {"BX", ""}}, "BXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAB", {"AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "BB", "BA", {"BX", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBB", {"BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"AB" -> "BB", "AB", {"AX", ""}}, "AXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBA", {"BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "AB", "AA", {"AX", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBA", {"BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BB" -> "AB", "BB", {"BX", ""}}, "BXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"BB" -> "BA", "BB", {"BX", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AB" -> "AA", "AB", {"AX", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, GraphLayout -> {"Dimension" -> 2}, 
       PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {{"C" -> "B", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "BA" -> "BB", "BA", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "BA" -> "AA", "BA", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXAB" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), "DC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "AA" -> "BA", "AA", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "BB" -> "BA", "BB", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXBB" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), {
          "AB" -> "BB", "AB", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "BB" -> "AB", "BB", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "AB" -> "AA", "AB", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXAA" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "AA" -> "AB", "AA", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXBA" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.021623018537877372`], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$31", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$32", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$33", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$26", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$27", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$28", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$29", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$23", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.465817985598249, 2.2071960555646712`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.463767503744226, 4.027022378609731}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.4673414073177504`, 0.42477072961167783`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.931966091916343, 2.2243073707268195`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.2205502291076034`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.128153955796733, 2.895182442400397}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.8022376451253572, 2.8948136300057596`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.133387885532272, 1.5407951190753808`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.79964207461105, 1.5395108284469827`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXBA\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {4.67650375090432, 4.412863693034111}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXBB\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {4.650039232150174, 0.001731336595833799}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXAA\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {0.2519224124504911, 4.41051996710136}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXAB\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {0.28376882007880644`, 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AA\""}, {"\"AB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.7199803444005415`, 2.807368410004851}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AA\""}, {"\"BA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.9277123242376617`, 3.4429841105145518`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AB\""}, {"\"AA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.728267567105271, 1.6281918503395258`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AB\""}, {"\"BB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.9254834394944824`, 0.9887386075796751}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4.671601269829116, 3.049710495321035}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4.6720306821128705`, 1.393239938768212}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BA\""}, {"\"AA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.0022552684581896`, 3.441256038388996}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BA\""}, {"\"BB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.210291107146872, 2.808164638500914}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$21"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BB\""}, {"\"AB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.00789000772068, 0.9855048589139426}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$22"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BB\""}, {"\"BA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.2043934525046853`, 1.6264875864539659`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$23"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.2583136283449301, 3.0470726853670413`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$24"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.2612621341179211, 1.3898421618991041`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$25"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.521195281199115, 3.697001257130781}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$26"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.4050483810953727`, 3.701777020515179}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$27"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.522796767902296, 0.7352265464573402}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$28"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.4114859862611298`, 0.7342594804821949}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$29"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2.465326336634388, 3.2054145170615382`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$30"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2.4664197472504497`, 1.2170441004866293`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$31"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.8398738366671488`, 2.2198180038447117`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$32"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.0920504267682594`, 2.2177657620731064`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$33"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-1.7763568394002505`*^-15, 
       412.1999999999984}, {-181.13511139784583`, 176.79000000000002`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{515.2499999999981, Automatic}]], "Output",
 CellChangeTimes->{
  3.803685560146653*^9, {3.8036856160525513`*^9, 3.803685653925234*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"55dc45c0-2708-4175-9bcc-fb0c6a9e332a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", "InitialState", ",", 
   "3", ",", "\"\<EvolutionCausalGraphStructure\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.803685133566905*^9, 3.8036852140274787`*^9}, {
  3.8036854097239976`*^9, 3.803685411788469*^9}, {3.8036855290475073`*^9, 
  3.803685545996517*^9}, {3.8036869408505545`*^9, 3.80368694354819*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"cb468396-cacf-47cc-8892-44f022760d28"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", 
       "AXBA", "AXBB", "BXAA", "BXAB", {"AA" -> "AB", "AA", {"AX", ""}}, {
       "AA" -> "BA", "AA", {"AX", ""}}, {"AB" -> "AA", "AB", {"AX", ""}}, {
       "AB" -> "BB", "AB", {"AX", ""}}, {"C" -> "A", "C", {"AXA", ""}}, {
       "C" -> "B", "C", {"AXA", ""}}, {"BA" -> "AA", "BA", {"BX", ""}}, {
       "BA" -> "BB", "BA", {"BX", ""}}, {"BB" -> "AB", "BB", {"BX", ""}}, {
       "BB" -> "BA", "BB", {"BX", ""}}, {"C" -> "A", "C", {"BXB", ""}}, {
       "C" -> "B", "C", {"BXB", ""}}, {"D" -> "AXA", "D", {"", "A"}}, {
       "D" -> "BXB", "D", {"", "A"}}, {"D" -> "AXA", "D", {"", "B"}}, {
       "D" -> "BXB", "D", {"", "B"}}, {"C" -> "A", "C", {"D", ""}}, {
       "C" -> "B", "C", {"D", ""}}, {"D" -> "AXA", "D", {"", "C"}}, {
       "D" -> "BXB", "D", {"", "C"}}}, {{{6, 14}, {6, 15}, {8, 16}, {8, 17}, {
       4, 18}, {4, 19}, {7, 20}, {7, 21}, {9, 22}, {9, 23}, {5, 24}, {5, 
       25}, {2, 26}, {2, 27}, {3, 28}, {3, 29}, {1, 30}, {1, 31}, {1, 32}, {1,
        33}, {14, 8}, {15, 10}, {16, 6}, {17, 11}, {20, 12}, {21, 9}, {22, 
       13}, {23, 7}, {18, 6}, {18, 14}, {18, 15}, {24, 7}, {24, 20}, {24, 
       21}, {30, 2}, {30, 14}, {30, 15}, {30, 20}, {30, 21}, {19, 8}, {19, 
       16}, {19, 17}, {25, 9}, {25, 22}, {25, 23}, {31, 3}, {31, 16}, {31, 
       17}, {31, 22}, {31, 23}, {26, 6}, {26, 14}, {26, 15}, {28, 8}, {28, 
       16}, {28, 17}, {32, 4}, {32, 14}, {32, 15}, {32, 16}, {32, 17}, {27, 
       7}, {27, 20}, {27, 21}, {29, 9}, {29, 22}, {29, 23}, {33, 5}, {33, 
       20}, {33, 21}, {33, 22}, {33, 23}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAB", {"AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "BA", "AA", {"AX", ""}}, "AXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBB", {"BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "AA", "BA", {"BX", ""}}, "BXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAB", {"AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "BB", "BA", {"BX", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBB", {"BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"AB" -> "BB", "AB", {"AX", ""}}, "AXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBA", {"BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "AB", "AA", {"AX", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBA", {"BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BB" -> "AB", "BB", {"BX", ""}}, "BXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"BB" -> "BA", "BB", {"BX", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AB" -> "AA", "AB", {"AX", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, GraphLayout -> {"Dimension" -> 2}, 
       PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {{"C" -> "B", "C", {"D", ""}} -> Automatic, 
         "AXAB" -> Automatic, {"BA" -> "BB", "BA", {"BX", ""}} -> 
         Automatic, {"D" -> "AXA", "D", {"", "A"}} -> 
         Automatic, {"C" -> "B", "C", {"AXA", ""}} -> 
         Automatic, {"BA" -> "AA", "BA", {"BX", ""}} -> Automatic, "BXBB" -> 
         Automatic, "BXAB" -> Automatic, "DC" -> Automatic, "AXAC" -> 
         Automatic, {"AA" -> "BA", "AA", {"AX", ""}} -> 
         Automatic, {"C" -> "A", "C", {"D", ""}} -> 
         Automatic, {"C" -> "B", "C", {"BXB", ""}} -> 
         Automatic, {"C" -> "A", "C", {"AXA", ""}} -> 
         Automatic, {"D" -> "BXB", "D", {"", "C"}} -> Automatic, "BXBA" -> 
         Automatic, "DB" -> Automatic, {"BB" -> "BA", "BB", {"BX", ""}} -> 
         Automatic, {"D" -> "BXB", "D", {"", "A"}} -> Automatic, "AXBB" -> 
         Automatic, {"AB" -> "BB", "AB", {"AX", ""}} -> 
         Automatic, {"BB" -> "AB", "BB", {"BX", ""}} -> Automatic, "BXBC" -> 
         Automatic, {"AB" -> "AA", "AB", {"AX", ""}} -> Automatic, "BXAA" -> 
         Automatic, {"D" -> "AXA", "D", {"", "B"}} -> Automatic, "AXAA" -> 
         Automatic, {"D" -> "AXA", "D", {"", "C"}} -> 
         Automatic, {"AA" -> "AB", "AA", {"AX", ""}} -> Automatic, "DA" -> 
         Automatic, {"D" -> "BXB", "D", {"", "B"}} -> Automatic, "AXBA" -> 
         Automatic, {"C" -> "A", "C", {"BXB", ""}} -> Automatic}, 
       VertexStyle -> {{"C" -> "A", "C", {"BXB", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"BB" -> "AB", "BB", {"BX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"BA" -> "BB", "BA", {"BX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"C" -> "B", "C", {"BXB", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"C" -> "A", "C", {"AXA", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "AXA", "D", {"", "C"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"C" -> "A", "C", {"D", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "BXB", "D", {"", "B"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AA" -> "AB", "AA", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "AXAC" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "AXAA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "DC" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"C" -> "B", "C", {"AXA", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "BXB", "D", {"", "A"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AB" -> "BB", "AB", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "AXA", "D", {"", "B"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "BXBA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "AXBB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "DB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "BXAB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "AXAB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "BXAA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"D" -> "BXB", "D", {"", "C"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "AXBA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"BA" -> "AA", "BA", {"BX", ""}} -> 
         Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "BXBB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"BB" -> "BA", "BB", {"BX", ""}} -> 
         Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "DA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "BXBC" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"C" -> "B", "C", {"D", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AA" -> "BA", "AA", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AB" -> "AA", "AB", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "AXA", "D", {"", "A"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Arrowheads[0.021623018537877372`], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$31", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$32", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$33", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$26", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$27", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$28", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$29", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$23", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        StyleBox[
         DiskBox[{2.465817985598249, 2.2071960555646712`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$1"], 
       TagBox[
        StyleBox[
         DiskBox[{2.463767503744226, 4.027022378609731}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$2"], 
       TagBox[
        StyleBox[
         DiskBox[{2.4673414073177504`, 0.42477072961167783`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$3"], 
       TagBox[
        StyleBox[
         DiskBox[{4.931966091916343, 2.2243073707268195`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$4"], 
       TagBox[
        StyleBox[
         DiskBox[{0., 2.2205502291076034`}, 0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$5"], 
       TagBox[
        StyleBox[
         DiskBox[{4.128153955796733, 2.895182442400397}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$6"], 
       TagBox[
        StyleBox[
         DiskBox[{0.8022376451253572, 2.8948136300057596`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$7"], 
       TagBox[
        StyleBox[
         DiskBox[{4.133387885532272, 1.5407951190753808`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$8"], 
       TagBox[
        StyleBox[
         DiskBox[{0.79964207461105, 1.5395108284469827`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$9"], 
       TagBox[
        StyleBox[
         DiskBox[{4.67650375090432, 4.412863693034111}, 0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$10"], 
       TagBox[
        StyleBox[
         DiskBox[{4.650039232150174, 0.001731336595833799}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$11"], 
       TagBox[
        StyleBox[
         DiskBox[{0.2519224124504911, 4.41051996710136}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$12"], 
       TagBox[
        StyleBox[
         DiskBox[{0.28376882007880644`, 0.}, 0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$13"], 
       TagBox[
        StyleBox[
         DiskBox[{3.7199803444005415`, 2.807368410004851}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$14"], 
       TagBox[
        StyleBox[
         DiskBox[{3.9277123242376617`, 3.4429841105145518`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$15"], 
       TagBox[
        StyleBox[
         DiskBox[{3.728267567105271, 1.6281918503395258`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$16"], 
       TagBox[
        StyleBox[
         DiskBox[{3.9254834394944824`, 0.9887386075796751}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$17"], 
       TagBox[
        StyleBox[
         DiskBox[{4.671601269829116, 3.049710495321035}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$18"], 
       TagBox[
        StyleBox[
         DiskBox[{4.6720306821128705`, 1.393239938768212}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$19"], 
       TagBox[
        StyleBox[
         DiskBox[{1.0022552684581896`, 3.441256038388996}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$20"], 
       TagBox[
        StyleBox[
         DiskBox[{1.210291107146872, 2.808164638500914}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$21"], 
       TagBox[
        StyleBox[
         DiskBox[{1.00789000772068, 0.9855048589139426}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$22"], 
       TagBox[
        StyleBox[
         DiskBox[{1.2043934525046853`, 1.6264875864539659`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$23"], 
       TagBox[
        StyleBox[
         DiskBox[{0.2583136283449301, 3.0470726853670413`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$24"], 
       TagBox[
        StyleBox[
         DiskBox[{0.2612621341179211, 1.3898421618991041`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$25"], 
       TagBox[
        StyleBox[
         DiskBox[{3.521195281199115, 3.697001257130781}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$26"], 
       TagBox[
        StyleBox[
         DiskBox[{1.4050483810953727`, 3.701777020515179}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$27"], 
       TagBox[
        StyleBox[
         DiskBox[{3.522796767902296, 0.7352265464573402}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$28"], 
       TagBox[
        StyleBox[
         DiskBox[{1.4114859862611298`, 0.7342594804821949}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$29"], 
       TagBox[
        StyleBox[
         DiskBox[{2.465326336634388, 3.2054145170615382`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$30"], 
       TagBox[
        StyleBox[
         DiskBox[{2.4664197472504497`, 1.2170441004866293`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$31"], 
       TagBox[
        StyleBox[
         DiskBox[{3.8398738366671488`, 2.2198180038447117`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$32"], 
       TagBox[
        StyleBox[
         DiskBox[{1.0920504267682594`, 2.2177657620731064`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$33"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{4.76, 283.24000000000007`}, {-126.40418144271197`, 
       123.47040000000001`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.803685185118163*^9, 3.803685214525836*^9}, 
   3.8036855564974174`*^9, 3.8036869443005342`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"e01d6011-22b1-4305-9db4-b61bd5f1ed26"]
}, Open  ]],

Cell[TextData[{
 "We observe causal connection between different branches of the multiway \
graph! More remarkably, the states shown in red were previously impossible to \
reach before the measurement process. This means the act of measurement \
affects the states that can be observed. We are witnessing a genuine quantum \
signature on the multiway system! As a remark, this quantum signature is \
somewhat similar with the quantum interference effect discussed ",
 ButtonBox["here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/questions/quantum-mechanics/how-does-\
quantum-interference-occur-within-your-models/"], None},
  ButtonNote->
   "https://www.wolframphysics.org/questions/quantum-mechanics/how-does-\
quantum-interference-occur-within-your-models/"],
 ".  \n\nNow that Alice and Bob have done teleportation protocol, Alice can \
decode Bob\[CloseCurlyQuote]s secret message. It turns out that the message \
is \[OpenCurlyDoubleQuote]",
 StyleBox["Thank you all for reading!\[CloseCurlyDoubleQuote].",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8036856884426126`*^9, 3.8036857598825097`*^9}, {
   3.803685867671739*^9, 3.8036858815043087`*^9}, {3.803685917094958*^9, 
   3.80368592709929*^9}, {3.803685966598364*^9, 3.8036860986799784`*^9}, 
   3.803687012193205*^9, {3.803687061071497*^9, 3.803687062295523*^9}, {
   3.8036874144669776`*^9, 3.803687534627937*^9}, {3.8036875975885687`*^9, 
   3.8036876181157856`*^9}, {3.8036882164875917`*^9, 3.803688236315143*^9}, {
   3.8037059789954348`*^9, 3.8037059844983835`*^9}, {3.8037060377316103`*^9, 
   3.803706103940936*^9}},ExpressionUUID->"974105f8-4106-43e4-b887-\
347bdee97a48"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complete project work", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 3.8021873367169733`*^9}, {3.802187387379855*^9, 
  3.802187429405521*^9}},ExpressionUUID->"caacebfb-419d-440c-b7aa-\
51a88439c458"],

Cell[CellGroupData[{

Cell["Communication through a channel", "Subsubsection",
 CellChangeTimes->{{3.8035956080144496`*^9, 
  3.803595616185681*^9}},ExpressionUUID->"bf7ea67f-93b2-4a91-9962-\
76bfd24432bc"],

Cell["\<\
Consider the typical communication setup in which Bob (B) wants to send a \
message (C) to Alice (A). The classical way of doing this would be:\
\>", "Text",
 CellChangeTimes->{{3.8021862859717093`*^9, 3.8021862866993*^9}, {
  3.802186780928506*^9, 3.802186861789569*^9}, {3.803114718388257*^9, 
  3.8031147203520594`*^9}, {3.803114778802854*^9, 3.8031148668475976`*^9}, {
  3.8031157261425304`*^9, 3.803115744801085*^9}, {3.8031185844631767`*^9, 
  3.8031186279327993`*^9}, {3.803118690472642*^9, 3.803118693597028*^9}, {
  3.8035955945910473`*^9, 3.8035956007171526`*^9}, {3.803595677419283*^9, 
  3.8035956981449394`*^9}},ExpressionUUID->"aaaa7627-b177-492c-9708-\
ecc8c98df024"],

Cell[CellGroupData[{

Cell["Bob copies the message", "ItemNumbered",
 CellChangeTimes->{{3.8031157586253724`*^9, 
  3.8031157673930445`*^9}},ExpressionUUID->"eec3c8a5-4c32-419d-87f4-\
b212fbbdd0ed"],

Cell["Bob sends the message through a channel (X)", "ItemNumbered",
 CellChangeTimes->{{3.8031157586253724`*^9, 
  3.8031158005563126`*^9}},ExpressionUUID->"edd632b2-9d0f-4786-a849-\
fdcf9115d942"],

Cell["Alice receives the message", "ItemNumbered",
 CellChangeTimes->{{3.8031157586253724`*^9, 3.803115807367961*^9}, {
  3.8031186469965115`*^9, 
  3.8031186653543863`*^9}},ExpressionUUID->"c9fbff3c-4cdf-4247-b04c-\
94142a887138"]
}, Open  ]],

Cell["\<\
The whole protocol can be simulated in string substitution system as follows. \
\>", "Text",
 CellChangeTimes->{{3.803118674686819*^9, 
  3.803118708626479*^9}},ExpressionUUID->"885760f4-26dd-4c69-824f-\
9267a82007cd"],

Cell["\<\
String substitution system for classical communication protocol\
\>", "CodeText",
 CellChangeTimes->{{3.802186292108103*^9, 3.802186294360371*^9}, {
  3.8021865517803793`*^9, 3.802186579280602*^9}, {3.802186616084752*^9, 
  3.802186616372116*^9}, {3.802186713252631*^9, 3.802186721292982*^9}, {
  3.8031187274362116`*^9, 3.8031187597153397`*^9}, {3.8031939535878983`*^9, 
  3.8031939763581963`*^9}, {3.803595634170574*^9, 
  3.803595634686283*^9}},ExpressionUUID->"07e2c6e1-5e20-4cf8-b6d9-\
36eca977b547"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BC\>\"", "\[Rule]", " ", "\"\<CB\>\""}], ",", 
     RowBox[{"\"\<XC\>\"", "\[Rule]", " ", "\"\<CX\>\""}], ",", 
     RowBox[{"\"\<AC\>\"", "\[Rule]", " ", "\"\<CA\>\""}]}], "}"}], ",", 
   "\"\<AXXXBC\>\"", ",", "6", ",", "\"\<StatesGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.802186311848963*^9, 3.802186317409884*^9}, {
   3.802186504598793*^9, 3.802186537669526*^9}, 3.802186633589818*^9, {
   3.803118782793902*^9, 3.803118783289631*^9}, {3.8031238204196024`*^9, 
   3.803123823117032*^9}, {3.803123921088215*^9, 3.8031239271122475`*^9}, {
   3.803123965860614*^9, 3.803123976758815*^9}, {3.8031240102675557`*^9, 
   3.803124044411399*^9}, {3.8031293807681427`*^9, 3.8031293960862136`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0463416d-61d3-4c5a-84ec-bcb5d883417c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXXBC", "AXXXCB", "AXXCXB", "AXCXXB", "ACXXXB", "CAXXXB"}, {{{1, 2}, {
       2, 3}, {3, 4}, {4, 5}, {5, 6}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}, {
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 9.797174393178826*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXCB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 8.572527594031472*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXCXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 7.347880794884119*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXCXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 4.898587196589412*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ACXXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4., 2.449293598294706*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CAXXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {5., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$6"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-7.105427357601002*^-15, 608.64}, {-7.978800000000112,
        5.021200000000002}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{760.8, Automatic}]], "Output",
 CellChangeTimes->{
  3.802186540462332*^9, 3.802186634333634*^9, 3.803118786060155*^9, 
   3.80312382362969*^9, 3.803123927735651*^9, 3.8031239771681643`*^9, 
   3.8031240121854625`*^9, 3.803124044747144*^9, {3.803129388610436*^9, 
   3.8031293964363575`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"d3026e7b-beef-49cb-bd75-a8ebf51bb149"]
}, Open  ]],

Cell["\<\
As expected, the information transfer requires as many step as the distance \
between Alice and Bob. This is because we insist on locality (no information \
travels faster than light) so that C can only move one step at a time. This \
means that if Alice and Bob are further apart, more steps are required before \
the message can be received by Alice. \
\>", "Text",
 CellChangeTimes->{{3.8031188145424924`*^9, 3.803118879600789*^9}, {
  3.8031189550438786`*^9, 3.803119250421378*^9}, {3.803119383215175*^9, 
  3.8031193884736977`*^9}, {3.80312134686521*^9, 3.803121455299717*^9}, {
  3.8031220688618574`*^9, 3.803122144980538*^9}, {3.8031242317865067`*^9, 
  3.8031242690137672`*^9}, {3.8031779681385326`*^9, 3.8031781404800053`*^9}, {
  3.8033464679785843`*^9, 3.803346481283121*^9}, {3.8035956442083235`*^9, 
  3.803595647012502*^9}, {3.8035957180865297`*^9, 3.8035958053640213`*^9}, {
  3.8035968128760185`*^9, 
  3.803596818455448*^9}},ExpressionUUID->"63a88228-8de1-455f-8fb5-\
753816040a9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Entanglement and Non-local correlation", "Subsubsection",
 CellChangeTimes->{{3.8033464866924706`*^9, 
  3.8033464993314457`*^9}},ExpressionUUID->"9a5d00b1-14f6-4540-9b28-\
28c5604d4681"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<B\>\"", "\[Rule]", " ", "\"\<C\>\""}]}], "}"}], ",", 
   "\"\<AXXXXBC\>\"", ",", "3", ",", "\"\<EvolutionCausalGraph\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.8031266685004077`*^9, {3.8031294985999517`*^9, 3.803129498776433*^9}, 
   3.8031950705714064`*^9, {3.8032126489589214`*^9, 3.8032126492151847`*^9}, {
   3.8032206386927786`*^9, 3.803220644692621*^9}, 3.803221351666208*^9, 
   3.8032214750005646`*^9, {3.8032235524693794`*^9, 3.803223559806384*^9}, {
   3.8032250599822316`*^9, 3.8032250602206388`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"f3e12552-5dba-4eac-aebd-d396c95cc641"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXXXBC", "BXXXXBC", "AXXXXCC", "BXXXXCC", "CXXXXBC", "CXXXXCC", {
       "A" -> "B", "A", {"", "XXXXBC"}}, {"B" -> "C", "B", {"AXXXX", "C"}}, {
       "A" -> "B", "A", {"", "XXXXCC"}}, {"B" -> "C", "B", {"", "XXXXBC"}}, {
       "B" -> "C", "B", {"BXXXX", "C"}}, {"B" -> "C", "B", {"", "XXXXCC"}}, {
       "B" -> "C", "B", {"CXXXX", "C"}}}, {{{1, 7}, {1, 8}, {3, 9}, {2, 10}, {
       2, 11}, {4, 12}, {5, 13}, {7, 2}, {7, 10}, {7, 12}, {9, 4}, {9, 12}, {
       10, 5}, {12, 6}, {8, 3}, {11, 4}, {13, 6}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{"A" -> "B", "A", {"", "XXXXBC"}}, {
           "B" -> "C", "B", {"", "XXXXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXXXXBC", {"B" -> "C", "B", {"", "XXXXBC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXBC"}}, {
           "B" -> "C", "B", {"", "XXXXBC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXXXXCC", {"A" -> "B", "A", {"", "XXXXCC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"AXXXX", "C"}}, "AXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXXXCC", {"B" -> "C", "B", {"", "XXXXCC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXCC"}}, "BXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"BXXXX", "C"}}, "BXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXXXBC", {"B" -> "C", "B", {"AXXXX", "C"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXBC"}}, "BXXXXBC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXXXBC", {"B" -> "C", "B", {"BXXXX", "C"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXXXBC"}}, "CXXXXBC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXCC"}}, {
           "B" -> "C", "B", {"", "XXXXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXXXCC"}}, "CXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXXXBC", {"A" -> "B", "A", {"", "XXXXBC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"CXXXX", "C"}}, "CXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["CXXXXBC", {"B" -> "C", "B", {"CXXXX", "C"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {"CXXXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXXXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "B" -> "C", "B", {"CXXXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"AXXXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"", "XXXXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"", "XXXXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "CXXXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXXXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXXXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXXXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "A" -> "B", "A", {"", "XXXXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "A" -> "B", "A", {"", "XXXXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"BXXXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.5219218021925992, 4.7390390989037}, {0.7043917048148253, 
           4.647804147592588}, {0.9076573882666816, 4.546171305866659}, {
           1.1317188525481685`, 4.434140573725916}, {1.3765760976592858`, 
           4.311711951170357}, {1.6422291236000337`, 4.178885438199983}, {
           1.7173168384000266`, 4.136403309195048}, {1.7835707044000206`, 
           4.088461561380236}, {1.8409907216000154`, 4.035060194755549}, {
           1.8895768900000105`, 3.9761992093209826`}, {1.9293292096000068`, 
           3.9118786050765397`}, {1.9602476804000037`, 3.842098382022221}, {
           1.9823323024000015`, 3.766858540158024}, {1.9955830756000004`, 
           3.686159079483951}, {2., 3.6}, {2., 3.51358024691358}, {2., 
           3.432098765432099}, {2.0000000000000004`, 3.355555555555556}, {2., 
           3.283950617283951}, {2., 3.217283950617284}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.24042613086921105`, 4.759573869130789}, {0.32011027392758673`, 
           4.679889726072413}, {0.4076254611223915, 4.592374538877609}, {
           0.5029716924536255, 4.497028307546374}, {0.6061489679212887, 
           4.393851032078711}, {0.717157287525381, 4.2828427124746185`}, {
           0.7765193382916591, 4.218542390103401}, {0.8288976183795513, 
           4.151349295200696}, {0.8742921277890583, 4.081263427766498}, {
           0.9127028665201794, 4.008284787800808}, {0.9441298345729148, 
           3.9324133753036286`}, {0.9685730319472646, 3.8536491902749574`}, {
           0.9860324586432287, 3.771992232714796}, {0.9965081146608072, 
           3.687442502623144}, {1., 3.4}, {1., 3.3111111111111104`}, {1., 
           3.2222222222222223`}, {1.0000000000000002`, 3.133333333333334}, {
           1., 3.0444444444444443`}, {1., 2.9555555555555557`}, {1., 
           2.8666666666666667`}, {1., 2.7777777777777777`}, {1., 
           2.688888888888889}, {1., 2.4000000000000004`}, {1., 
           2.311111111111112}, {1., 2.222222222222222}, {1.0000000000000002`, 
           2.1333333333333337`}, {1., 2.0444444444444447`}, {1., 
           1.9555555555555557`}, {1., 1.8666666666666667`}, {1., 
           1.777777777777778}, {1., 1.688888888888889}, {1., 1.6}, {1., 
           1.5135802469135802`}, {1., 1.4320987654320987`}, {
           1.0000000000000002`, 1.3555555555555558`}, {1., 
           1.2839506172839508`}, {1., 1.217283950617284}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {-1., 
           2.7827160493827163`}, {-1., 2.7160493827160495`}, {-1., 
           2.644444444444445}, {-1., 2.567901234567902}, {-1., 
           2.48641975308642}, {-1., 
           2.4000000000000004`}, {-0.9955830756000004, 
           2.31384092051605}, {-0.9823323024000018, 
           2.233141459841976}, {-0.960247680400004, 
           2.15790161797778}, {-0.9293292096000066, 
           2.0881213949234603`}, {-0.8895768900000104, 
           2.0238007906790174`}, {-0.840990721600015, 
           1.964939805244452}, {-0.7835707044000204, 
           1.9115384386197634`}, {-0.7173168384000268, 
           1.8635966908049517`}, {-0.6422291236000337, 
           1.8211145618000169`}, {-0.3765760976592858, 
           1.6882880488296428`}, {-0.1317188525481685, 1.5658594262740844`}, {
           0.09234261173331831, 1.453828694133341}, {0.29560829518517484`, 
           1.3521958524074127`}, {0.4780781978074008, 1.2609609010962997`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 6.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXXXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXXXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"CXXXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$13"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.105427357601002*^-15, 
       207.00000000000006`}, {-174.60000000000008`, 171.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.8031222250587206`*^9, 3.803126669184415*^9, 3.8031294994396935`*^9, 
   3.80319507207911*^9, {3.803212660100371*^9, 3.80321266088623*^9}, {
   3.8032206393709836`*^9, 3.803220645089588*^9}, 3.8032213521937904`*^9, 
   3.8032214755611*^9, {3.8032235535044184`*^9, 3.803223560462349*^9}, 
   3.803225061348732*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"dd38f973-fe23-40fc-bf7f-2a1862e235da"]
}, Open  ]],

Cell["\<\
This system would teleport C to Alice in exactly three steps no matter how \
far the distance between Alice and Bob is. This always work because we are \
not using channel to send C to A (We have no rule involving X). Instead, we \
teleport C to A by virtue of correlation between A and B. Note that A is not \
directly correlated with C. In other words, we have no rule like A\[Rule]C. \
The above system shows the possibility of non-local effect when we have an \
entangled state. But, this is actually not a realistic model for quantum \
teleportation because it violates no-cloning theorem. \
\>", "Text",
 CellChangeTimes->{{3.8031222436156178`*^9, 3.803122385339241*^9}, {
   3.8031224243065605`*^9, 3.803122462545849*^9}, {3.8031225182932034`*^9, 
   3.8031225458386664`*^9}, {3.8031229968102217`*^9, 3.80312320157915*^9}, 
   3.8031816238457165`*^9, 3.803434149058875*^9, {3.8035958210087585`*^9, 
   3.8035959853439355`*^9}, {3.8035960230070505`*^9, 
   3.8035961352460814`*^9}, {3.80359684510757*^9, 3.8035968475252895`*^9}, {
   3.803621873736203*^9, 3.803621893484165*^9}, {3.8036429919177036`*^9, 
   3.803643015168644*^9}, {3.803679926798274*^9, 3.8036799438538685`*^9}, {
   3.8037138190328226`*^9, 
   3.8037138203788614`*^9}},ExpressionUUID->"ee5492d2-d98e-4a11-bfc3-\
a9a80b5556ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum Teleportation", "Subsubsection",
 CellChangeTimes->{{3.8033465196695137`*^9, 
  3.803346533646814*^9}},ExpressionUUID->"525aa8c5-5252-459b-bd95-\
af53bd00479e"],

Cell[TextData[{
 "Now, we denote 0 \[Rule] A and 1\[Rule] B, so that two particle system is \
spanned by string bases: AA, AB, BA, BB. Initially, Alice and Bob shares a \
Bell state of the form (",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"AA"},
    "Ket"], "\[PlusMinus]", 
   TemplateBox[{"BB"},
    "Ket"]}]],ExpressionUUID->"ec2cc909-4f68-4370-abfa-7fbaba61fe1f"],
 ") and Bob has an unknown qubit state ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"C"},
    "Ket"], "=", 
   RowBox[{
    RowBox[{"\[Alpha]", 
     TemplateBox[{"A"},
      "Ket"]}], "\[PlusMinus]", 
    RowBox[{"\[Beta]", 
     TemplateBox[{"B"},
      "Ket"]}]}]}]],ExpressionUUID->"3fb16735-9153-4c5d-b614-9d7f6a352a4e"],
 ". Spatial separation between Alice and Bob is denoted by X. "
}], "Text",
 CellChangeTimes->{{3.8033465524925833`*^9, 3.8033466029306345`*^9}, {
  3.8033466489845552`*^9, 3.803346788618203*^9}, {3.8033468258113003`*^9, 
  3.8033469452094526`*^9}, {3.803347019318618*^9, 3.8033470554650593`*^9}, {
  3.803354915060568*^9, 3.8033549538844414`*^9}, {3.8035985423189335`*^9, 
  3.803598612744856*^9}},ExpressionUUID->"0fabe377-82c2-4183-b86c-\
3d3feb6d77d0"],

Cell["\<\
Starting from initial entangled state and express C in terms of superposition \
of A and B. \
\>", "CodeText",
 CellChangeTimes->{{3.8035986239206133`*^9, 
  3.803598654742389*^9}},ExpressionUUID->"6c71e4cd-a3f2-4b32-9d6d-\
2fbaa5112ae9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<AXAC\>\"", ",", "\"\<BXBC\>\""}], "}"}], ",", "1", ",", 
   "\"\<EvolutionGraph\>\"", ",", 
   RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8033471179240117`*^9, 3.8033471846423607`*^9}, {
   3.803354159410887*^9, 3.803354184156519*^9}, {3.803354219340233*^9, 
   3.803354229481391*^9}, {3.8033543302335615`*^9, 3.80335433394238*^9}, 
   3.8033853493736787`*^9, {3.803426811643177*^9, 3.803426819773036*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"293df705-e1cc-4502-af09-4e7edd7fb585"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "AXAC", 1 -> "AXAA", 1 -> "AXAB", 0 -> "BXBC", 1 -> "BXBA", 1 -> 
       "BXBB"}, {{{1, 2}, {1, 3}, {4, 5}, {4, 6}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{6.730886838798641, 1.}, {7.064291952952486, 
        0.}, {6.422170647803989, 0.}, {-5.865408802690539, 
        1.}, {-6.198811712526592, 0.}, {-5.556689660316791, 0.}}, 
       VertexLabels -> {"VertexWeight"}, VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }, 
       VertexWeight -> {1, 1, 1, 1, 1, 1}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {6.730886838798641, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {7.064291952952486, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$2", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {6.422170647803989, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$3", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-5.865408802690539, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-6.198811712526592, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$5", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-5.556689660316791, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$6", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{2.1316282072803006`*^-14, 
       634.8861920972541}, {-42.198243876507604`, 39.05725174781054}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{Automatic, 103.92624016087154`}]], "Output",
 CellChangeTimes->{{3.8033471228497963`*^9, 3.8033471852535677`*^9}, 
   3.803354185690154*^9, {3.8033542207297688`*^9, 3.8033542300704536`*^9}, 
   3.8033543344241157`*^9, 3.8033853499665213`*^9, {3.8034268134297123`*^9, 
   3.8034268203177366`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"e455703f-36c2-4ada-971b-95c827563674"]
}, Open  ]],

Cell[TextData[{
 "After the initial state is ready, we need to perform Bell measurement. In \
general, measurement under different basis correspond to different foliation \
of the multiway system. However, this interpretation requires us to define \
customized foliation which is not well supported by the current framework. \
Even assuming we are able to do that, it is not clear at all what kind of \
foliation correspond to Bell basis quantum observation frame in string \
system. ",
 StyleBox["The first main result of this project is finding a way to get \
around this problem. Instead of defining customized foliation, I use default \
foliation that correspond to computational basis and customize the \
Knuth-Bendix completion procedure. ",
  FontWeight->"Bold"],
 "For example, to perform Knuth-Bendix completion equivalent to Bell \
measurement, we do the following. "
}], "Text",
 CellChangeTimes->{{3.803354233701973*^9, 3.803354244696892*^9}, {
  3.803354277275513*^9, 3.8033542933055677`*^9}, {3.8035986741681595`*^9, 
  3.8035987688653727`*^9}, {3.803598805689957*^9, 
  3.8035990380789046`*^9}},ExpressionUUID->"7912b7df-e794-40d1-962a-\
d8eeb9f76db6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BellCompletion", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", " ", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", 
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<AB\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<AB\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{"BellCompletion", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<AA\>\"", ",", "\"\<BB\>\"", ",", "\"\<AB\>\"", ",", "\"\<BA\>\""}], 
    "}"}], ",", "1", ",", "\"\<StatesGraph\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8033542959424515`*^9, 3.8033543507740903`*^9}, {
   3.8033543975106764`*^9, 3.803354474377326*^9}, {3.8033545085684896`*^9, 
   3.803354552887924*^9}, 3.8033547394380655`*^9, {3.8033554204020567`*^9, 
   3.8033554770630646`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"011facf7-e2aa-4d45-93f8-c54afebd3b22"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AB", "AA", "BA", "BB"}, {{{1, 2}, {3, 2}, {2, 1}, {4, 1}, {2, 3}, {4, 
       3}, {1, 4}, {3, 4}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.5332572940331453, -0.15130721083010584`}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.8499026954602148, 0.5212198069801938}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$2", Automatic, Center], {
          0.5246841946656199, 0.17737465309847977`}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation[
          "VertexID$2", Automatic, Center], {-0.1497024459406013, 
          0.49487847411401686`}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.17897668933305574`, 0.5045062310273692}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.49562209076013136`, 1.1770332488376771`}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          1.178702989616798, 0.5306681794761109}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          0.504316349010579, 0.8481720004916518}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1.0286672453063102`, 0.026067442268373875`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.02927424339245399, 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 0.9993847051413874}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.999938439770701, 1.0258205441879404`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$4"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-1.2393066909899053`, 
       130.2393066909899}, {-66.2393066909899, 64.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{161.39999999999998`, Automatic}]], "Output",
 CellChangeTimes->{{3.8033554515164003`*^9, 3.8033554776125345`*^9}, 
   3.803374810635691*^9, 3.803387291227493*^9, 3.803412264029495*^9, 
   3.803422829383792*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d1d9df4a-386b-421e-9af7-d56e2122d511"]
}, Open  ]],

Cell["\<\
Note there is no edge connecting vertices diagonal to each other (AA, BB and \
AB, BA). This has the interpretation that we are collapsing the state into \
either a superposition between AA and BB, or a superposition between BA and \
AB. Indeed, this is exactly what Bell measurement does. Moreover, it is \
straightforward to see that this framework can be easily generalized to \
measurement on any basis by connecting appropriate vertices. \
\>", "Text",
 CellChangeTimes->{{3.803599170667664*^9, 3.8035993206283197`*^9}, {
  3.8036169548718987`*^9, 3.8036170752422533`*^9}, {3.8036171080897408`*^9, 
  3.8036173119197516`*^9}, {3.8036430670498943`*^9, 3.8036430990159307`*^9}, {
  3.8036431377386274`*^9, 
  3.803643149452202*^9}},ExpressionUUID->"3b29d71b-d703-42df-8515-\
4c4bcaf06666"],

Cell["The system\[CloseCurlyQuote]s evolution after Bell measurement. ", \
"CodeText",
 CellChangeTimes->{{3.8036173342489595`*^9, 
  3.8036174039774337`*^9}},ExpressionUUID->"f1cb8888-992f-4c84-99e2-\
23c07b077c1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
     "BellCompletion"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<AXAC\>\"", ",", "\"\<BXBC\>\""}], "}"}], ",", "2", ",", 
   "\"\<EvolutionGraph\>\"", ",", 
   RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803374774651843*^9, 3.8033747752802153`*^9}, {
  3.8033754328339996`*^9, 3.803375435287436*^9}, {3.8033852551014576`*^9, 
  3.8033852554971943`*^9}, {3.8036175651757746`*^9, 3.8036175690440617`*^9}},
 CellLabel->
  "In[861]:=",ExpressionUUID->"40eca89e-b840-46c3-88b5-30aa66c9b2b2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "AXAC", 1 -> "AXAA", 1 -> "AXAB", 0 -> "BXBC", 1 -> "BXBA", 1 -> 
       "BXBB", 2 -> "AXAA", 2 -> "AXAB", 2 -> "AXBA", 2 -> "AXBB", 2 -> 
       "BXAA", 2 -> "BXAB", 2 -> "BXBA", 2 -> "BXBB"}, {{{4, 6}, {6, 12}, {6, 
       13}, {2, 9}, {5, 11}, {5, 14}, {4, 5}, {3, 7}, {3, 10}, {1, 2}, {1, 
       3}, {2, 8}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{11.36563444241494, 2.}, {12.313915716027964`, 
        1.}, {10.492447940093259`, 1.}, {-11.706774405633876`, 
        2.}, {-12.6550158492495, 1.}, {-10.83365565456581, 1.}, {
        9.793772628968267, 0.}, {12.358550500817621`, 0.}, {
        13.023016526090924`, 0.}, {10.497490682761885`, 
        0.}, {-13.36263526138058, 0.}, {-10.835669903399648`, 
        0.}, {-10.136405958113276`, 0.}, {-12.702688988512557`, 0.}}, 
       VertexLabels -> {"VertexWeight"}, VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }, 
       VertexWeight -> {1, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 2, 2, 3}}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {11.36563444241494, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {12.313915716027964`, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {10.492447940093259`, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-11.706774405633876`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-12.6550158492495, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-10.83365565456581, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {9.793772628968267, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$7", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {12.358550500817621`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$8", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {13.023016526090924`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$9", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {10.497490682761885`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-13.36263526138058, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-10.835669903399648`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-10.136405958113276`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-12.702688988512557`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{3.7928044727399524`, 
       841.3474191642568}, {-49.87887623782443, 46.9829077061696}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1055.800279546246, Automatic}]], "Output",
 CellChangeTimes->{{3.8033543464782124`*^9, 3.8033543513535767`*^9}, {
   3.803354418608677*^9, 3.8033544750076694`*^9}, {3.8033545228157673`*^9, 
   3.803354553576187*^9}, 3.8033554114996586`*^9, 3.8033852563843527`*^9, 
   3.8036175699101114`*^9},
 CellLabel->
  "Out[861]=",ExpressionUUID->"7fe6ea47-a151-4671-9187-430068e507a0"]
}, Open  ]],

Cell["\<\
The frequency in which we write the rule C\[Rule]A and C\[Rule]B determines \
the superposition coefficient of the qubit message C. In the example above, \
the C state is initially 3A\[PlusMinus]2B. After the Bell measurement, the \
state of Alice becomes,

If Bob measures AA\[PlusMinus]BB         : 3B+2A \[Rule] Can be corrected by \
an X-gate
If Bob measures AB\[PlusMinus]BA         : 2B + 3A \[Rule] The correct state

Indeed, we have shown that quantum teleportation protocol works in the above \
system! If one changes the number of X between Alice and Bob or modify the \
superposition state of C, this protocol would still work. However, in the \
above system we assume we already start from a Bell state. Is it possible to \
include the generation of Bell state into the same string substitution system \
without interfering with the future system evolution (or introduce new \
unwanted branch)? This problem is surprisingly non-trivial. But, in the end, \
I can solve it by using the rule written below. \
\>", "Text",
 CellChangeTimes->{{3.803354592532451*^9, 3.8033547788242416`*^9}, {
   3.803386950414787*^9, 3.803386968685762*^9}, {3.803617407974028*^9, 
   3.803617462538343*^9}, {3.8036175065935893`*^9, 3.803617546694583*^9}, {
   3.8036175793284445`*^9, 3.8036177404929824`*^9}, {3.8036178071367445`*^9, 
   3.80361796411815*^9}, {3.8036187163047304`*^9, 3.8036187621044455`*^9}, {
   3.8036431665465746`*^9, 3.8036432180346117`*^9}, 
   3.8037139058785315`*^9},ExpressionUUID->"af3a2fb0-8929-4fda-8bff-\
2c869ed69d09"],

Cell["Initial state preparation", "CodeText",
 CellChangeTimes->{{3.8036179798706913`*^9, 3.8036179911574564`*^9}, {
  3.8036183411624184`*^9, 
  3.8036183617471514`*^9}},ExpressionUUID->"b5bbde68-c1e9-43ae-af07-\
c0b082148ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
   "\"\<DC\>\"", ",", "2", ",", "\"\<EvolutionCausalGraph\>\"", ",", 
   RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803376542804615*^9, 3.8033765771477394`*^9}, {
  3.8033766420498786`*^9, 3.8033766626190925`*^9}, {3.803376804013898*^9, 
  3.8033768262337527`*^9}, {3.8033780057029085`*^9, 3.803378092411661*^9}, {
  3.803378149589497*^9, 3.8033783172922316`*^9}, {3.8033783918857164`*^9, 
  3.8033784897599144`*^9}, {3.8033786838532624`*^9, 3.80337868446465*^9}, {
  3.803460132390653*^9, 3.803460137094842*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"514f1d7d-89e5-48e8-9a22-57712ca3e5b6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", {
       "C" -> "A", "C", {"AXA", ""}}, {"C" -> "B", "C", {"AXA", ""}}, {
       "C" -> "A", "C", {"BXB", ""}}, {"C" -> "B", "C", {"BXB", ""}}, {
       "D" -> "AXA", "D", {"", "A"}}, {"D" -> "BXB", "D", {"", "A"}}, {
       "D" -> "AXA", "D", {"", "B"}}, {"D" -> "BXB", "D", {"", "B"}}, {
       "C" -> "A", "C", {"D", ""}}, {"C" -> "B", "C", {"D", ""}}, {
       "D" -> "AXA", "D", {"", "C"}}, {"D" -> "BXB", "D", {"", "C"}}}, {{{4, 
       10}, {4, 11}, {5, 12}, {5, 13}, {2, 14}, {2, 15}, {3, 16}, {3, 17}, {1,
        18}, {1, 19}, {1, 20}, {1, 21}, {10, 6}, {12, 7}, {18, 2}, {11, 8}, {
       13, 9}, {19, 3}, {14, 6}, {16, 8}, {20, 4}, {15, 7}, {17, 9}, {21, 5}},
        Null}, {
      EdgeStyle -> {
        DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {"AXAC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}, 
       VertexWeight -> {1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1}}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.01906487232574189], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 4.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {3., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {3., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {4., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"AXA\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"A\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-1., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"AXA\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"B\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {0., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$11", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"BXB\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"A\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {1., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$12", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"BXB\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"B\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {2., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$13", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"A\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-3., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$14", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 
                 GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"A\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-2., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$15", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 
                 GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"B\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {3., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$16", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"B\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {4., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$17", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"D\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"A\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-2., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$18", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$18"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"D\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"B\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {3., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$19", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$19"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"C\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {0., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$20", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$20"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 
                 GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"C\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {1., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$21"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$21", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$21"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{4.973799150320701*^-14, 
       354.06028355702523`}, {-105.26457019585108`, 101.82702040816325`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{443.9999999999999, Automatic}]], "Output",
 CellChangeTimes->{{3.8033780700149794`*^9, 3.8033780928900175`*^9}, 
   3.8033781553702307`*^9, 3.803378187979703*^9, {3.803378221140706*^9, 
   3.8033782733262987`*^9}, 3.803378317885662*^9, 3.803378435364442*^9, {
   3.8033784840128713`*^9, 3.8033784902401*^9}, 3.803378684988763*^9, {
   3.8034601330610046`*^9, 3.803460137635378*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"fbca3090-8008-445a-a1e9-7f630627f3b6"]
}, Open  ]],

Cell[TextData[{
 "This system terminates in four different \[OpenCurlyDoubleQuote]normal \
forms\[CloseCurlyDoubleQuote] (states that no longer evolve) equivalent to \
the initial state of teleportation protocol (with double state weight). We \
can also interpret what is happening there. An origin state \
\[OpenCurlyDoubleQuote]D\[CloseCurlyDoubleQuote] generate a Bell state and \
distribute each qubit to Alice and Bob (AA\[PlusMinus]BB). Then, Alice and \
Bob moves further away from each other while bringing their own parts of \
entangled qubit. These two processes are represented by the rule D\[Rule]AXA \
and D\[Rule]BXB. Meanwhile, Bob also has another qubit C that encodes the \
message he wants to send to Alice. The state C is in superposition \[Alpha] ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"A"},
    "Ket"], "+", 
   RowBox[{"\[Beta]", 
    TemplateBox[{"B"},
     "Ket"]}]}]],ExpressionUUID->"296a22a3-dd57-479f-b236-201e210c3237"],
 "where \[Alpha] and \[Beta] can be controlled by the frequency we are \
writing C\[Rule]A or C\[Rule]B. "
}], "Text",
 CellChangeTimes->{{3.8034674127737246`*^9, 3.80346742062525*^9}, {
  3.8036179996066723`*^9, 3.803618172046278*^9}, {3.8036182580281606`*^9, 
  3.803618277269395*^9}, {3.8036186574599133`*^9, 3.803618692048261*^9}, {
  3.8036187724251795`*^9, 3.8036188997039433`*^9}, {3.803618976294735*^9, 
  3.803619184243555*^9}, {3.8036432539242477`*^9, 3.803643267208029*^9}, {
  3.803643331140273*^9, 
  3.803643334877884*^9}},ExpressionUUID->"b964044b-f3ed-44a9-baa5-\
4e21fc5fcc71"],

Cell["Causal graph of initial state preparation", "CodeText",
 CellChangeTimes->{{3.803618322669861*^9, 3.803618338838546*^9}, {
  3.8036192102507124`*^9, 
  3.8036192122165594`*^9}},ExpressionUUID->"4b7fb9f8-8f4c-439b-82e9-\
2776e16e8a94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
      RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
      RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
      RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
      RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
      RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], "]"}], 
   ",", "\"\<DC\>\"", ",", "2", ",", "\"\<CausalGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8033785766507998`*^9, 3.803378600640994*^9}, {
  3.8033786439036055`*^9, 3.803378647508235*^9}, {3.803378938712347*^9, 
  3.8033789419689937`*^9}, {3.803379070966526*^9, 3.8033791077722235`*^9}, {
  3.8033803803677397`*^9, 3.8033803905473824`*^9}, {3.8033856288880997`*^9, 
  3.8033856308110623`*^9}, {3.80338714252814*^9, 3.803387145192916*^9}, {
  3.8034447499743586`*^9, 3.803444750888567*^9}, {3.8034455244671755`*^9, 
  3.803445613307563*^9}, {3.803445675126028*^9, 3.8034457760325813`*^9}, {
  3.803467295747603*^9, 3.803467319046872*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"fa116d88-edf9-4298-946c-1344e501c6b3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{"C" -> "A", "C", {"AXA", ""}}, {"C" -> "A", "C", {"BXB", ""}}, {
       "C" -> "A", "C", {"D", ""}}, {"C" -> "B", "C", {"AXA", ""}}, {
       "C" -> "B", "C", {"BXB", ""}}, {"C" -> "B", "C", {"D", ""}}, {
       "D" -> "AXA", "D", {"", "A"}}, {"D" -> "AXA", "D", {"", "B"}}, {
       "D" -> "AXA", "D", {"", "C"}}, {"D" -> "BXB", "D", {"", "A"}}, {
       "D" -> "BXB", "D", {"", "B"}}, {"D" -> "BXB", "D", {"", "C"}}}, {}, {
      EdgeStyle -> {
         Directive[{
           Hue[0, 1, 0.56], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {If[First[
            First[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
          Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
             Hue[0.09, 1, 0.32]], Background -> Directive[
              Opacity[0.7], 
              RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.4], 
              Hue[0.09, 1, 0.91]]], #, {0, 0}], 
          Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
             Hue[0.09, 1, 0.32]], Background -> Directive[
              Opacity[0.7], 
              Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.4], 
              Hue[0.09, 1, 0.91]]], #, {0, 0}]]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00001, -0.00001}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00001, -0.000030000000000000004`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.000030000000000000004`, -0.00001}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.000030000000000000004`, -0.000030000000000000004`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00001, -0.00005}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.000030000000000000004`, -0.00005}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00005, -0.00001}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00005, -0.000030000000000000004`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00005, -0.00005}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00001, -0.00007000000000000001}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.000030000000000000004`, -0.00007000000000000001}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.00005, -0.00007000000000000001}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$12"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 134.63703703703698`}, {-91.40555555555548, 
       87.00000000000003}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{168.29629629629625`, Automatic}]], "Output",
 CellChangeTimes->{{3.8034673072842655`*^9, 3.8034673199456673`*^9}},
 CellLabel->"Out[84]=",ExpressionUUID->"11f5ebef-03da-4542-81a9-02ef86d5e920"]
}, Open  ]],

Cell["\<\
From the causal graph (and the causal multiway graph) we can infer that every \
updating events associated with this string multiway system is causally \
independent from each other. However, this would change if we impose \
Knuth-Bendix completion corresponding to Bell measurement. \
\>", "Text",
 CellChangeTimes->{{3.803467425156052*^9, 3.8034674393773785`*^9}, {
  3.803619200061136*^9, 3.803619206001382*^9}, {3.8036195516967654`*^9, 
  3.803619678884193*^9}, {3.803619709471552*^9, 
  3.8036197686131535`*^9}},ExpressionUUID->"80ba7da3-3e7b-4f16-bb04-\
89a8c53e96e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Specifying", " ", "rule"}], ",", " ", 
    RowBox[{"initial", " ", "state"}], ",", " ", 
    RowBox[{"and", " ", "Bell", " ", "completion", " ", "procedure"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rule", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitialState", " ", "=", "\"\<DC\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BellCompletion", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", " ", 
       RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", 
       RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
       RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", " ", 
       RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", 
       RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<AB\>\""}], ",", " ", 
       RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
       RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<AB\>\""}]}], "}"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "draw", " ", "the", " ", "graph", " ", "with",
      " ", "annotation"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DrawGraph", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EvolVertexList", " ", "=", " ", 
        RowBox[{"VertexList", "[", 
         RowBox[{
          RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", 
           "InitialState", ",", "4", ",", "\"\<EvolutionGraph\>\""}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"TeleportInitState", " ", "=", " ", 
        RowBox[{"FilterRules", "[", 
         RowBox[{"EvolVertexList", ",", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"BellVertex1", " ", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "\[Rule]", " ", "#"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"StringCases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FilterRules", "[", 
               RowBox[{"EvolVertexList", ",", "3"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", "b"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"__", "~~", "\"\<AA\>\""}], ",", 
               RowBox[{"__", "~~", "\"\<BB\>\""}]}], "}"}]}], "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"BellVertex2", " ", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "\[Rule]", " ", "#"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"StringCases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FilterRules", "[", 
               RowBox[{"EvolVertexList", ",", "3"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", "b"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"__", "~~", "\"\<AB\>\""}], ",", 
               RowBox[{"__", "~~", "\"\<BA\>\""}]}], "}"}]}], "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stripMetadata", "[", "expression_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "expression", "]"}], "===", "Rule"}], ",", 
          RowBox[{"Last", "[", "expression", "]"}], ",", "expression"}], 
         "]"}]}], ";", 
       RowBox[{"a", " ", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], 
           "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", 
            "InitialState", ",", "3", ",", "\"\<EvolutionGraph\>\"", ",", 
            RowBox[{
            "\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
            RowBox[{
            "VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], "]"}],
           ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "BellVertex1"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.45", ",", "0.87"}], "]"}]}], "]"}]}],
                    ",", 
                   RowBox[{"FrameMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
                   RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.52", ",", "0.8200000000000001"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{"a", ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "BellVertex2"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{
                    RowBox[{"1", "/", "3"}], ",", "1", ",", "1", ",", ".5"}], 
                    "]"}]}], "]"}]}], ",", 
                   RowBox[{"FrameMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
                   RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.1", ",", "0.8200000000000001"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{"b", ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "TeleportInitState"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.1", ",", "0.7", ",", "3"}], "]"}]}], "]"}]}], 
                   ",", 
                   RowBox[{"FrameMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
                   RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "0.1", ",", "0.8200000000000001"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", "the", " ", "function"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DrawGraph", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8034458125253563`*^9, {3.80364348370135*^9, 3.803643502370393*^9}},
 CellLabel->
  "In[916]:=",ExpressionUUID->"9b597853-8cc8-484c-9ed3-ba1f79f39951"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXAC", 1 -> "BXBC", 1 -> "DA", 1 -> "DB", 2 -> "AXAA", 
       2 -> "AXAB", 2 -> "BXBA", 2 -> "BXBB", 3 -> "AXAA", 3 -> "AXAB", 3 -> 
       "AXBA", 3 -> "AXBB", 3 -> "BXAA", 3 -> "BXAB", 3 -> "BXBA", 3 -> 
       "BXBB"}, {{{9, 16}, {5, 9}, {3, 8}, {3, 9}, {9, 15}, {2, 6}, {1, 2}, {
       1, 3}, {1, 5}, {8, 17}, {6, 12}, {6, 11}, {8, 14}, {4, 6}, {4, 8}, {1, 
       4}, {7, 10}, {7, 13}, {2, 7}, {5, 7}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , (2 -> "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.1, 0.8200000000000001]]], #, {0, 0}]& )}, 
       VertexWeight -> {1, 1, 1, 2, 1, 4, 2, 4, 2, 2, 4, 4, 2, 4, 2, 2, 4}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-3.552713678800501*^-14, 
       471.79999999999853`}, {-101.79599398627626`, 96.99999999999987}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{589.7499999999982, Automatic}]], "Output",
 CellChangeTimes->{
  3.8034458126586533`*^9, 3.803467464289396*^9, {3.803643488449603*^9, 
   3.803643503361374*^9}},
 CellLabel->
  "Out[920]=",ExpressionUUID->"c4b14f95-176c-4d83-8fac-f5abbc6af6d3"]
}, Open  ]],

Cell["\<\
By looking at the associated weights of the last layer on the evolution \
graph, we can see that it correctly simulates quantum teleportation. As \
before, it also works for any superposition and it is independent of distance \
between Alice and Bob.\
\>", "Text",
 CellChangeTimes->{{3.8033786588218007`*^9, 3.8033786660165887`*^9}, {
   3.803379188393057*^9, 3.8033791978877754`*^9}, {3.803619775227917*^9, 
   3.8036198746868153`*^9}, 3.803619907564534*^9, {3.803619952241974*^9, 
   3.8036199722647376`*^9}, {3.803620052743726*^9, 3.8036200554198637`*^9}, {
   3.8036433581100206`*^9, 3.8036433949146852`*^9}, {3.8036435133093305`*^9, 
   3.8036435185434294`*^9}},ExpressionUUID->"5333ea59-f497-435d-8a1a-\
4adf1b2d4484"],

Cell["Checking for causal invariance", "CodeText",
 CellChangeTimes->{{3.803620013198038*^9, 
  3.8036200176955757`*^9}},ExpressionUUID->"fbb22949-6b1d-4abe-9478-\
1b0e179de56d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
     "BellCompletion"}], "]"}], ",", "\"\<DC\>\"", ",", "3", ",", 
   "\"\<CausalInvariantQ\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8033792019690685`*^9, 3.8033792239828033`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"84150251-d523-4ca4-b091-fc63d2e79c76"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.803379214545377*^9, 3.803379224546818*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"ead29c43-6e55-4c08-a82e-d17d0a84060c"]
}, Open  ]],

Cell["\<\
The system is not causal invariant! This reflects the fact that Alice state \
after teleportation is still coherent. Now, consider the causal multiway \
graph of this system. \
\>", "Text",
 CellChangeTimes->{{3.803379233591385*^9, 3.8033793001830406`*^9}, {
  3.803619985065798*^9, 3.803619987324087*^9}, {3.803620078763003*^9, 
  3.8036200896010776`*^9}},ExpressionUUID->"8844e2c4-5553-4ea8-bfd2-\
529b7077d7ff"],

Cell["Causal multiway graph", "CodeText",
 CellChangeTimes->{{3.8036200964382043`*^9, 
  3.803620102339251*^9}},ExpressionUUID->"a90c0539-94ab-4602-b7f9-\
bc439bd2952f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
     "BellCompletion"}], "]"}], ",", "\"\<DC\>\"", ",", "3", ",", 
   "\"\<EvolutionCausalGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQvWl3DldJ2BtHuS0vwfQjpXsCIJoh1lsYRPe92CQL
otMsn4LpVeoTlEH0afdgNRC9UzfIAURbu0Y6guhkJZVcED3nil4hiM7T+FEJ
omclyVWB6Q9uDSDafUIJmJZq3/O7FUgb870A03vWmzu0AemiH1yOIHqidoU7
iL5UwuwBosskVk5qB9Jf/ilPBtGKdhW3QHQI9yMwPSnozHsQXTft40cQvapP
6SeInuD8+Q+IVpq6lK0DSGe8vQmmVfn354PopLafYDpzdXEriJ7yejqY/uNx
+gCIvrSl+giIPn9lnXknkH7X9cgGRH+zFI8C0e4xTmC6JOJCCohud+JMBdEA
1tyvzA==
  "],
 CellLabel->"In[82]:=",ExpressionUUID->"08bf6dd0-01f4-4904-b0f6-fe00cb600273"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", 
       "AXBA", "AXBB", "BXAA", "BXAB", {"AA" -> "AB", "AA", {"AX", ""}}, {
       "AA" -> "BA", "AA", {"AX", ""}}, {"AB" -> "AA", "AB", {"AX", ""}}, {
       "AB" -> "BB", "AB", {"AX", ""}}, {"C" -> "A", "C", {"AXA", ""}}, {
       "C" -> "B", "C", {"AXA", ""}}, {"BA" -> "AA", "BA", {"BX", ""}}, {
       "BA" -> "BB", "BA", {"BX", ""}}, {"BB" -> "AB", "BB", {"BX", ""}}, {
       "BB" -> "BA", "BB", {"BX", ""}}, {"C" -> "A", "C", {"BXB", ""}}, {
       "C" -> "B", "C", {"BXB", ""}}, {"D" -> "AXA", "D", {"", "A"}}, {
       "D" -> "BXB", "D", {"", "A"}}, {"D" -> "AXA", "D", {"", "B"}}, {
       "D" -> "BXB", "D", {"", "B"}}, {"C" -> "A", "C", {"D", ""}}, {
       "C" -> "B", "C", {"D", ""}}, {"D" -> "AXA", "D", {"", "C"}}, {
       "D" -> "BXB", "D", {"", "C"}}}, {{{6, 14}, {6, 15}, {8, 16}, {8, 17}, {
       4, 18}, {4, 19}, {7, 20}, {7, 21}, {9, 22}, {9, 23}, {5, 24}, {5, 
       25}, {2, 26}, {2, 27}, {3, 28}, {3, 29}, {1, 30}, {1, 31}, {1, 32}, {1,
        33}, {14, 8}, {15, 10}, {16, 6}, {17, 11}, {20, 12}, {21, 9}, {22, 
       13}, {23, 7}, {18, 6}, {18, 14}, {18, 15}, {24, 7}, {24, 20}, {24, 
       21}, {30, 2}, {30, 14}, {30, 15}, {30, 20}, {30, 21}, {19, 8}, {19, 
       16}, {19, 17}, {25, 9}, {25, 22}, {25, 23}, {31, 3}, {31, 16}, {31, 
       17}, {31, 22}, {31, 23}, {26, 6}, {26, 14}, {26, 15}, {28, 8}, {28, 
       16}, {28, 17}, {32, 4}, {32, 14}, {32, 15}, {32, 16}, {32, 17}, {27, 
       7}, {27, 20}, {27, 21}, {29, 9}, {29, 22}, {29, 23}, {33, 5}, {33, 
       20}, {33, 21}, {33, 22}, {33, 23}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{"AA" -> "AB", "AA", {"AX", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BB" -> "BA", "BB", {"BX", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBB", {"BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBA", {"BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAB", {"AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"BA" -> "BB", "BA", {"BX", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"AB" -> "BB", "AB", {"AX", ""}}, "AXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AB" -> "AA", "AB", {"AX", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAA", {"AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAB", {"AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"AA" -> "BA", "AA", {"AX", ""}}, "AXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBA", {"BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"BB" -> "AB", "BB", {"BX", ""}}, "BXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"BA" -> "AA", "BA", {"BX", ""}}, "BXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBB", {"BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {"AXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "BB" -> "BA", "BB", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "AA" -> "BA", "AA", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "B", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "BB" -> "AB", "BB", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "AB" -> "AA", "AB", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "BA" -> "BB", "BA", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "BA" -> "AA", "BA", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "AB" -> "BB", "AB", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "AA" -> "AB", "AA", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.021623018537877372`], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$31", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$32", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$33", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$26", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$27", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$28", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$29", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$23", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.465817985598249, 2.2071960555646712`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.463767503744226, 4.027022378609731}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.4673414073177504`, 0.42477072961167783`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.931966091916343, 2.2243073707268195`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.2205502291076034`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.128153955796733, 2.895182442400397}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.8022376451253572, 2.8948136300057596`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.133387885532272, 1.5407951190753808`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.79964207461105, 1.5395108284469827`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.67650375090432, 4.412863693034111}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.650039232150174, 0.001731336595833799}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.2519224124504911, 4.41051996710136}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.28376882007880644`, 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AA\""}, {"\"AB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.7199803444005415`, 2.807368410004851}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AA\""}, {"\"BA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.9277123242376617`, 3.4429841105145518`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AB\""}, {"\"AA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.728267567105271, 1.6281918503395258`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AB\""}, {"\"BB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.9254834394944824`, 0.9887386075796751}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4.671601269829116, 3.049710495321035}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4.6720306821128705`, 1.393239938768212}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BA\""}, {"\"AA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.0022552684581896`, 3.441256038388996}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BA\""}, {"\"BB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.210291107146872, 2.808164638500914}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$21"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BB\""}, {"\"AB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.00789000772068, 0.9855048589139426}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$22"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BB\""}, {"\"BA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.2043934525046853`, 1.6264875864539659`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$23"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.2583136283449301, 3.0470726853670413`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$24"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.2612621341179211, 1.3898421618991041`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$25"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.521195281199115, 3.697001257130781}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$26"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.4050483810953727`, 3.701777020515179}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$27"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.522796767902296, 0.7352265464573402}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$28"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.4114859862611298`, 0.7342594804821949}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$29"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2.465326336634388, 3.2054145170615382`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$30"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2.4664197472504497`, 1.2170441004866293`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$31"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.8398738366671488`, 2.2198180038447117`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$32"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.0920504267682594`, 2.2177657620731064`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$33"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{1.7763568394002505`*^-15, 
       413.3333333333335}, {-181.17182508462005`, 177.7673333333333}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{516.6666666666669, Automatic}]], "Output",
 CellChangeTimes->{{3.8034228286291018`*^9, 3.803422874725707*^9}, 
   3.803422959582427*^9, {3.803423006245701*^9, 3.80342302721255*^9}, {
   3.8034232383410993`*^9, 3.8034232434483423`*^9}, {3.803423597606556*^9, 
   3.803423626010394*^9}, 3.803423697841567*^9, 3.8034237482891235`*^9, 
   3.803459551883288*^9, 3.8034601048060064`*^9, {3.8034601564131403`*^9, 
   3.8034601607704477`*^9}, {3.8034628059599547`*^9, 3.803462809865695*^9}, 
   3.803463383524741*^9, {3.8034635527849774`*^9, 3.80346356808319*^9}, {
   3.8034636275200014`*^9, 3.803463656242803*^9}, 3.803463735389366*^9, 
   3.8034645763447313`*^9, 3.8034647493678784`*^9, {3.8034652232198563`*^9, 
   3.8034652525357385`*^9}, 3.803466175762792*^9, 3.803466215700391*^9, 
   3.803466450570512*^9, 3.8034665367947054`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"809b2e96-48a5-40b8-9e8d-d8910e7745e0"]
}, Open  ]],

Cell["\<\
The first observation one can make is that Bell completion procedure \
introduces new states that were previously not available (BXAA, BXAB, AXBA, \
AXBB). Furthermore, Bell completion introduce causal relation between \
updating events in different branches, indicating branchlike information \
transfer. These two features can be interpreted as a signature of quantum \
effect, somewhat similar to interference effect in multiway system. 
\
\>", "Text",
 CellChangeTimes->{{3.803460329237982*^9, 3.8034603451356597`*^9}, {
   3.8034639001457934`*^9, 3.803463906338391*^9}, {3.8034647683793187`*^9, 
   3.8034647901237493`*^9}, 3.80346711468808*^9, {3.8034674947060947`*^9, 
   3.803467497488265*^9}, {3.803467532076499*^9, 3.803467594527914*^9}, {
   3.803620106355401*^9, 3.8036201246546783`*^9}, {3.803620224982256*^9, 
   3.803620245677447*^9}, {3.8036204056580367`*^9, 3.8036204132771063`*^9}, {
   3.803620490957057*^9, 
   3.803620665467229*^9}},ExpressionUUID->"91e85eb1-2a78-469a-9d4e-\
fee622f7b524"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.80218634588871*^9}},
 CellTags->"Keywords",
 CellID->442466898,ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490"],

Cell[CellGroupData[{

Cell["Quantum Information", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}, {3.803128985219602*^9, 
  3.8031289926794815`*^9}, {3.803129032724657*^9, 
  3.8031290514582148`*^9}},ExpressionUUID->"5813e785-8d21-454e-ac75-\
5f3913597a2c"],

Cell["Quantum Teleportation", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}, {3.803128985219602*^9, 
  3.8031289926794815`*^9}, {3.80312903357342*^9, 
  3.8031290599747205`*^9}},ExpressionUUID->"40d41ce2-f865-4dd5-9300-\
b33e1250b1fc"],

Cell["Entanglement", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}, {3.803128985219602*^9, 
  3.8031289926794815`*^9}, {3.80312903357342*^9, 3.8031290417280087`*^9}, {
  3.8035969166805234`*^9, 
  3.8035969166825204`*^9}},ExpressionUUID->"3a101707-676f-431b-a8cd-\
c4a736f6c680"],

Cell["Bell measurement", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}, {3.803128985219602*^9, 
  3.8031289926794815`*^9}, {3.80312903357342*^9, 3.8031290417280087`*^9}, {
  3.803596917386721*^9, 
  3.803596919557007*^9}},ExpressionUUID->"10fbcb8a-1e0c-485a-83ae-\
434babc67afc"],

Cell["String substitution system", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.8021864027417173`*^9}, {
  3.803129012628978*^9, 3.8031290449407253`*^9}, {3.8031970209016256`*^9, 
  3.8031970249884014`*^9}, {3.803596890503148*^9, 
  3.803596890505143*^9}},ExpressionUUID->"bedccd35-f9c3-46ac-ac87-\
d418e441e604"],

Cell["Wolfram Physics Project", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.8021864027417173`*^9}, {
  3.803129012628978*^9, 3.8031290449407253`*^9}, {3.8031970209016256`*^9, 
  3.8031970249884014`*^9}, {3.803596891156751*^9, 
  3.803596894846426*^9}},ExpressionUUID->"c9563b07-5f71-4934-8732-\
a6a1bc4ec0f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Acknowledgment", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186368848865*^9}},
 CellTags->"Keywords",
 CellID->1836614011],

Cell[TextData[{
 StyleBox["Mentor",
  FontWeight->"Bold"],
 ": Marco Thiel"
}], "Text",
 CellChangeTimes->{{3.8021864691325283`*^9, 3.8021864869063177`*^9}, {
  3.8031290627388024`*^9, 
  3.8031290730477033`*^9}},ExpressionUUID->"006d71ed-241c-4cf5-8ee6-\
00d91fa914f6"],

Cell["\<\
I want to thank my mentor, Marco Thiel, for his advice and guidance on how to \
go about completing this project. Thanks also to Jonathan Gorard and Stephen \
Wolfram for useful technical discussions. Lastly, I want to thank all of the \
Wolfram Summer School organizers without whom this project would not come \
into fruition.  \
\>", "Text",
 CellChangeTimes->{{3.802186374730517*^9, 3.802186375456683*^9}, {
  3.802186730191574*^9, 3.802186731523522*^9}, {3.803621906348274*^9, 
  3.8036221613089514`*^9}, {3.803622242335342*^9, 3.8036222428354654`*^9}, {
  3.8036238439289093`*^9, 
  3.803623908948921*^9}},ExpressionUUID->"279e8012-b716-44b0-8c1c-\
3c37e92e2ad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186360670889*^9}},
 CellTags->"Keywords",
 CellID->1137237116],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Wolfram Physics Project, Technical Introduction",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolframphysics.org/technical-introduction/"], None},
 ButtonNote->
  "https://www.wolframphysics.org/technical-introduction/"]], "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186383585804*^9}, {
  3.802186733203268*^9, 3.8021867345244904`*^9}, {3.803631604895613*^9, 
  3.8036316240287294`*^9}, {3.803687901781732*^9, 
  3.8036879017896733`*^9}},ExpressionUUID->"bac34aab-5f3c-4c18-85c2-\
373b47cd99f0"],

Cell[TextData[ButtonBox["Quantiki, No-Cloning Theorem",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.quantiki.org/wiki/no-cloning-theorem"], None},
 ButtonNote->"https://www.quantiki.org/wiki/no-cloning-theorem"]], "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186385191455*^9}, {
   3.802186737059086*^9, 3.802186738383222*^9}, {3.8036316287242565`*^9, 
   3.803631634108119*^9}, {3.803687730478156*^9, 3.8036877367899566`*^9}, 
   3.8036879657259808`*^9},ExpressionUUID->"2f747ad3-bccb-48a9-aaac-\
9030a91bdecf"],

Cell[TextData[ButtonBox["Jonathan Gorard, \[OpenCurlyDoubleQuote]Some Quantum \
Mechanical Properties of the Wolfram Model\[CloseCurlyDoubleQuote]",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolframcloud.com/obj/wolframphysics/Documents/some-\
quantum-mechanical-properties-of-the-wolfram-model.pdf"], None},
 ButtonNote->
  "https://www.wolframcloud.com/obj/wolframphysics/Documents/some-quantum-\
mechanical-properties-of-the-wolfram-model.pdf"]], "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186386161345*^9}, {
   3.8036316576026654`*^9, 3.8036316733753304`*^9}, 
   3.803687968664304*^9},ExpressionUUID->"5cd7331d-339c-41bc-a7a5-\
3c1d06306821"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontWeight -> Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2020", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontSize -> 40]}], CellFrameMargins -> 10, 
   Background -> 
   RGBColor[0.3176470588235294, 0.49019607843137253`, 0.0784313725490196]]},
Magnification:>0.8 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d2da5a7f-ae50-40b3-93d6-5f37408d7001"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Keywords"->{
  Cell[822346, 19234, 190, 3, 52, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
   CellTags->"Keywords",
   CellID->442466898],
  Cell[824585, 19289, 143, 3, 52, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
   CellTags->"Keywords",
   CellID->1836614011],
  Cell[825720, 19321, 139, 3, 52, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
   CellTags->"Keywords",
   CellID->1137237116]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Keywords", 828700, 19395}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 346, 5, 78, "Title",ExpressionUUID->"7f5a763c-439b-409d-85d9-b001eb779415"],
Cell[929, 29, 416, 6, 26, "Author",ExpressionUUID->"17c07b4e-577f-4fd8-bb63-78ea3b522bfe"],
Cell[1348, 37, 310, 5, 25, "Affiliation",ExpressionUUID->"96c2b484-c964-462d-9af7-4e5a7606bcb7"],
Cell[1661, 44, 5035, 76, 257, "Abstract",ExpressionUUID->"bd44fc5d-a918-4ecb-a444-9098256d0564"],
Cell[6699, 122, 185, 2, 52, "Section",ExpressionUUID->"dde3b2d2-a587-4e33-b62b-89e06e4d8b0b"],
Cell[CellGroupData[{
Cell[6909, 128, 366, 9, 42, "Section",ExpressionUUID->"2c2380b2-0547-4128-a721-db738b29388d"],
Cell[CellGroupData[{
Cell[7300, 141, 3878, 108, 115, "Input",ExpressionUUID->"794a2cdc-6805-448d-9948-b772491bf868"],
Cell[11181, 251, 88479, 1458, 207, 22436, 374, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7e510b4c-b39b-4c67-8cd0-6ad48e6c3992"]
}, {2}]],
Cell[99672, 1712, 1368, 22, 79, "Text",ExpressionUUID->"960e072d-a194-4e89-955b-14a8b9321ef7"],
Cell[101043, 1736, 190, 3, 29, "CodeText",ExpressionUUID->"555f8454-b95e-4a1e-a1b8-2382e285a7ef"],
Cell[CellGroupData[{
Cell[101258, 1743, 568, 11, 22, "Input",ExpressionUUID->"a15d2847-c797-4ae4-b779-98a01f282631"],
Cell[101829, 1756, 5769, 144, 40, "Output",ExpressionUUID->"69b1ef32-d093-4824-bcd1-d8e4a857c3b4"]
}, Open  ]],
Cell[107613, 1903, 2023, 30, 96, "Text",ExpressionUUID->"19f8ccee-2bfa-4bd7-824e-1f4188595a33"],
Cell[109639, 1935, 279, 6, 29, "CodeText",ExpressionUUID->"3b45b2ab-31db-4bd6-a84b-c1fb005984f2"],
Cell[CellGroupData[{
Cell[109943, 1945, 617, 14, 22, "Input",ExpressionUUID->"2312f2fc-0885-476a-9971-30576fbdcb56"],
Cell[110563, 1961, 37138, 899, 291, "Output",ExpressionUUID->"533e889e-23cb-451c-8029-4cb9b622ce88"]
}, Open  ]],
Cell[147716, 2863, 3223, 55, 114, "Text",ExpressionUUID->"6079feef-923d-4ea1-a0d3-0c45afc35a7d"],
Cell[CellGroupData[{
Cell[150964, 2922, 232, 4, 36, "Subsubsection",ExpressionUUID->"c71020d7-7b0e-41c9-9a42-a2ee903d130d"],
Cell[151199, 2928, 9304, 244, 537, "Text",ExpressionUUID->"bb9ed4a0-1854-4eb9-b7e1-17ff80a01260"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160540, 3177, 280, 4, 36, "Subsubsection",ExpressionUUID->"469caed8-b655-4bfb-80b3-14d7e470aa57"],
Cell[160823, 3183, 1694, 28, 61, "Text",ExpressionUUID->"3bae0be1-14d7-4e74-8d81-7edfbfe3c92e"],
Cell[CellGroupData[{
Cell[162542, 3215, 296, 4, 24, "Item",ExpressionUUID->"fda0892f-2d42-4129-8e58-e9853b7a14ac"],
Cell[162841, 3221, 335, 5, 24, "Item",ExpressionUUID->"402ddea6-2194-4548-87bd-aed9e4e52e2b"],
Cell[163179, 3228, 618, 10, 40, "Item",ExpressionUUID->"21994070-eb12-4a72-a304-4c6630d05edd"]
}, Open  ]],
Cell[163812, 3241, 899, 14, 27, "Text",ExpressionUUID->"43468bb0-bf17-448a-b142-8462725d07ba"],
Cell[164714, 3257, 248, 6, 29, "CodeText",ExpressionUUID->"2c7e70bf-7f24-45cb-ac17-eef62970a154"],
Cell[CellGroupData[{
Cell[164987, 3267, 12576, 275, 372, "Input",ExpressionUUID->"804ccb53-1672-4274-ae45-782711e47aeb"],
Cell[177566, 3544, 27187, 636, 201, "Output",ExpressionUUID->"769465f3-0108-4747-9976-e55735a5091c"]
}, Open  ]],
Cell[204768, 4183, 3739, 87, 252, "Text",ExpressionUUID->"5849fcf5-f9a6-42f1-92db-982aebb103bf"],
Cell[208510, 4272, 269, 5, 29, "CodeText",ExpressionUUID->"d2c95cd3-4366-4762-9ae2-d7e71697538b"],
Cell[CellGroupData[{
Cell[208804, 4281, 768, 16, 38, "Input",ExpressionUUID->"0f125b8b-6120-4827-b700-8f17fc747ff9"],
Cell[209575, 4299, 26997, 634, 199, "Output",ExpressionUUID->"7de98fb9-584e-4a1e-8d0c-d5c8fa96b422"]
}, Open  ]],
Cell[236587, 4936, 2594, 64, 165, "Text",ExpressionUUID->"d70bccf0-fe2f-4f06-bdf4-a34d027e7792"],
Cell[239184, 5002, 199, 3, 29, "CodeText",ExpressionUUID->"36db9fb0-2f59-482e-8c3c-b079b61731cd"],
Cell[CellGroupData[{
Cell[239408, 5009, 815, 16, 38, "Input",ExpressionUUID->"df4318bd-d09a-4af8-9bd2-996dd925dc75"],
Cell[240226, 5027, 27156, 636, 190, "Output",ExpressionUUID->"dbc5c4b3-6f14-4c02-83df-21ecbf8450df"]
}, Open  ]],
Cell[267397, 5666, 782, 12, 44, "Text",ExpressionUUID->"480fd69c-ecff-4ae7-9859-b605c70c8d8d"],
Cell[268182, 5680, 196, 3, 29, "CodeText",ExpressionUUID->"d48fc7a8-a2bd-4a7e-b254-f8a910ebe27f"],
Cell[CellGroupData[{
Cell[268403, 5687, 937, 19, 38, "Input",ExpressionUUID->"fa700034-57b3-4e3a-bba8-4225a26e7aa4"],
Cell[269343, 5708, 52593, 1322, 211, "Output",ExpressionUUID->"4d286a7c-07cf-48de-86cc-b4bdc44dc3aa"]
}, Open  ]],
Cell[321951, 7033, 2133, 35, 79, "Text",ExpressionUUID->"dc5318eb-1cba-4d91-a103-eebc354d1bba"],
Cell[324087, 7070, 184, 3, 29, "CodeText",ExpressionUUID->"7dc05339-1e8e-48a3-89c4-6453dadf6775"],
Cell[CellGroupData[{
Cell[324296, 7077, 354, 7, 22, "Input",ExpressionUUID->"5d2bb8f7-26e3-41e5-b7ef-f39504bb911e"],
Cell[324653, 7086, 4964, 120, 171, "Output",ExpressionUUID->"af4f80c3-f9d5-43c6-a758-c35bb101ccb0"]
}, Open  ]],
Cell[329632, 7209, 2709, 51, 96, "Text",ExpressionUUID->"13df9533-a5e2-495c-8224-3b3d4e676322"],
Cell[332344, 7262, 239, 4, 29, "CodeText",ExpressionUUID->"43b2498a-fc35-4b0e-9090-e236179ad445"],
Cell[CellGroupData[{
Cell[332608, 7270, 512, 10, 22, "Input",ExpressionUUID->"ec76fac3-bd7c-4aec-be4d-a0468e756f0a"],
Cell[333123, 7282, 6465, 160, 192, "Output",ExpressionUUID->"230dc2ee-cd7f-48cf-af06-21ca20ddf143"]
}, Open  ]],
Cell[339603, 7445, 1270, 20, 79, "Text",ExpressionUUID->"326904fb-5391-45da-8902-a423d3d64625"],
Cell[340876, 7467, 191, 3, 29, "CodeText",ExpressionUUID->"46e11b04-f007-4775-9576-5e95af777fe4"],
Cell[CellGroupData[{
Cell[341092, 7474, 2697, 66, 84, "Input",ExpressionUUID->"3dc861aa-9566-4d80-8bc1-379a28f5b9c3"],
Cell[343792, 7542, 102259, 2533, 373, "Output",ExpressionUUID->"55dc45c0-2708-4175-9bcc-fb0c6a9e332a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446088, 10080, 581, 10, 22, "Input",ExpressionUUID->"cb468396-cacf-47cc-8892-44f022760d28"],
Cell[446672, 10092, 52525, 1303, 272, "Output",ExpressionUUID->"e01d6011-22b1-4305-9db4-b61bd5f1ed26"]
}, Open  ]],
Cell[499212, 11398, 1695, 29, 96, "Text",ExpressionUUID->"974105f8-4106-43e4-b887-347bdee97a48"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[500956, 11433, 265, 4, 52, "Section",ExpressionUUID->"caacebfb-419d-440c-b7aa-51a88439c458"],
Cell[CellGroupData[{
Cell[501246, 11441, 184, 3, 36, "Subsubsection",ExpressionUUID->"bf7ea67f-93b2-4a91-9962-76bfd24432bc"],
Cell[501433, 11446, 692, 11, 27, "Text",ExpressionUUID->"aaaa7627-b177-492c-9708-ecc8c98df024"],
Cell[CellGroupData[{
Cell[502150, 11461, 176, 3, 24, "ItemNumbered",ExpressionUUID->"eec3c8a5-4c32-419d-87f4-b212fbbdd0ed"],
Cell[502329, 11466, 197, 3, 24, "ItemNumbered",ExpressionUUID->"edd632b2-9d0f-4786-a849-fdcf9115d942"],
Cell[502529, 11471, 231, 4, 24, "ItemNumbered",ExpressionUUID->"c9fbff3c-4cdf-4247-b04c-94142a887138"]
}, Open  ]],
Cell[502775, 11478, 228, 5, 27, "Text",ExpressionUUID->"885760f4-26dd-4c69-824f-9267a82007cd"],
Cell[503006, 11485, 515, 9, 29, "CodeText",ExpressionUUID->"07e2c6e1-5e20-4cf8-b6d9-36eca977b547"],
Cell[CellGroupData[{
Cell[503546, 11498, 939, 16, 22, "Input",ExpressionUUID->"0463416d-61d3-4c5a-84ec-bcb5d883417c"],
Cell[504488, 11516, 6739, 166, 36, "Output",ExpressionUUID->"d3026e7b-beef-49cb-bd75-a8ebf51bb149"]
}, Open  ]],
Cell[511242, 11685, 1009, 16, 44, "Text",ExpressionUUID->"63a88228-8de1-455f-8fb5-753816040a9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512288, 11706, 193, 3, 36, "Subsubsection",ExpressionUUID->"9a5d00b1-14f6-4540-9b28-28c5604d4681"],
Cell[CellGroupData[{
Cell[512506, 11713, 824, 17, 22, "Input",ExpressionUUID->"f3e12552-5dba-4eac-aebd-d396c95cc641"],
Cell[513333, 11732, 37599, 916, 359, "Output",ExpressionUUID->"dd38f973-fe23-40fc-bf7f-2a1862e235da"]
}, Open  ]],
Cell[550947, 12651, 1310, 20, 61, "Text",ExpressionUUID->"ee5492d2-d98e-4a11-bfc3-a9a80b5556ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552294, 12676, 174, 3, 36, "Subsubsection",ExpressionUUID->"525aa8c5-5252-459b-bd95-af53bd00479e"],
Cell[552471, 12681, 1153, 29, 51, "Text",ExpressionUUID->"0fabe377-82c2-4183-b86c-3d3feb6d77d0"],
Cell[553627, 12712, 248, 6, 29, "CodeText",ExpressionUUID->"6c71e4cd-a3f2-4b32-9d6d-2fbaa5112ae9"],
Cell[CellGroupData[{
Cell[553900, 12722, 938, 18, 22, "Input",ExpressionUUID->"293df705-e1cc-4502-af09-4e7edd7fb585"],
Cell[554841, 12742, 8914, 214, 96, "Output",ExpressionUUID->"e455703f-36c2-4ada-971b-95c827563674"]
}, Open  ]],
Cell[563770, 12959, 1167, 20, 79, "Text",ExpressionUUID->"7912b7df-e794-40d1-962a-d8eeb9f76db6"],
Cell[CellGroupData[{
Cell[564962, 12983, 1287, 25, 38, "Input",ExpressionUUID->"011facf7-e2aa-4d45-93f8-c54afebd3b22"],
Cell[566252, 13010, 6565, 162, 142, "Output",ExpressionUUID->"d1d9df4a-386b-421e-9af7-d56e2122d511"]
}, Open  ]],
Cell[572832, 13175, 802, 13, 61, "Text",ExpressionUUID->"3b29d71b-d703-42df-8515-4c4bcaf06666"],
Cell[573637, 13190, 216, 4, 29, "CodeText",ExpressionUUID->"f1cb8888-992f-4c84-99e2-23c07b077c1b"],
Cell[CellGroupData[{
Cell[573878, 13198, 1152, 24, 38, "Input",ExpressionUUID->"40eca89e-b840-46c3-88b5-30aa66c9b2b2"],
Cell[575033, 13224, 17985, 430, 120, "Output",ExpressionUUID->"7fe6ea47-a151-4671-9187-430068e507a0"]
}, Open  ]],
Cell[593033, 13657, 1550, 26, 166, "Text",ExpressionUUID->"af3a2fb0-8929-4fda-8bff-2c869ed69d09"],
Cell[594586, 13685, 228, 4, 29, "CodeText",ExpressionUUID->"b5bbde68-c1e9-43ae-af07-c0b082148ba6"],
Cell[CellGroupData[{
Cell[594839, 13693, 1141, 20, 38, "Input",ExpressionUUID->"514f1d7d-89e5-48e8-9a22-57712ca3e5b6"],
Cell[595983, 13715, 59794, 1470, 220, "Output",ExpressionUUID->"fbca3090-8008-445a-a1e9-7f630627f3b6"]
}, Open  ]],
Cell[655792, 15188, 1550, 28, 86, "Text",ExpressionUUID->"b964044b-f3ed-44a9-baa5-4e21fc5fcc71"],
Cell[657345, 15218, 240, 4, 29, "CodeText",ExpressionUUID->"4b7fb9f8-8f4c-439b-82e9-2776e16e8a94"],
Cell[CellGroupData[{
Cell[657610, 15226, 1290, 22, 22, "Input",ExpressionUUID->"fa116d88-edf9-4298-946c-1344e501c6b3"],
Cell[658903, 15250, 16353, 397, 192, "Output",ExpressionUUID->"11f5ebef-03da-4542-81a9-02ef86d5e920"]
}, Open  ]],
Cell[675271, 15650, 584, 10, 44, "Text",ExpressionUUID->"80ba7da3-3e7b-4f16-bb04-89a8c53e96e6"],
Cell[CellGroupData[{
Cell[675880, 15664, 11346, 260, 372, "Input",ExpressionUUID->"9b597853-8cc8-484c-9ed3-ba1f79f39951"],
Cell[687229, 15926, 27048, 636, 212, "Output",ExpressionUUID->"c4b14f95-176c-4d83-8fac-f5abbc6af6d3"]
}, Open  ]],
Cell[714292, 16565, 735, 12, 44, "Text",ExpressionUUID->"5333ea59-f497-435d-8a1a-4adf1b2d4484"],
Cell[715030, 16579, 178, 3, 29, "CodeText",ExpressionUUID->"fbb22949-6b1d-4abe-9478-1b0e179de56d"],
Cell[CellGroupData[{
Cell[715233, 16586, 849, 17, 22, "Input",ExpressionUUID->"84150251-d523-4ca4-b091-fc63d2e79c76"],
Cell[716085, 16605, 177, 2, 25, "Output",ExpressionUUID->"ead29c43-6e55-4c08-a82e-d17d0a84060c"]
}, Open  ]],
Cell[716277, 16610, 424, 8, 27, "Text",ExpressionUUID->"8844e2c4-5553-4ea8-bfd2-529b7077d7ff"],
Cell[716704, 16620, 169, 3, 29, "CodeText",ExpressionUUID->"a90c0539-94ab-4602-b7f9-bc439bd2952f"],
Cell[CellGroupData[{
Cell[716898, 16627, 1201, 25, 22, "Input",ExpressionUUID->"08bf6dd0-01f4-4904-b0f6-fe00cb600273"],
Cell[718102, 16654, 103159, 2554, 375, "Output",ExpressionUUID->"809b2e96-48a5-40b8-9e8d-d8910e7745e0"]
}, Open  ]],
Cell[821276, 19211, 1021, 17, 79, "Text",ExpressionUUID->"91e85eb1-2a78-469a-9d4e-fee622f7b524"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[822346, 19234, 190, 3, 52, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
 CellTags->"Keywords",
 CellID->442466898],
Cell[CellGroupData[{
Cell[822561, 19241, 308, 5, 24, "Item",ExpressionUUID->"5813e785-8d21-454e-ac75-5f3913597a2c"],
Cell[822872, 19248, 309, 5, 24, "Item",ExpressionUUID->"40d41ce2-f865-4dd5-9300-b33e1250b1fc"],
Cell[823184, 19255, 353, 6, 24, "Item",ExpressionUUID->"3a101707-676f-431b-a8cd-c4a736f6c680"],
Cell[823540, 19263, 353, 6, 24, "Item",ExpressionUUID->"10fbcb8a-1e0c-485a-83ae-434babc67afc"],
Cell[823896, 19271, 320, 5, 24, "Item",ExpressionUUID->"bedccd35-f9c3-46ac-ac87-d418e441e604"],
Cell[824219, 19278, 317, 5, 24, "Item",ExpressionUUID->"c9563b07-5f71-4934-8732-a6a1bc4ec0f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[824585, 19289, 143, 3, 52, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
 CellTags->"Keywords",
 CellID->1836614011],
Cell[824731, 19294, 270, 8, 27, "Text",ExpressionUUID->"006d71ed-241c-4cf5-8ee6-00d91fa914f6"],
Cell[825004, 19304, 679, 12, 44, "Text",ExpressionUUID->"279e8012-b716-44b0-8c1c-3c37e92e2ad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[825720, 19321, 139, 3, 52, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
 CellTags->"Keywords",
 CellID->1137237116],
Cell[CellGroupData[{
Cell[825884, 19328, 547, 10, 24, "Item",ExpressionUUID->"bac34aab-5f3c-4c18-85c2-373b47cd99f0"],
Cell[826434, 19340, 538, 9, 24, "Item",ExpressionUUID->"2f747ad3-bccb-48a9-aaac-9030a91bdecf"],
Cell[826975, 19351, 678, 12, 24, "Item",ExpressionUUID->"5cd7331d-339c-41bc-a7a5-3c1d06306821"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

