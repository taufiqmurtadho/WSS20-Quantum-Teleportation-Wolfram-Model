(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258307,       5888]
NotebookOptionsPosition[    250463,       5740]
NotebookOutlinePosition[    251944,       5783]
CellTagsIndexPosition[    251871,       5778]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Teleportation in Wolfram Model", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.8031146063478985`*^9, 
  3.803114615730757*^9}},ExpressionUUID->"7f5a763c-439b-409d-85d9-\
b001eb779415"],

Cell["Muhammad Taufiq Murtadho", "Author",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.803114629538709*^9, 
  3.8031146364793267`*^9}},ExpressionUUID->"17c07b4e-577f-4fd8-bb63-\
78ea3b522bfe"],

Cell["Korea Advanced Institute of Science and Technology", "Affiliation",
 CellChangeTimes->{{3.802186209582007*^9, 3.802186214327465*^9}, {
  3.8031146408880925`*^9, 
  3.803114650341468*^9}},ExpressionUUID->"96c2b484-c964-462d-9af7-\
4e5a7606bcb7"],

Cell[TextData[{
 StyleBox["Abstract:",
  FontWeight->"Bold"],
 " Entanglement is a valuable resource for many quantum communication tasks. \
One example of such tasks is quantum teleportation where a quantum state is \
transferred between two spatially separated parties by performing only local \
operations and classical communication (LOCC). In this project, we explore \
the analog of quantum teleportation in the Wolfram model by looking at string \
substitution systems. In other words, we investigate whether we can teleport \
a string from one spatial location to the other by using entanglement in \
branchial space. \n\n",
 StyleBox["Objective: ",
  FontWeight->"Bold"],
 "Generate events on a string multiway system that can be interpreted as a \
quantum teleportation phenomenon.",
 StyleBox["\n\nComputational Plan/Strategy: ",
  FontWeight->"Bold"],
 "First, we identify a string transformation pattern that correspond to \
quantum teleportation. Then, we develop a program to scan through a multiway \
system to spot the pattern. Then, we apply the program to a class of string \
substitution rules that can potentially display quantum teleportation \
phenomenon. "
}], "Abstract",
 CellChangeTimes->{{3.802186680026499*^9, 3.802186711462531*^9}, {
  3.8031146995891304`*^9, 
  3.803114700052828*^9}},ExpressionUUID->"bd44fc5d-a918-4ecb-a444-\
9098256d0564"],

Cell[CellGroupData[{

Cell["Wolfram Community Post (material for blog post)", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 3.8021873367169733`*^9}}],

Cell["\<\
<describe ideas or arguments in a clear narrative format. explain how the \
topic/idea is studied and how it is implemented in the Wolfram language codes>\
\>", "Text",
 CellChangeTimes->{{3.8021862859717093`*^9, 3.8021862866993*^9}, {
  3.802186780928506*^9, 3.802186861789569*^9}}],

Cell[TextData[{
 "<",
 StyleBox["one-line text, explaining the code only",
  FontSlant->"Italic"],
 "> Plot several functions with a legend:"
}], "CodeText",
 CellChangeTimes->{{3.802186292108103*^9, 3.802186294360371*^9}, {
  3.8021865517803793`*^9, 3.802186579280602*^9}, {3.802186616084752*^9, 
  3.802186616372116*^9}, {3.802186713252631*^9, 3.802186721292982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.802186311848963*^9, 3.802186317409884*^9}, {
   3.802186504598793*^9, 3.802186537669526*^9}, 3.802186633589818*^9},
 CellLabel->"In[1]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$5154#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnk4VN8fxxkq2QaZsaa0IJUWqXyj80mopJIsLUSkVYpKi61FaBNCkSKl
ZF+iIo5QpMiWrNnHjFkOspT1d3//zHlez733ue/P+7Pce+4z6k5nLV1oQkJC
BdTP/1cRLF7VrXd9c1Xh/9fQzUs5hZvUHjqgH2aLVJUenkXjGauONoWdRSww
ZZWG+aFe+RN/c6l12bZpYZewB6jZ1L84gVqXq//h24fGop8OYZpPw2IRvfDQ
XN/76cjSVan5cVg62pm8/vgCX4xCh+yyI8Mwirtq96kDfqBNn83Ejc5Xo/VN
bzNPX25HMvWvfmx4WI2uBecEiGa0o54uWsTK7GrkZPoH+/S1o2Ch/AVKf6pR
z4YxEFvegbo2Ldcb8KhBO5esim183IGCsiQcn3nUIgsVCZ6teydqiP2eM+5e
jy56Xt/MYHSj5DQtr4HQeiR6QCc8W6cbXSvwB1ZmPer4cqps8/ZutKzF4FvN
YD1KH/vgqOLVjbyZqR2J7j8RCZyJ6m/vRovv35ewdW9AnZd6t3xL6EHnru4+
kn2uEfUOuB/pV2chMzeDRLGQRmT+dq7M9Y0stNhJm9inNyIJ0ZJztD0s1LBj
to+YoBFl/XIYKvViIUOlwsf2p5uQ3DztWNN6FhJ/v7J6zrFm5DH4XFv7eh9K
GJFEdoda0aJlRZ+7vrKRL2f8VubVVhR+POXG6zY22t/G/j47uhWVjV8/YTXI
RpKfSw9mNraivz53nY8pcpBHuLfnbJs2ZHE6RPKkCweBLi81w+I3eqtgs6hp
nIPOvHcJpi3uQAE3vUbYclyks2PvQuF1HejHrS/af5dw0UCTQdaMcQeif/cr
Yq/nogsT8xomj3Wg8xKnP545yEVXNxfPH0vqQPnbp8tE47gooFQtlbu2E61M
LF5ls5SHtluLo/6tnWjc7vUmDz0emssaqWZbdaKNzuEX3Ex46N6cyuFez07k
HxW0dI4LDz008zLoyOtEo3c+P3wXz0Nx1b++1Rt1oa3jco9nKfKR05ES+7p9
XSjqVMoeVQ0+WjyURmqOdqErf78tkVvHR6/mBcz7EdCFFiwqYUfv4aNUm3WH
vlZ0IV1OoeaCW3yU1xrSX2DZjczD9H17OXzkfcbb+6NzNzL4JTXNGuEjw+nj
0vkXupHM6ETGF2EBKlqA1r6P7EY7GnOvLlQSoDIn/pWs5m7E/jK5ysBUgOrZ
O+a+dupB+oUP1s6NFiASpWVy06MHpSbeOQovBEh855zrDjd60CHWa68DKQIE
qaV/FeJ7ED/mpd6aQgFKdkfsoM4elLQgvvdihwB9WaS2xGWwB53+02Kezxag
jrpJhy3CvSjKZ8iqa0CAmOvzfv1b2Is6n5Vr/hQi6Mb4urJTjr1IY77WjPkC
gp4mzxPZdq4XiY7devhMg6D3dkObF1/rRaN44G7NSoL4hem5LbG96HwQvtey
iaD9N7Vfmbf3osol0XQ/G4LOr5vbpUV60RazXtEWO4KCe/vmz5rpRe12Q1qK
zgSVbkuIKFBjobtq3B69swStklx4S+cwC3kaaQZN3yLIrGC6SNyNhbpW+O52
vkvQUbe2SZYPC2m2tzHehBAUXR19IfYpC+1qVn34K5qg2RGMozJtLKSUMrcQ
pxKkbjocy+OxkIaREW1FFkEGY7Ut5ZMs5B92XP1KLkHuB0L2XVftQ7NU0ttz
CglqnS+xdehQH/I/cZT/vpKgsSqOb9XpPnR3l0PU8hqC5K6V5yV59aGgfTXC
fvUEbe+6tdb5SR+KkNecKGsmyPnhUTeU3IeKq9tuFbQR5Gu8NUklvw+tzs0s
ethBUPYroUX1zX1opd2bTV29BFXZtttn9Pch9S2RngfZBLHFCqPujfch9HSt
bXY/QSJ5MT9PiLNRMW11C49HkNppL1kTZTbqrz8sNIcQpK96cJe6NhvNN0sr
FR4kyKpy4+0pfTb6c2aFRtsQQXdWjQrlHmCj9UsDP+iNEnT10o7lrFNsNB2x
2KVmjKCTOMaa6c1GTkOHV2z/R+VvzoCf6X024r8Pkooep+LbszXJ8xl1/ZTy
nLIJgjY+iqx/lc5Gr0/mKfyYJEirnTPdUMRGElvWb86aIkhR03DZnFpKn0PQ
lXPTBM05G7JvQzcbfTL8WT53hqDR3G6f48NsNMw/vdyXYtb0+sRHszjo5cIv
cZUUN5jeqS1jcpDx4iCtvxR/CW6bHNPkINHOa8VTFOc2rNbU0ucgie43br8p
TlDz37vfjIP8LDRXRlMcfuyXV9AhDtov2Da9mmL/NO1X7105aM6CW13xlJ4L
oz7VbB8O4nbeaCaUXufNNeOKDzgovJbep0CxZcCSpTviOKhac+lcFSo+o6pL
e65kclBoFmvLP8qPtcxvV94Uc1B0a3xYFuXXosNqL5vqOGjyVe2k6V+qPl65
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
5SS54zWb3uycUFeCqdX3////3cL/AY29SDo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$5154#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
y/8ASBmK2w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$5154#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
        0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         TagBox["x", HoldForm], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"2", " ", 
           TagBox["x", HoldForm]}], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"3", " ", 
           TagBox["x", HoldForm]}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.802186540462332*^9, 3.802186634333634*^9},
 CellLabel->"Out[1]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complete project work", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 3.8021873367169733`*^9}, {3.802187387379855*^9, 
  3.802187429405521*^9}}],

Cell["\<\
Consider the typical communication setup: Bob (denoted by B) wants to send a \
message (C) to Alice (denoted by A). The classical way of doing this would be\
\>", "Text",
 CellChangeTimes->{{3.8021862859717093`*^9, 3.8021862866993*^9}, {
  3.802186780928506*^9, 3.802186861789569*^9}, {3.803114718388257*^9, 
  3.8031147203520594`*^9}, {3.803114778802854*^9, 3.8031148668475976`*^9}, {
  3.8031157261425304`*^9, 3.803115744801085*^9}, {3.8031185844631767`*^9, 
  3.8031186279327993`*^9}, {3.803118690472642*^9, 
  3.803118693597028*^9}},ExpressionUUID->"aaaa7627-b177-492c-9708-\
ecc8c98df024"],

Cell[CellGroupData[{

Cell["Bob copies the message", "ItemNumbered",
 CellChangeTimes->{{3.8031157586253724`*^9, 
  3.8031157673930445`*^9}},ExpressionUUID->"eec3c8a5-4c32-419d-87f4-\
b212fbbdd0ed"],

Cell["Bob sends the message through a channel (X)", "ItemNumbered",
 CellChangeTimes->{{3.8031157586253724`*^9, 
  3.8031158005563126`*^9}},ExpressionUUID->"edd632b2-9d0f-4786-a849-\
fdcf9115d942"],

Cell["Alice receives the message", "ItemNumbered",
 CellChangeTimes->{{3.8031157586253724`*^9, 3.803115807367961*^9}, {
  3.8031186469965115`*^9, 
  3.8031186653543863`*^9}},ExpressionUUID->"c9fbff3c-4cdf-4247-b04c-\
94142a887138"]
}, Open  ]],

Cell["\<\
The whole protocol can be simulated in string substitution system as follows. \
\>", "Text",
 CellChangeTimes->{{3.803118674686819*^9, 
  3.803118708626479*^9}},ExpressionUUID->"885760f4-26dd-4c69-824f-\
9267a82007cd"],

Cell["\<\
String substitution system for classical communication protocol
Idea: Make this as a model of how to teleport classical information\
\>", "CodeText",
 CellChangeTimes->{{3.802186292108103*^9, 3.802186294360371*^9}, {
  3.8021865517803793`*^9, 3.802186579280602*^9}, {3.802186616084752*^9, 
  3.802186616372116*^9}, {3.802186713252631*^9, 3.802186721292982*^9}, {
  3.8031187274362116`*^9, 3.8031187597153397`*^9}, {3.8031939535878983`*^9, 
  3.8031939763581963`*^9}},ExpressionUUID->"07e2c6e1-5e20-4cf8-b6d9-\
36eca977b547"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BC\>\"", "\[Rule]", " ", "\"\<CB\>\""}], ",", 
     RowBox[{"\"\<XC\>\"", "\[Rule]", " ", "\"\<CX\>\""}], ",", 
     RowBox[{"\"\<AC\>\"", "\[Rule]", " ", "\"\<CA\>\""}]}], "}"}], ",", 
   "\"\<AXXXBC\>\"", ",", "6", ",", "\"\<StatesGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.802186311848963*^9, 3.802186317409884*^9}, {
   3.802186504598793*^9, 3.802186537669526*^9}, 3.802186633589818*^9, {
   3.803118782793902*^9, 3.803118783289631*^9}, {3.8031238204196024`*^9, 
   3.803123823117032*^9}, {3.803123921088215*^9, 3.8031239271122475`*^9}, {
   3.803123965860614*^9, 3.803123976758815*^9}, {3.8031240102675557`*^9, 
   3.803124044411399*^9}, {3.8031293807681427`*^9, 3.8031293960862136`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0463416d-61d3-4c5a-84ec-bcb5d883417c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXXBC", "AXXXCB", "AXXCXB", "AXCXXB", "ACXXXB", "CAXXXB"}, {{{1, 2}, {
       2, 3}, {3, 4}, {4, 5}, {5, 6}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}, {
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 9.797174393178826*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXCB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 8.572527594031472*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXCXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 7.347880794884119*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXCXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 4.898587196589412*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ACXXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4., 2.449293598294706*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CAXXXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {5., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$6"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 760.8}, {-10.276000000000138`, 
       5.724000000000004}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{760.8, Automatic}]], "Output",
 CellChangeTimes->{
  3.802186540462332*^9, 3.802186634333634*^9, 3.803118786060155*^9, 
   3.80312382362969*^9, 3.803123927735651*^9, 3.8031239771681643`*^9, 
   3.8031240121854625`*^9, 3.803124044747144*^9, {3.803129388610436*^9, 
   3.8031293964363575`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"d3026e7b-beef-49cb-bd75-a8ebf51bb149"]
}, Open  ]],

Cell["\<\
As expected, the information transfer requires as many step as the distance \
between Alice and Bob. This is because we insist on locality (no information \
travels faster than light) when we transfer the information through the \
channel X (represented by string substitution rule \[OpenCurlyDoubleQuote]XC\
\[CloseCurlyDoubleQuote]\[Rule]\[CloseCurlyDoubleQuote]CX\
\[CloseCurlyDoubleQuote]). This means that if Alice and Bob are further \
apart, they need to apply this rule many more times. Consequently, the path \
length required for this protocol would become longer the further Alice and \
Bob are. \
\>", "Text",
 CellChangeTimes->{{3.8031188145424924`*^9, 3.803118879600789*^9}, {
  3.8031189550438786`*^9, 3.803119250421378*^9}, {3.803119383215175*^9, 
  3.8031193884736977`*^9}, {3.80312134686521*^9, 3.803121455299717*^9}, {
  3.8031220688618574`*^9, 3.803122144980538*^9}, {3.8031242317865067`*^9, 
  3.8031242690137672`*^9}, {3.8031779681385326`*^9, 3.8031781404800053`*^9}, {
  3.8033464679785843`*^9, 
  3.803346481283121*^9}},ExpressionUUID->"63a88228-8de1-455f-8fb5-\
753816040a9d"],

Cell[CellGroupData[{

Cell["Entanglement and Non-local correlation", "Subsubsection",
 CellChangeTimes->{{3.8033464866924706`*^9, 
  3.8033464993314457`*^9}},ExpressionUUID->"9a5d00b1-14f6-4540-9b28-\
28c5604d4681"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<B\>\"", "\[Rule]", " ", "\"\<C\>\""}]}], "}"}], ",", 
   "\"\<AXXXXBC\>\"", ",", "3", ",", "\"\<EvolutionCausalGraph\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.8031266685004077`*^9, {3.8031294985999517`*^9, 3.803129498776433*^9}, 
   3.8031950705714064`*^9, {3.8032126489589214`*^9, 3.8032126492151847`*^9}, {
   3.8032206386927786`*^9, 3.803220644692621*^9}, 3.803221351666208*^9, 
   3.8032214750005646`*^9, {3.8032235524693794`*^9, 3.803223559806384*^9}, {
   3.8032250599822316`*^9, 3.8032250602206388`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"f3e12552-5dba-4eac-aebd-d396c95cc641"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXXXBC", "BXXXXBC", "AXXXXCC", "BXXXXCC", "CXXXXBC", "CXXXXCC", {
       "A" -> "B", "A", {"", "XXXXBC"}}, {"B" -> "C", "B", {"AXXXX", "C"}}, {
       "A" -> "B", "A", {"", "XXXXCC"}}, {"B" -> "C", "B", {"", "XXXXBC"}}, {
       "B" -> "C", "B", {"BXXXX", "C"}}, {"B" -> "C", "B", {"", "XXXXCC"}}, {
       "B" -> "C", "B", {"CXXXX", "C"}}}, {{{1, 7}, {1, 8}, {3, 9}, {2, 10}, {
       2, 11}, {4, 12}, {5, 13}, {7, 2}, {7, 10}, {7, 12}, {9, 4}, {9, 12}, {
       10, 5}, {12, 6}, {8, 3}, {11, 4}, {13, 6}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{"A" -> "B", "A", {"", "XXXXBC"}}, {
           "B" -> "C", "B", {"", "XXXXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXXXXBC", {"B" -> "C", "B", {"", "XXXXBC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXBC"}}, {
           "B" -> "C", "B", {"", "XXXXBC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXXXXCC", {"A" -> "B", "A", {"", "XXXXCC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"AXXXX", "C"}}, "AXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXXXCC", {"B" -> "C", "B", {"", "XXXXCC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXCC"}}, "BXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"BXXXX", "C"}}, "BXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXXXBC", {"B" -> "C", "B", {"AXXXX", "C"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXBC"}}, "BXXXXBC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXXXBC", {"B" -> "C", "B", {"BXXXX", "C"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXXXBC"}}, "CXXXXBC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXXXCC"}}, {
           "B" -> "C", "B", {"", "XXXXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXXXCC"}}, "CXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXXXBC", {"A" -> "B", "A", {"", "XXXXBC"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"CXXXX", "C"}}, "CXXXXCC"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["CXXXXBC", {"B" -> "C", "B", {"CXXXX", "C"}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {"CXXXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXXXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "B" -> "C", "B", {"CXXXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"AXXXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"", "XXXXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"", "XXXXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "CXXXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXXXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXXXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXXXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "A" -> "B", "A", {"", "XXXXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "A" -> "B", "A", {"", "XXXXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"BXXXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.5219218021925992, 4.7390390989037}, {0.7043917048148253, 
           4.647804147592588}, {0.9076573882666816, 4.546171305866659}, {
           1.1317188525481685`, 4.434140573725916}, {1.3765760976592858`, 
           4.311711951170357}, {1.6422291236000337`, 4.178885438199983}, {
           1.7173168384000266`, 4.136403309195048}, {1.7835707044000206`, 
           4.088461561380236}, {1.8409907216000154`, 4.035060194755549}, {
           1.8895768900000105`, 3.9761992093209826`}, {1.9293292096000068`, 
           3.9118786050765397`}, {1.9602476804000037`, 3.842098382022221}, {
           1.9823323024000015`, 3.766858540158024}, {1.9955830756000004`, 
           3.686159079483951}, {2., 3.6}, {2., 3.51358024691358}, {2., 
           3.432098765432099}, {2.0000000000000004`, 3.355555555555556}, {2., 
           3.283950617283951}, {2., 3.217283950617284}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.24042613086921105`, 4.759573869130789}, {0.32011027392758673`, 
           4.679889726072413}, {0.4076254611223915, 4.592374538877609}, {
           0.5029716924536255, 4.497028307546374}, {0.6061489679212887, 
           4.393851032078711}, {0.717157287525381, 4.2828427124746185`}, {
           0.7765193382916591, 4.218542390103401}, {0.8288976183795513, 
           4.151349295200696}, {0.8742921277890583, 4.081263427766498}, {
           0.9127028665201794, 4.008284787800808}, {0.9441298345729148, 
           3.9324133753036286`}, {0.9685730319472646, 3.8536491902749574`}, {
           0.9860324586432287, 3.771992232714796}, {0.9965081146608072, 
           3.687442502623144}, {1., 3.4}, {1., 3.3111111111111104`}, {1., 
           3.2222222222222223`}, {1.0000000000000002`, 3.133333333333334}, {
           1., 3.0444444444444443`}, {1., 2.9555555555555557`}, {1., 
           2.8666666666666667`}, {1., 2.7777777777777777`}, {1., 
           2.688888888888889}, {1., 2.4000000000000004`}, {1., 
           2.311111111111112}, {1., 2.222222222222222}, {1.0000000000000002`, 
           2.1333333333333337`}, {1., 2.0444444444444447`}, {1., 
           1.9555555555555557`}, {1., 1.8666666666666667`}, {1., 
           1.777777777777778}, {1., 1.688888888888889}, {1., 1.6}, {1., 
           1.5135802469135802`}, {1., 1.4320987654320987`}, {
           1.0000000000000002`, 1.3555555555555558`}, {1., 
           1.2839506172839508`}, {1., 1.217283950617284}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {-1., 
           2.7827160493827163`}, {-1., 2.7160493827160495`}, {-1., 
           2.644444444444445}, {-1., 2.567901234567902}, {-1., 
           2.48641975308642}, {-1., 
           2.4000000000000004`}, {-0.9955830756000004, 
           2.31384092051605}, {-0.9823323024000018, 
           2.233141459841976}, {-0.960247680400004, 
           2.15790161797778}, {-0.9293292096000066, 
           2.0881213949234603`}, {-0.8895768900000104, 
           2.0238007906790174`}, {-0.840990721600015, 
           1.964939805244452}, {-0.7835707044000204, 
           1.9115384386197634`}, {-0.7173168384000268, 
           1.8635966908049517`}, {-0.6422291236000337, 
           1.8211145618000169`}, {-0.3765760976592858, 
           1.6882880488296428`}, {-0.1317188525481685, 1.5658594262740844`}, {
           0.09234261173331831, 1.453828694133341}, {0.29560829518517484`, 
           1.3521958524074127`}, {0.4780781978074008, 1.2609609010962997`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 6.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXXXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXXXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXXXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"CXXXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$13"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 263.}, {-218.99999999999997`, 
       213.00000000000003`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.8031222250587206`*^9, 3.803126669184415*^9, 3.8031294994396935`*^9, 
   3.80319507207911*^9, {3.803212660100371*^9, 3.80321266088623*^9}, {
   3.8032206393709836`*^9, 3.803220645089588*^9}, 3.8032213521937904`*^9, 
   3.8032214755611*^9, {3.8032235535044184`*^9, 3.803223560462349*^9}, 
   3.803225061348732*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"dd38f973-fe23-40fc-bf7f-2a1862e235da"]
}, Open  ]],

Cell["\<\
This system would teleport C to Alice in exactly three steps no matter how \
far the distance between Alice and Bob is. Moreover, it is important to \
notice that \[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote] can only be sent \
to A by virtue of its connection to B (in other words, we have no rule such \
as A\[Rule]C). Secondly, we also do not use channel communication (we have no \
rule involving X). Lastly, the system is causal invariant so it is consistent \
with the fact that quantum teleportation protocol requires a measurement to \
be made. \
\>", "Text",
 CellChangeTimes->{{3.8031222436156178`*^9, 3.803122385339241*^9}, {
   3.8031224243065605`*^9, 3.803122462545849*^9}, {3.8031225182932034`*^9, 
   3.8031225458386664`*^9}, {3.8031229968102217`*^9, 3.80312320157915*^9}, 
   3.8031816238457165`*^9},ExpressionUUID->"ee5492d2-d98e-4a11-bfc3-\
a9a80b5556ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion: No-cloning theorem", "Subsubsection",
 CellChangeTimes->{{3.803176639805315*^9, 
  3.8031766507772627`*^9}},ExpressionUUID->"706dc09e-3c96-4c7e-a907-\
523e4c1e6dfe"],

Cell["This demonstrate non-local correlation of entanglement.", "Text",
 CellChangeTimes->{{3.8032215369131823`*^9, 
  3.8032215566520147`*^9}},ExpressionUUID->"1fdeb422-b316-4153-b899-\
de05e583ee60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<A\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
       RowBox[{"\"\<B\>\"", "\[Rule]", " ", "\"\<C\>\""}]}], "}"}], ",", 
     "\"\<AXXBC\>\"", ",", "3", ",", "\"\<StatesGraphStructure\>\""}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<AXXBC\>\"", ",", "Red"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<BXXBC\>\"", ",", "Red"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<BXXCC\>\"", ",", "Red"}], "]"}], ",", 
     RowBox[{"Style", "[", " ", 
      RowBox[{"\"\<CXXCC\>\"", ",", "Red"}], "]"}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803176811763917*^9, 3.8031769231698976`*^9}, {
  3.803176993259405*^9, 3.8031770142029166`*^9}, {3.80317706326373*^9, 
  3.803177068372278*^9}, {3.803177125934692*^9, 3.8031773800582952`*^9}, {
  3.8031774351232367`*^9, 3.803177520866484*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"9e7ebb83-2366-44e7-b8e7-c3514820f395"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXBC", "AXXCC", "BXXBC", "BXXCC", "CXXBC", "CXXCC"}, {{{1, 2}, {1, 
       3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphHighlight -> {"BXXCC", "CXXCC", "AXXBC", "BXXBC"}, 
       GraphHighlightStyle -> {"AXXBC" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}, "CXXCC" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}, "BXXCC" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}, "BXXBC" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}}, GraphLayout -> {"Dimension" -> 2}, 
       PerformanceGoal -> "Quality", 
       VertexLabels -> {
        "BXXCC" -> Automatic, "CXXCC" -> Automatic, "AXXBC" -> Automatic, 
         "BXXBC" -> Automatic}, VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , "BXXCC" -> Automatic, 
         "BXXBC" -> Automatic, "CXXBC" -> Automatic, "AXXBC" -> Automatic, 
         "CXXCC" -> Automatic, "AXXCC" -> Automatic}, VertexStyle -> {
         Directive[
          Opacity[0.7], 
          Hue[0.62, 0.45, 0.87]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       Directive[
        Opacity[0.7], 
        Hue[0.62, 0.45, 0.87]], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 3.}, 0.030239520958083826`], {{
             RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["\"AXXBC\"", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[
        DiskBox[{0., 2.}, 0.030239520958083826`], "DynamicName", BoxID -> 
        "VertexID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 2.}, 0.030239520958083826`], {{
             RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["\"BXXBC\"", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 1.}, 0.030239520958083826`], {{
             RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["\"BXXCC\"", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[
        DiskBox[{1., 1.}, 0.030239520958083826`], "DynamicName", BoxID -> 
        "VertexID$5"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 0.}, 0.030239520958083826`], {{
             RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["\"CXXCC\"", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{1.4272185817334226`, 
       155.26777377832153`}, {-179.6949555169845, 171.6698701615359}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{154.11748335605535`, Automatic}]], "Output",
 CellChangeTimes->{
  3.803177264786049*^9, {3.803177341953437*^9, 3.8031773803498154`*^9}, {
   3.8031774392408857`*^9, 3.8031774684417286`*^9}, {3.8031774986108303`*^9, 
   3.8031775244350247`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"ec123c33-653a-45bf-921f-2c4339ff7e81"]
}, Open  ]],

Cell[TextData[{
 "If C is presumed to be an unknown quantum state, the model above seem to \
violate no-cloning theorem. Alternatively, we can avoid violating no-cloning \
theorem if we assume C is known by B. The interpretation then becomes quite \
clear at least when we follow the history marked by red. First, the state of \
A and B becomes maximally correlated. Then, B is measured with respect to C \
basis. As a result, the state of A also collapses to C. Thus, this model is \
not yet \[OpenCurlyDoubleQuote]full\[CloseCurlyDoubleQuote] quantum \
teleportation in which C can be teleported even if B does not know the state \
C. Rather, ",
 StyleBox["this is a form of \[OpenCurlyDoubleQuote]teleportation\
\[CloseCurlyDoubleQuote] when we do not include Bell measurement and \
classical information transfer.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8031766655911245`*^9, 3.8031767743106623`*^9}, {
   3.8031775622242107`*^9, 3.8031779494118223`*^9}, {3.803178195755517*^9, 
   3.8031781990794106`*^9}, {3.80318164829503*^9, 3.803181648639917*^9}, {
   3.8031937214937644`*^9, 3.803193783728244*^9}, 
   3.8033464429655313`*^9},ExpressionUUID->"2c76b784-d54f-4aca-afe6-\
f8d59a2021da"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum Teleportation", "Subsubsection",
 CellChangeTimes->{{3.8033465196695137`*^9, 
  3.803346533646814*^9}},ExpressionUUID->"525aa8c5-5252-459b-bd95-\
af53bd00479e"],

Cell[TextData[{
 "Now, we denote 0 \[Rule] A and 1\[Rule] B, so that two particle system is \
spanned by string bases: AA, AB, BA, BB. Initially, Alice and Bob shares a \
Bell state of the form (",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"AA"},
    "Ket"], "+", 
   TemplateBox[{"BB"},
    "Ket"]}]],ExpressionUUID->"ec2cc909-4f68-4370-abfa-7fbaba61fe1f"],
 ") and Bob has an unknown qubit state ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"C"},
    "Ket"], "=", 
   RowBox[{
    RowBox[{"\[Alpha]", 
     TemplateBox[{"A"},
      "Ket"]}], "+", 
    RowBox[{"\[Beta]", 
     TemplateBox[{"B"},
      "Ket"]}]}]}]],ExpressionUUID->"3fb16735-9153-4c5d-b614-9d7f6a352a4e"],
 ". Between Alice and Bob, we have (quantum) communication channel X. We \
model teleportation and direct communication by the following string system."
}], "Text",
 CellChangeTimes->{{3.8033465524925833`*^9, 3.8033466029306345`*^9}, {
  3.8033466489845552`*^9, 3.803346788618203*^9}, {3.8033468258113003`*^9, 
  3.8033469452094526`*^9}, {3.803347019318618*^9, 3.8033470554650593`*^9}, {
  3.803354915060568*^9, 
  3.8033549538844414`*^9}},ExpressionUUID->"0fabe377-82c2-4183-b86c-\
3d3feb6d77d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<AXAC\>\"", ",", "\"\<BXBC\>\""}], "}"}], ",", "1", ",", 
   "\"\<EvolutionGraph\>\"", ",", 
   RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8033471179240117`*^9, 3.8033471846423607`*^9}, {
   3.803354159410887*^9, 3.803354184156519*^9}, {3.803354219340233*^9, 
   3.803354229481391*^9}, {3.8033543302335615`*^9, 3.80335433394238*^9}, 
   3.8033853493736787`*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"293df705-e1cc-4502-af09-4e7edd7fb585"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "AXAC", 1 -> "AXAA", 1 -> "AXAB", 0 -> "BXBC", 1 -> "BXBA", 1 -> 
       "BXBB"}, {{{1, 2}, {1, 3}, {4, 5}, {4, 6}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{6.730886838798641, 1.}, {7.064291952952486, 
        0.}, {6.422170647803989, 0.}, {-5.865408802690539, 
        1.}, {-6.198811712526592, 0.}, {-5.556689660316791, 0.}}, 
       VertexLabels -> {"VertexWeight"}, VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }, 
       VertexWeight -> {1, 1, 1, 1, 1, 1}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {6.730886838798641, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {7.064291952952486, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$2", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {6.422170647803989, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$3", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-5.865408802690539, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-6.198811712526592, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$5", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-5.556689660316791, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$6", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{5.684341886080802*^-14, 
       798.2353362460747}, {-53.19254626657461, 47.26630610570318}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{Automatic, 103.92624016087154`}]], "Output",
 CellChangeTimes->{{3.8033471228497963`*^9, 3.8033471852535677`*^9}, 
   3.803354185690154*^9, {3.8033542207297688`*^9, 3.8033542300704536`*^9}, 
   3.8033543344241157`*^9, 3.8033853499665213`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"f81179a6-b3af-4e18-aa18-ade1e6eceef6"]
}, Open  ]],

Cell["Bell measurement completion rules", "Text",
 CellChangeTimes->{{3.803354233701973*^9, 3.803354244696892*^9}, {
  3.803354277275513*^9, 
  3.8033542933055677`*^9}},ExpressionUUID->"7912b7df-e794-40d1-962a-\
d8eeb9f76db6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BellCompletion", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", " ", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", 
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<AB\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<AB\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{"BellCompletion", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<AA\>\"", ",", "\"\<BB\>\"", ",", "\"\<AB\>\"", ",", "\"\<BA\>\""}], 
    "}"}], ",", "1", ",", "\"\<StatesGraph\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8033542959424515`*^9, 3.8033543507740903`*^9}, {
   3.8033543975106764`*^9, 3.803354474377326*^9}, {3.8033545085684896`*^9, 
   3.803354552887924*^9}, 3.8033547394380655`*^9, {3.8033554204020567`*^9, 
   3.8033554770630646`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"011facf7-e2aa-4d45-93f8-c54afebd3b22"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AB", "AA", "BA", "BB"}, {{{1, 2}, {3, 2}, {2, 1}, {4, 1}, {2, 3}, {4, 
       3}, {1, 4}, {3, 4}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.5332572940331453, -0.15130721083010584`}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.8499026954602148, 0.5212198069801938}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$2", Automatic, Center], {
          0.5246841946656199, 0.17737465309847977`}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation[
          "VertexID$2", Automatic, Center], {-0.1497024459406013, 
          0.49487847411401686`}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.17897668933305574`, 0.5045062310273692}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.49562209076013136`, 1.1770332488376771`}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          1.178702989616798, 0.5306681794761109}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          0.504316349010579, 0.8481720004916518}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1.0286672453063102`, 0.026067442268373875`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.02927424339245399, 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 0.9993847051413874}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.999938439770701, 1.0258205441879404`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$4"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-0.2393066909899053, 
       161.2393066909899}, {-83.2393066909899, 78.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{161.39999999999998`, Automatic}]], "Output",
 CellChangeTimes->{{3.8033554515164003`*^9, 3.8033554776125345`*^9}, 
   3.803374810635691*^9, 3.803387291227493*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c412c9ae-094e-4ccf-a2b3-ecb62cd96aa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
     "BellCompletion"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<AXAC\>\"", ",", "\"\<BXBC\>\""}], "}"}], ",", "2", ",", 
   "\"\<EvolutionGraph\>\"", ",", 
   RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803374774651843*^9, 3.8033747752802153`*^9}, {
  3.8033754328339996`*^9, 3.803375435287436*^9}, {3.8033852551014576`*^9, 
  3.8033852554971943`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"40eca89e-b840-46c3-88b5-30aa66c9b2b2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "AXAC", 1 -> "AXAA", 1 -> "AXAB", 0 -> "BXBC", 1 -> "BXBA", 1 -> 
       "BXBB", 2 -> "AXAA", 2 -> "AXAB", 2 -> "AXBA", 2 -> "AXBB", 2 -> 
       "BXAA", 2 -> "BXAB", 2 -> "BXBA", 2 -> "BXBB"}, {{{4, 6}, {6, 12}, {6, 
       13}, {2, 9}, {5, 11}, {5, 14}, {4, 5}, {3, 7}, {3, 10}, {1, 2}, {1, 
       3}, {2, 8}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{11.36563444241494, 2.}, {12.313915716027964`, 
        1.}, {10.492447940093259`, 1.}, {-11.706774405633876`, 
        2.}, {-12.6550158492495, 1.}, {-10.83365565456581, 1.}, {
        9.793772628968267, 0.}, {12.358550500817621`, 0.}, {
        13.023016526090924`, 0.}, {10.497490682761885`, 
        0.}, {-13.36263526138058, 0.}, {-10.835669903399648`, 
        0.}, {-10.136405958113276`, 0.}, {-12.702688988512557`, 0.}}, 
       VertexLabels -> {"VertexWeight"}, VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }, 
       VertexWeight -> {1, 3, 1, 1, 3, 1, 1, 3, 3, 1, 3, 1, 1, 3}}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {11.36563444241494, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {12.313915716027964`, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {10.492447940093259`, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-11.706774405633876`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-12.6550158492495, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-10.83365565456581, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {9.793772628968267, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$7", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {12.358550500817621`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$8", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {13.023016526090924`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$9", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {10.497490682761885`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-13.36263526138058, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-10.835669903399648`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-10.136405958113276`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-12.702688988512557`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{4.616005590924942, 
       1051.6842739553208`}, {-62.49859529728047, 57.128634632712085`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1055.800279546246, Automatic}]], "Output",
 CellChangeTimes->{{3.8033543464782124`*^9, 3.8033543513535767`*^9}, {
   3.803354418608677*^9, 3.8033544750076694`*^9}, {3.8033545228157673`*^9, 
   3.803354553576187*^9}, 3.8033554114996586`*^9, 3.8033852563843527`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"c4aeda9a-78bc-400f-a8fa-21286dc805d2"]
}, Open  ]],

Cell["\<\
AA\[PlusMinus]BB bell basis: 3B+2A \[Rule] Can be corrected by an X-gate
AB\[PlusMinus]BA bell basis: 2B + 3A \[Rule] Correct state

How to produce initial entangled state without ruining the evolution?\
\>", "Text",
 CellChangeTimes->{{3.803354592532451*^9, 3.8033547788242416`*^9}, {
  3.803386950414787*^9, 
  3.803386968685762*^9}},ExpressionUUID->"af3a2fb0-8929-4fda-8bff-\
2c869ed69d09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
   "\"\<DC\>\"", ",", "2", ",", "\"\<EvolutionCausalGraph\>\"", ",", 
   RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803376542804615*^9, 3.8033765771477394`*^9}, {
  3.8033766420498786`*^9, 3.8033766626190925`*^9}, {3.803376804013898*^9, 
  3.8033768262337527`*^9}, {3.8033780057029085`*^9, 3.803378092411661*^9}, {
  3.803378149589497*^9, 3.8033783172922316`*^9}, {3.8033783918857164`*^9, 
  3.8033784897599144`*^9}, {3.8033786838532624`*^9, 3.80337868446465*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"514f1d7d-89e5-48e8-9a22-57712ca3e5b6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", {
       "C" -> "A", "C", {"AXA", ""}}, {"C" -> "B", "C", {"AXA", ""}}, {
       "C" -> "A", "C", {"BXB", ""}}, {"C" -> "B", "C", {"BXB", ""}}, {
       "D" -> "AXA", "D", {"", "A"}}, {"D" -> "BXB", "D", {"", "A"}}, {
       "D" -> "AXA", "D", {"", "B"}}, {"D" -> "BXB", "D", {"", "B"}}, {
       "C" -> "A", "C", {"D", ""}}, {"C" -> "B", "C", {"D", ""}}, {
       "D" -> "AXA", "D", {"", "C"}}, {"D" -> "BXB", "D", {"", "C"}}}, {{{4, 
       10}, {4, 11}, {5, 12}, {5, 13}, {2, 14}, {2, 15}, {3, 16}, {3, 17}, {1,
        18}, {1, 19}, {1, 20}, {1, 21}, {10, 6}, {12, 7}, {18, 2}, {11, 8}, {
       13, 9}, {19, 3}, {14, 6}, {16, 8}, {20, 4}, {15, 7}, {17, 9}, {21, 5}},
        Null}, {
      EdgeStyle -> {
        DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {"AXAC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}, 
       VertexWeight -> {1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1}}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.01906487232574189], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 4.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {3., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {3., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {4., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"AXA\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"A\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-1., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"AXA\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"B\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {0., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$11", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"BXB\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"A\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {1., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$12", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"BXB\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"B\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {2., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$13", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"A\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-3., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$14", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 
                 GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"A\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-2., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$15", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 
                 GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"B\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {3., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$16", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"B\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {4., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$17", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"D\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"A\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {-2., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$18", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$18"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"D\"", 
                TagBox[
                 
                 GridBox[{{"\"C\""}, {"\"B\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {3., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$19", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$19"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"C\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {0., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$20", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$20"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox[
              TemplateBox[{"\"\"", 
                TagBox[
                 
                 GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                "\"C\""}, "RowDefault"], 
              Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]], StripOnInput -> False], 
            TraditionalForm], {1., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$21"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$21", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$21"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 442.7092063093631}, {-132.07546482984014`, 
       126.64408163265307`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{443.9999999999999, Automatic}]], "Output",
 CellChangeTimes->{{3.8033780700149794`*^9, 3.8033780928900175`*^9}, 
   3.8033781553702307`*^9, 3.803378187979703*^9, {3.803378221140706*^9, 
   3.8033782733262987`*^9}, 3.803378317885662*^9, 3.803378435364442*^9, {
   3.8033784840128713`*^9, 3.8033784902401*^9}, 3.803378684988763*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"75b6cab1-24af-4733-a805-9dfce6afc5e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
     "BellCompletion"}], "]"}], ",", "\"\<DC\>\"", ",", "3", ",", 
   "\"\<EvolutionGraph\>\"", ",", 
   RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8033785766507998`*^9, 3.803378600640994*^9}, {
  3.8033786439036055`*^9, 3.803378647508235*^9}, {3.803378938712347*^9, 
  3.8033789419689937`*^9}, {3.803379070966526*^9, 3.8033791077722235`*^9}, {
  3.8033803803677397`*^9, 3.8033803905473824`*^9}, {3.8033856288880997`*^9, 
  3.8033856308110623`*^9}, {3.80338714252814*^9, 3.803387145192916*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"fa116d88-edf9-4298-946c-1344e501c6b3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXAC", 1 -> "BXBC", 1 -> "DA", 1 -> "DB", 2 -> "AXAA", 
       2 -> "AXAB", 2 -> "BXBA", 2 -> "BXBB", 3 -> "AXAA", 3 -> "AXAB", 3 -> 
       "AXBA", 3 -> "AXBB", 3 -> "BXAA", 3 -> "BXAB", 3 -> "BXBA", 3 -> 
       "BXBB"}, {{{9, 16}, {5, 9}, {3, 8}, {3, 9}, {9, 15}, {2, 6}, {1, 2}, {
       1, 3}, {1, 5}, {8, 17}, {6, 12}, {6, 11}, {8, 14}, {4, 6}, {4, 8}, {1, 
       4}, {7, 10}, {7, 13}, {2, 7}, {5, 7}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }, 
       VertexWeight -> {1, 1, 1, 3, 1, 6, 2, 6, 2, 2, 6, 6, 2, 6, 2, 2, 6}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{5.684341886080802*^-14, 428.4}, {-96.76759834909164, 
       90.99999999999996}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{428.4, Automatic}]], "Output",
 CellChangeTimes->{
  3.8033786013282385`*^9, 3.803378648118873*^9, 3.8033789424531794`*^9, {
   3.8033790721614523`*^9, 3.8033791082011576`*^9}, {3.803380384260257*^9, 
   3.803380391263851*^9}, 3.803385635742234*^9, {3.803387278245758*^9, 
   3.8033872967637434`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"493c4530-ae79-4999-9811-b2f6afc82629"]
}, Open  ]],

Cell["This seems to work!", "Text",
 CellChangeTimes->{{3.8033786588218007`*^9, 3.8033786660165887`*^9}, {
  3.803379188393057*^9, 
  3.8033791978877754`*^9}},ExpressionUUID->"5333ea59-f497-435d-8a1a-\
4adf1b2d4484"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
       RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
       RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}], ",", 
     "BellCompletion"}], "]"}], ",", "\"\<DC\>\"", ",", "3", ",", 
   "\"\<CausalInvariantQ\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8033792019690685`*^9, 3.8033792239828033`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"84150251-d523-4ca4-b091-fc63d2e79c76"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.803379214545377*^9, 3.803379224546818*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"ead29c43-6e55-4c08-a82e-d17d0a84060c"]
}, Open  ]],

Cell["\<\
The system is not causal invariant! Which reflects the fact that Alice state \
after teleportation is still coherent. \
\>", "Text",
 CellChangeTimes->{{3.803379233591385*^9, 
  3.8033793001830406`*^9}},ExpressionUUID->"8844e2c4-5553-4ea8-bfd2-\
529b7077d7ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.80218634588871*^9}},
 CellTags->"Keywords",
 CellID->442466898,ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490"],

Cell[CellGroupData[{

Cell["Quantum Information", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}, {3.803128985219602*^9, 
  3.8031289926794815`*^9}, {3.803129032724657*^9, 
  3.8031290514582148`*^9}},ExpressionUUID->"5813e785-8d21-454e-ac75-\
5f3913597a2c"],

Cell["Quantum Teleportation", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}, {3.803128985219602*^9, 
  3.8031289926794815`*^9}, {3.80312903357342*^9, 
  3.8031290599747205`*^9}},ExpressionUUID->"40d41ce2-f865-4dd5-9300-\
b33e1250b1fc"],

Cell["Entanglement", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}, {3.803128985219602*^9, 
  3.8031289926794815`*^9}, {3.80312903357342*^9, 
  3.8031290417280087`*^9}},ExpressionUUID->"3a101707-676f-431b-a8cd-\
c4a736f6c680"],

Cell["String substitution system", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.8021864027417173`*^9}, {
  3.803129012628978*^9, 3.8031290449407253`*^9}, {3.8031970209016256`*^9, 
  3.8031970249884014`*^9}},ExpressionUUID->"bedccd35-f9c3-46ac-ac87-\
d418e441e604"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Acknowledgment", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186368848865*^9}},
 CellTags->"Keywords",
 CellID->1836614011],

Cell[TextData[{
 StyleBox["Mentor",
  FontWeight->"Bold"],
 ": Marco Thiel"
}], "Text",
 CellChangeTimes->{{3.8021864691325283`*^9, 3.8021864869063177`*^9}, {
  3.8031290627388024`*^9, 
  3.8031290730477033`*^9}},ExpressionUUID->"006d71ed-241c-4cf5-8ee6-\
00d91fa914f6"],

Cell["<text>", "Text",
 CellChangeTimes->{{3.802186374730517*^9, 3.802186375456683*^9}, {
  3.802186730191574*^9, 3.802186731523522*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186360670889*^9}},
 CellTags->"Keywords",
 CellID->1137237116],

Cell[CellGroupData[{

Cell["<Ref1>", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186383585804*^9}, {
  3.802186733203268*^9, 3.8021867345244904`*^9}}],

Cell["<Ref2>", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186385191455*^9}, {
  3.802186737059086*^9, 3.802186738383222*^9}}],

Cell["...", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186386161345*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontWeight -> Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2020", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontSize -> 40]}], CellFrameMargins -> 10, 
   Background -> 
   RGBColor[0.3176470588235294, 0.49019607843137253`, 0.0784313725490196]]},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d2da5a7f-ae50-40b3-93d6-5f37408d7001"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Keywords"->{
  Cell[247838, 5659, 190, 3, 67, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
   CellTags->"Keywords",
   CellID->442466898],
  Cell[249299, 5697, 143, 3, 67, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
   CellTags->"Keywords",
   CellID->1836614011],
  Cell[249892, 5719, 139, 3, 67, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
   CellTags->"Keywords",
   CellID->1137237116]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Keywords", 251404, 5765}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 282, 4, 97, "Title",ExpressionUUID->"7f5a763c-439b-409d-85d9-b001eb779415"],
Cell[865, 28, 416, 6, 31, "Author",ExpressionUUID->"17c07b4e-577f-4fd8-bb63-78ea3b522bfe"],
Cell[1284, 36, 250, 4, 32, "Affiliation",ExpressionUUID->"96c2b484-c964-462d-9af7-4e5a7606bcb7"],
Cell[1537, 42, 1373, 26, 269, "Abstract",ExpressionUUID->"bd44fc5d-a918-4ecb-a444-9098256d0564"],
Cell[CellGroupData[{
Cell[2935, 72, 185, 2, 67, "Section",ExpressionUUID->"dde3b2d2-a587-4e33-b62b-89e06e4d8b0b"],
Cell[3123, 76, 293, 5, 35, "Text",ExpressionUUID->"2c2380b2-0547-4128-a721-db738b29388d"],
Cell[3419, 83, 369, 8, 38, "CodeText",ExpressionUUID->"b6cf8fe9-f994-4c80-b699-4acc808ada53"],
Cell[CellGroupData[{
Cell[3813, 95, 595, 17, 28, "Input",ExpressionUUID->"67fcfee9-b5f6-4707-8cd4-267a0ba5567d"],
Cell[4411, 114, 58931, 1052, 233, "Output",ExpressionUUID->"c2e29358-141a-4437-bbff-6b1981baf6d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63391, 1172, 208, 3, 67, "Section",ExpressionUUID->"caacebfb-419d-440c-b7aa-51a88439c458"],
Cell[63602, 1177, 604, 10, 35, "Text",ExpressionUUID->"aaaa7627-b177-492c-9708-ecc8c98df024"],
Cell[CellGroupData[{
Cell[64231, 1191, 176, 3, 32, "ItemNumbered",ExpressionUUID->"eec3c8a5-4c32-419d-87f4-b212fbbdd0ed"],
Cell[64410, 1196, 197, 3, 32, "ItemNumbered",ExpressionUUID->"edd632b2-9d0f-4786-a849-fdcf9115d942"],
Cell[64610, 1201, 231, 4, 32, "ItemNumbered",ExpressionUUID->"c9fbff3c-4cdf-4247-b04c-94142a887138"]
}, Open  ]],
Cell[64856, 1208, 228, 5, 35, "Text",ExpressionUUID->"885760f4-26dd-4c69-824f-9267a82007cd"],
Cell[65087, 1215, 534, 9, 59, "CodeText",ExpressionUUID->"07e2c6e1-5e20-4cf8-b6d9-36eca977b547"],
Cell[CellGroupData[{
Cell[65646, 1228, 939, 16, 28, "Input",ExpressionUUID->"0463416d-61d3-4c5a-84ec-bcb5d883417c"],
Cell[66588, 1246, 6719, 166, 45, "Output",ExpressionUUID->"d3026e7b-beef-49cb-bd75-a8ebf51bb149"]
}, Open  ]],
Cell[73322, 1415, 1111, 18, 81, "Text",ExpressionUUID->"63a88228-8de1-455f-8fb5-753816040a9d"],
Cell[CellGroupData[{
Cell[74458, 1437, 193, 3, 45, "Subsubsection",ExpressionUUID->"9a5d00b1-14f6-4540-9b28-28c5604d4681"],
Cell[CellGroupData[{
Cell[74676, 1444, 824, 17, 28, "Input",ExpressionUUID->"f3e12552-5dba-4eac-aebd-d396c95cc641"],
Cell[75503, 1463, 37579, 916, 449, "Output",ExpressionUUID->"dd38f973-fe23-40fc-bf7f-2a1862e235da"]
}, Open  ]],
Cell[113097, 2382, 886, 14, 81, "Text",ExpressionUUID->"ee5492d2-d98e-4a11-bfc3-a9a80b5556ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114020, 2401, 183, 3, 45, "Subsubsection",ExpressionUUID->"706dc09e-3c96-4c7e-a907-523e4c1e6dfe"],
Cell[114206, 2406, 201, 3, 35, "Text",ExpressionUUID->"1fdeb422-b316-4153-b899-de05e583ee60"],
Cell[CellGroupData[{
Cell[114432, 2413, 1233, 28, 49, "Input",ExpressionUUID->"9e7ebb83-2366-44e7-b8e7-c3514820f395"],
Cell[115668, 2443, 6354, 150, 368, "Output",ExpressionUUID->"ec123c33-653a-45bf-921f-2c4339ff7e81"]
}, Open  ]],
Cell[122037, 2596, 1211, 20, 127, "Text",ExpressionUUID->"2c76b784-d54f-4aca-afe6-f8d59a2021da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123285, 2621, 174, 3, 45, "Subsubsection",ExpressionUUID->"525aa8c5-5252-459b-bd95-af53bd00479e"],
Cell[123462, 2626, 1172, 30, 84, "Text",ExpressionUUID->"0fabe377-82c2-4183-b86c-3d3feb6d77d0"],
Cell[CellGroupData[{
Cell[124659, 2660, 892, 18, 49, "Input",ExpressionUUID->"293df705-e1cc-4502-af09-4e7edd7fb585"],
Cell[125554, 2680, 8856, 213, 120, "Output",ExpressionUUID->"f81179a6-b3af-4e18-aa18-ade1e6eceef6"]
}, Open  ]],
Cell[134425, 2896, 226, 4, 35, "Text",ExpressionUUID->"7912b7df-e794-40d1-962a-d8eeb9f76db6"],
Cell[CellGroupData[{
Cell[134676, 2904, 1287, 25, 49, "Input",ExpressionUUID->"011facf7-e2aa-4d45-93f8-c54afebd3b22"],
Cell[135966, 2931, 6516, 161, 178, "Output",ExpressionUUID->"c412c9ae-094e-4ccf-a2b3-ecb62cd96aa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142519, 3097, 1033, 22, 49, "Input",ExpressionUUID->"40eca89e-b840-46c3-88b5-30aa66c9b2b2"],
Cell[143555, 3121, 17956, 428, 150, "Output",ExpressionUUID->"c4aeda9a-78bc-400f-a8fa-21286dc805d2"]
}, Open  ]],
Cell[161526, 3552, 403, 9, 104, "Text",ExpressionUUID->"af3a2fb0-8929-4fda-8bff-2c869ed69d09"],
Cell[CellGroupData[{
Cell[161954, 3565, 1092, 19, 49, "Input",ExpressionUUID->"514f1d7d-89e5-48e8-9a22-57712ca3e5b6"],
Cell[163049, 3586, 59720, 1469, 276, "Output",ExpressionUUID->"75b6cab1-24af-4733-a805-9dfce6afc5e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222806, 5060, 1301, 24, 49, "Input",ExpressionUUID->"fa116d88-edf9-4298-946c-1344e501c6b3"],
Cell[224110, 5086, 22109, 526, 204, "Output",ExpressionUUID->"493c4530-ae79-4999-9811-b2f6afc82629"]
}, Open  ]],
Cell[246234, 5615, 216, 4, 35, "Text",ExpressionUUID->"5333ea59-f497-435d-8a1a-4adf1b2d4484"],
Cell[CellGroupData[{
Cell[246475, 5623, 849, 17, 49, "Input",ExpressionUUID->"84150251-d523-4ca4-b091-fc63d2e79c76"],
Cell[247327, 5642, 177, 2, 32, "Output",ExpressionUUID->"ead29c43-6e55-4c08-a82e-d17d0a84060c"]
}, Open  ]],
Cell[247519, 5647, 270, 6, 35, "Text",ExpressionUUID->"8844e2c4-5553-4ea8-bfd2-529b7077d7ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247838, 5659, 190, 3, 67, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
 CellTags->"Keywords",
 CellID->442466898],
Cell[CellGroupData[{
Cell[248053, 5666, 308, 5, 32, "Item",ExpressionUUID->"5813e785-8d21-454e-ac75-5f3913597a2c"],
Cell[248364, 5673, 309, 5, 32, "Item",ExpressionUUID->"40d41ce2-f865-4dd5-9300-b33e1250b1fc"],
Cell[248676, 5680, 300, 5, 32, "Item",ExpressionUUID->"3a101707-676f-431b-a8cd-c4a736f6c680"],
Cell[248979, 5687, 271, 4, 32, "Item",ExpressionUUID->"bedccd35-f9c3-46ac-ac87-d418e441e604"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249299, 5697, 143, 3, 67, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
 CellTags->"Keywords",
 CellID->1836614011],
Cell[249445, 5702, 270, 8, 35, "Text",ExpressionUUID->"006d71ed-241c-4cf5-8ee6-00d91fa914f6"],
Cell[249718, 5712, 137, 2, 35, "Text",ExpressionUUID->"279e8012-b716-44b0-8c1c-3c37e92e2ad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249892, 5719, 139, 3, 67, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
 CellTags->"Keywords",
 CellID->1137237116],
Cell[CellGroupData[{
Cell[250056, 5726, 139, 2, 32, "Item",ExpressionUUID->"bac34aab-5f3c-4c18-85c2-373b47cd99f0"],
Cell[250198, 5730, 137, 2, 32, "Item",ExpressionUUID->"e5e467fd-9b3a-49e2-8d1e-d3011b1f02df"],
Cell[250338, 5734, 85, 1, 32, "Item",ExpressionUUID->"40a463f9-c8f1-43ba-810b-4f669ff2ca85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

