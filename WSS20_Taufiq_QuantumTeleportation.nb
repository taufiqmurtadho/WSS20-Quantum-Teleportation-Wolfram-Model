(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    424440,      10157]
NotebookOptionsPosition[    418544,      10065]
NotebookOutlinePosition[    418945,      10081]
CellTagsIndexPosition[    418902,      10078]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Goal:",
  FontWeight->"Bold"],
 " String substitution is a simplified one dimensional system for the Wolfram \
physics model. The goal of this project is to generate a string substitution \
system that can be interpreted as a quantum teleportation phenomenon, \
investigate its causal structure, and identify the signature of quantum \
effects in the structure. The motivation behind it is to bridge Wolfram \
fundamental physics framework to the frontier of applied quantum mechanics.\n\
\n",
 StyleBox["Main Results: ",
  FontWeight->"Bold"],
 "Usually, measurement under different basis requires us to define new \
foliation of a multiway system. However, by customizing the Knuth-Bendix \
completion map in the default foliation, I  found a very simple method to \
perform Bell measurement on string substitution systems . This method can \
also be generalized into a measurement on other bases as long as we can \
express them in terms of a superposition of computational basis states. After \
generating an initial string state that is entangled, I implement this Bell \
completion technique and show that quantum teleportation indeed occurs. After \
that, I investigate the causal multiway graph associated with this process \
and discuss some quantum signatures like the change of causal structure after \
measurement and the availability of new states that were previously \
impossible before the measurement. \n\n",
 StyleBox["Future Work:",
  FontWeight->"Bold"],
 " In this project, I have demonstrated quantum teleportation in string \
substitution systems without incorporating quantum phase between different \
eigenstates. In the Wolfram model, quantum amplitude and quantum phase \
originated from different aspects of the multiway system. Quantum amplitudes \
correspond to the state\[CloseCurlyQuote]s path weights whereas the phase is \
related to the coordinates in branchial space. If we include quantum phase in \
the teleportation model, we would be able to distinguish all four Bell states \
during teleportation. Furthermore, since string substitution system is a \
simplified model for the hypergraph multiway system in the Wolfram model, \
exploring quantum teleportation in a hypergraph multiway system would be a \
natural extension to this project."
}], "Abstract",
 CellChangeTimes->{{3.802186680026499*^9, 3.802186711462531*^9}, {
   3.8031146995891304`*^9, 3.803114700052828*^9}, {3.8034220420293627`*^9, 
   3.8034220783871565`*^9}, {3.8034222643422117`*^9, 
   3.8034222742143717`*^9}, {3.8034223712141585`*^9, 
   3.8034224340803056`*^9}, {3.8034224706975417`*^9, 
   3.8034226215283604`*^9}, {3.8034235310346036`*^9, 
   3.8034235361423693`*^9}, {3.8034245019099197`*^9, 
   3.8034245062134514`*^9}, {3.8034245965188494`*^9, 
   3.8034246020378017`*^9}, {3.8034261929698114`*^9, 3.803426221846518*^9}, {
   3.803426266908451*^9, 3.80342630469409*^9}, {3.8034281571255245`*^9, 
   3.8034282026089106`*^9}, {3.803428240883169*^9, 3.803428249537766*^9}, {
   3.803428352836381*^9, 3.8034283581454363`*^9}, {3.8034283940421195`*^9, 
   3.8034283988007665`*^9}, {3.8034284422145395`*^9, 
   3.8034284444634557`*^9}, {3.803428483095441*^9, 3.8034285250674915`*^9}, {
   3.8034285610396233`*^9, 3.803429070683202*^9}, {3.803429150643037*^9, 
   3.803429425297531*^9}, {3.8034295290696917`*^9, 3.803429541161143*^9}, {
   3.803429582947622*^9, 3.803429594442663*^9}, {3.8034296290760565`*^9, 
   3.803429730012268*^9}, {3.8034299978503003`*^9, 3.8034300078374834`*^9}, {
   3.803430079250289*^9, 3.8034302074767685`*^9}, {3.8034308164884257`*^9, 
   3.8034308175676126`*^9}, {3.8034316050260243`*^9, 3.803431630041071*^9}, {
   3.8034350163540316`*^9, 3.8034350201199493`*^9}, {3.803470335032366*^9, 
   3.8034703808148704`*^9}, {3.8034704275812836`*^9, 
   3.8034707382523766`*^9}, {3.8034707704815702`*^9, 3.803470856256149*^9}, {
   3.80352319901273*^9, 3.8035232050067077`*^9}, {3.803597636932788*^9, 
   3.8035977428848915`*^9}, {3.803597786108383*^9, 3.8035978781752014`*^9}, {
   3.8036184825621185`*^9, 3.80361849226038*^9}, {3.803618533325248*^9, 
   3.803618627757517*^9}, {3.80362509843423*^9, 3.8036252340320177`*^9}, {
   3.8036405543069086`*^9, 3.803640601735392*^9}, {3.803640635309654*^9, 
   3.803640752390975*^9}, {3.803640789464913*^9, 3.8036409494626737`*^9}, {
   3.803640989482668*^9, 3.8036411183026013`*^9}, {3.803641162563857*^9, 
   3.80364122648388*^9}, {3.803641271843029*^9, 3.8036413870193768`*^9}, {
   3.8036882569026957`*^9, 3.8036883317973604`*^9}, {3.80368836755613*^9, 
   3.803688443318957*^9}, {3.8036885129236984`*^9, 3.8036885141531997`*^9}, {
   3.8036885501799183`*^9, 3.803688964616508*^9}, {3.8036890531860743`*^9, 
   3.803689322455948*^9}, {3.803689416779893*^9, 3.8036894684488597`*^9}, {
   3.8036895352001915`*^9, 3.8036896357281475`*^9}, {3.803689863995382*^9, 
   3.8036901497588587`*^9}, {3.8036901982365904`*^9, 3.803690355407271*^9}, {
   3.8036904068284407`*^9, 3.803690421132272*^9}, {3.8036906668638315`*^9, 
   3.8036906673314447`*^9}, 3.8036908251182632`*^9, {3.803711565443734*^9, 
   3.803711586180264*^9}, {3.8037150995861454`*^9, 3.8037151841194506`*^9}, {
   3.803725598564879*^9, 3.803725606755061*^9}, {3.8037256475575967`*^9, 
   3.803725970952902*^9}, {3.803726006492993*^9, 3.803726171385277*^9}, {
   3.803726219475863*^9, 3.8037263328749914`*^9}, {3.8037263697877607`*^9, 
   3.803726432243882*^9}, {3.803726474741347*^9, 3.803726492211795*^9}, {
   3.8038585823272877`*^9, 3.803858604112727*^9}, {3.8038586639247913`*^9, 
   3.803858664933834*^9}, {3.8038586995511885`*^9, 
   3.8038587067862296`*^9}},ExpressionUUID->"2c29d8df-a05d-4218-8bdc-\
4287fc0ced72"],

Cell["\<\
Alice and Bob are friends living in the future era when quantum technology is \
already ubiquitous. One weekend, Bob wants to send Alice a secret message. In \
the quantum world, a unit of information is called qubit (quantum bit). In \
contrast to a classical bit that takes value either 0 or 1, a qubit can be \
both 0 and 1 at the same time - a property known as superposition. To send \
his message to Alice, Bob decided to encrypt his message into a qubit. One \
option for Bob to send the qubit to Alice is by using a quantum channel - \
communication channel that can maintain qubit in superposition. The process \
of sending a message through a (quantum) channel can be illustrated by the \
following string substitution system. \
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwdzlsog3EABfCZy4NM2Si3cslyXdTIPU3jQZKoTclCPrS0uTOXxAMZIg/I
Ssrt8yC1REarUS7DQkyW2IMoDGOEFP/zPZx+b+eckHJlAcVmsVhBJDCtNra5
RfIk2hWkMyY1rHVBz+RVNdx7fKehXqw4hGHlgWaYuXz0An/f735gd1Ulp5Vo
URq48NlR7wON9Jcf1Bqbg2DA7Uw03Imi4qGEWk6BZyeF+VBYJZXBaX6GEs61
pTbAK525H6a9bg9B58W6SRi6XzYPfbPsF/DUw2pj+toH7XBzfcRNRbQdmxnP
Nz548FMT7g1P5JX3A8Sc0ggb5PGzHbCEc80ZJNZVCLhQZejlwyKnThnM+36j
oG64yX2WKHsI94eJOcYxmmjyKRmH2QUmDYxYipyCur/iWTgkfqahln1Qs4Kf
4kYF1CyUHewSqyf0jI6iYvU5/s6ZGMe5lu4Loos1twd2uNYKL7GXzE6AwV4d
MXaiXBcVByU3kaMs6ZOobyuX8R9Ua/3o
  "],ExpressionUUID->"5a56eb7a-6ac6-4c7b-877b-ab31ac7ef5c2"],

Cell["A = Alice, B = Bob, C = Message, X = Channel", "CodeText",
 CellChangeTimes->{{3.803433130594201*^9, 
  3.803433151604272*^9}},ExpressionUUID->"426b6d6e-7bce-443f-9d1c-\
ae47360846a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BC\>\"", "\[Rule]", " ", "\"\<CB\>\""}], ",", 
     RowBox[{"\"\<XC\>\"", "\[Rule]", " ", "\"\<CX\>\""}], ",", 
     RowBox[{"\"\<AC\>\"", "\[Rule]", " ", "\"\<CA\>\""}]}], "}"}], ",", 
   "\"\<AXBC\>\"", ",", "4", ",", "\"\<StatesGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8034330926123734`*^9, 3.8034330947851315`*^9}, {
  3.8037307168030653`*^9, 3.803730719309391*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"92e99047-c261-4992-94ae-c01127a0541a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXBC", "AXCB", "ACXB", "CAXB"}, {{{1, 2}, {2, 3}, {3, 4}}, Null}, {
      EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 6.123233995736766*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXCB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 4.898587196589413*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ACXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 2.4492935982947064`*^-16}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CAXB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$4"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 699.5999999999977}, {-10.322000000000092`, 
       5.6780000000000435`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{699.5999999999977, Automatic}]], "Output",
 CellChangeTimes->{3.803433036481126*^9, 3.8034330953755484`*^9, 
  3.8037307438169713`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f94a7a8c-bfea-4988-8d5e-b2ed8df7f149"]
}, Open  ]],

Cell["\<\
The goal is to move the message\[CloseCurlyQuote]s qubit C from the last \
letter to the first. Since information transfer is limited by the speed of \
light, C can only move one step at a time. Unfortunately, a quantum channel \
service is still expensive for Bob. So, Bob and Alice agree to perform a \
quantum teleportation protocol instead. Using this protocol, Bob can \
\[OpenCurlyDoubleQuote]teleport\[CloseCurlyDoubleQuote] his message to Alice \
provided that they already share a pair of qubits having a special property \
known as entanglement. If Alice and Bob share an entangled qubits, their bit \
values would be correlated no matter how far apart they are from each other. \
For example, if Bob has a bit value of 0, Alice bit would also be 0, and if \
Bob has a bit value of 1 Alice bit would also be 1. Naively, one might think \
that an entangled state can be used to \[OpenCurlyDoubleQuote]teleport\
\[CloseCurlyDoubleQuote] message faster than light as shown in the following \
string substitution system. However, this is actually not the case for a \
reason that will be elaborated below. \
\>", "Text",
 CellChangeTimes->{
  3.8034326487815123`*^9, {3.8034327377354527`*^9, 3.8034327747833867`*^9}, {
   3.803433366259884*^9, 3.803433377093155*^9}, {3.8034335653078537`*^9, 
   3.803433622089873*^9}, {3.8034336654135633`*^9, 3.803433754417009*^9}, {
   3.8034722133017855`*^9, 3.803472246554635*^9}, {3.8034722861718297`*^9, 
   3.803472332516679*^9}, {3.80347236631501*^9, 3.8034723708167725`*^9}, {
   3.803472467317993*^9, 3.8034724729871244`*^9}, {3.8035212702966957`*^9, 
   3.8035215078411293`*^9}, {3.803521554973507*^9, 3.803521628424032*^9}, {
   3.8035217444154105`*^9, 3.8035217461953926`*^9}, {3.8035255486343637`*^9, 
   3.8035255508642163`*^9}, {3.8035305993029413`*^9, 3.803530704238755*^9}, {
   3.803626537455022*^9, 3.8036265570348067`*^9}, {3.803630039631819*^9, 
   3.8036300660143037`*^9}, {3.803679137396348*^9, 3.8036791401797233`*^9}, {
   3.8036909323426003`*^9, 3.8036909328142657`*^9}, {3.8037116639311438`*^9, 
   3.8037117035524483`*^9}, {3.803711800470511*^9, 3.803711812690256*^9}, {
   3.8037152327680483`*^9, 
   3.803715333105094*^9}},ExpressionUUID->"a342b118-8726-400b-90be-\
032005f29a73"],

Cell["\<\
String substitution system demonstrating entanglement non-local effect\
\>", "CodeText",
 CellChangeTimes->{{3.8036225057894917`*^9, 3.8036225101811314`*^9}, {
  3.803630081178447*^9, 
  3.8036301101322823`*^9}},ExpressionUUID->"ab86e0a0-350a-4064-8f77-\
336e67e00ced"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<B\>\"", "\[Rule]", " ", "\"\<C\>\""}]}], "}"}], ",", 
   "\"\<AXXBC\>\"", ",", "3", ",", "\"\<EvolutionCausalGraph\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8034724215162363`*^9, 3.8034724278848114`*^9}, {
  3.8035216711671333`*^9, 3.803521674361841*^9}, {3.8036266000803576`*^9, 
  3.803626615373147*^9}},
 CellLabel->
  "In[876]:=",ExpressionUUID->"13f434fb-db7b-41b6-85d1-eb4a56095c7e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AXXBC", "BXXBC", "AXXCC", "BXXCC", "CXXBC", "CXXCC", {
       "A" -> "B", "A", {"", "XXBC"}}, {"B" -> "C", "B", {"AXX", "C"}}, {
       "A" -> "B", "A", {"", "XXCC"}}, {"B" -> "C", "B", {"", "XXBC"}}, {
       "B" -> "C", "B", {"BXX", "C"}}, {"B" -> "C", "B", {"", "XXCC"}}, {
       "B" -> "C", "B", {"CXX", "C"}}}, {{{1, 7}, {1, 8}, {3, 9}, {2, 10}, {2,
        11}, {4, 12}, {5, 13}, {7, 2}, {7, 10}, {7, 12}, {9, 4}, {9, 12}, {10,
        5}, {12, 6}, {8, 3}, {11, 4}, {13, 6}}, Null}, {
      EdgeStyle -> {
        DirectedEdge["CXXBC", {"B" -> "C", "B", {"CXX", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXBC", {"B" -> "C", "B", {"BXX", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXCC", {"A" -> "B", "A", {"", "XXCC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXCC"}}, "BXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXBC"}}, "BXXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXBC", {"B" -> "C", "B", {"", "XXBC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXBC", {"A" -> "B", "A", {"", "XXBC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXBC"}}, "CXXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXXBC", {"B" -> "C", "B", {"AXX", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"AXX", "C"}}, "AXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXCC"}}, {
           "B" -> "C", "B", {"", "XXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXBC"}}, {
           "B" -> "C", "B", {"", "XXCC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"B" -> "C", "B", {"CXX", "C"}}, "CXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"B" -> "C", "B", {"", "XXCC"}}, "CXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXXCC", {"B" -> "C", "B", {"", "XXCC"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"A" -> "B", "A", {"", "XXBC"}}, {
           "B" -> "C", "B", {"", "XXBC"}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"B" -> "C", "B", {"BXX", "C"}}, "BXXCC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {{"B" -> "C", "B", {"BXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"AXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "B" -> "C", "B", {"", "XXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "CXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "CXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "A" -> "B", "A", {"", "XXCC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "A" -> "B", "A", {"", "XXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"CXX", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "B" -> "C", "B", {"", "XXBC"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXXCC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.5219218021925992, 4.7390390989037}, {0.7043917048148253, 
           4.647804147592588}, {0.9076573882666816, 4.546171305866659}, {
           1.1317188525481685`, 4.434140573725916}, {1.3765760976592858`, 
           4.311711951170357}, {1.6422291236000337`, 4.178885438199983}, {
           1.7173168384000266`, 4.136403309195048}, {1.7835707044000206`, 
           4.088461561380236}, {1.8409907216000154`, 4.035060194755549}, {
           1.8895768900000105`, 3.9761992093209826`}, {1.9293292096000068`, 
           3.9118786050765397`}, {1.9602476804000037`, 3.842098382022221}, {
           1.9823323024000015`, 3.766858540158024}, {1.9955830756000004`, 
           3.686159079483951}, {2., 3.6}, {2., 3.51358024691358}, {2., 
           3.432098765432099}, {2.0000000000000004`, 3.355555555555556}, {2., 
           3.283950617283951}, {2., 3.217283950617284}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.24042613086921105`, 4.759573869130789}, {0.32011027392758673`, 
           4.679889726072413}, {0.4076254611223915, 4.592374538877609}, {
           0.5029716924536255, 4.497028307546374}, {0.6061489679212887, 
           4.393851032078711}, {0.717157287525381, 4.2828427124746185`}, {
           0.7765193382916591, 4.218542390103401}, {0.8288976183795513, 
           4.151349295200696}, {0.8742921277890583, 4.081263427766498}, {
           0.9127028665201794, 4.008284787800808}, {0.9441298345729148, 
           3.9324133753036286`}, {0.9685730319472646, 3.8536491902749574`}, {
           0.9860324586432287, 3.771992232714796}, {0.9965081146608072, 
           3.687442502623144}, {1., 3.4}, {1., 3.3111111111111104`}, {1., 
           3.2222222222222223`}, {1.0000000000000002`, 3.133333333333334}, {
           1., 3.0444444444444443`}, {1., 2.9555555555555557`}, {1., 
           2.8666666666666667`}, {1., 2.7777777777777777`}, {1., 
           2.688888888888889}, {1., 2.4000000000000004`}, {1., 
           2.311111111111112}, {1., 2.222222222222222}, {1.0000000000000002`, 
           2.1333333333333337`}, {1., 2.0444444444444447`}, {1., 
           1.9555555555555557`}, {1., 1.8666666666666667`}, {1., 
           1.777777777777778}, {1., 1.688888888888889}, {1., 1.6}, {1., 
           1.5135802469135802`}, {1., 1.4320987654320987`}, {
           1.0000000000000002`, 1.3555555555555558`}, {1., 
           1.2839506172839508`}, {1., 1.217283950617284}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {-1., 
           2.7827160493827163`}, {-1., 2.7160493827160495`}, {-1., 
           2.644444444444445}, {-1., 2.567901234567902}, {-1., 
           2.48641975308642}, {-1., 
           2.4000000000000004`}, {-0.9955830756000004, 
           2.31384092051605}, {-0.9823323024000018, 
           2.233141459841976}, {-0.960247680400004, 
           2.15790161797778}, {-0.9293292096000066, 
           2.0881213949234603`}, {-0.8895768900000104, 
           2.0238007906790174`}, {-0.840990721600015, 
           1.964939805244452}, {-0.7835707044000204, 
           1.9115384386197634`}, {-0.7173168384000268, 
           1.8635966908049517`}, {-0.6422291236000337, 
           1.8211145618000169`}, {-0.3765760976592858, 
           1.6882880488296428`}, {-0.1317188525481685, 1.5658594262740844`}, {
           0.09234261173331831, 1.453828694133341}, {0.29560829518517484`, 
           1.3521958524074127`}, {0.4780781978074008, 1.2609609010962997`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 6.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"CXXCC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"A\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXBC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"XXCC\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"CXX\"", 
              TagBox[
               
               GridBox[{{"\"B\""}, {"\"C\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$13"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-1.4210854715202004`*^-14, 
       206.3120061981997}, {-174.62401239639948`, 170.00000000000003`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{206.31200619819975`, Automatic}]], "Output",
 CellChangeTimes->{
  3.803472428677865*^9, 3.8035216749826365`*^9, {3.8036266019564104`*^9, 
   3.8036266165579743`*^9}},
 CellLabel->
  "Out[876]=",ExpressionUUID->"a27e16d7-f634-4952-ace9-5a6b026ea2d9"]
}, Open  ]],

Cell[TextData[{
 "The blue box represents the string and the yellow box represents updating \
events that act on the string above it. Also, the orange arrow represents \
causal connection between different updating events (see ",
 ButtonBox["\"Multiway Causal Graph\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-relationship-between-graphs-and-\
the-multiway-causal-graph/"], None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-relationship-between-graphs-and-\
the-multiway-causal-graph/"],
 "). Note that C can arrive on Alice",
 "\[CloseCurlyQuote]s",
 " side ",
 StyleBox["only ",
  FontWeight->"Bold"],
 "by virtue of correlation between A and B (as well as B and C). In other \
words, A is not directly correlated with C (e.g. there is no rule like A\
\[Rule]C). Given the rule associated with the above graph, it is \
straightforward to see that Alice can receive the message after exactly three \
steps regardless of how far apart Alice and Bob are (i.e. no matter how many \
X there are between A and B). One may then (incorrectly) interpret the above \
graph as an indication that entanglement can be used to teleport message \
faster than light. But actually, this graph is not a realistic model of \
quantum mechanics. For one, it violates ",
 ButtonBox["no-cloning theorem",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.quantiki.org/wiki/no-cloning-theorem"], None},
  ButtonNote->"https://www.quantiki.org/wiki/no-cloning-theorem"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "which states that an arbitrary quantum state can not be copied. We can see \
this easily because the final state has three C\[CloseCurlyQuote]s whereas we \
only have one in the beginning. If C is an arbitrary qubit state, then indeed \
we have violated no-cloning theorem in this model. How does quantum \
teleportation really work, then?"
}], "Text",
 CellChangeTimes->{{3.8035217948059163`*^9, 3.803522150404289*^9}, {
   3.8035222333949437`*^9, 3.803522263952077*^9}, {3.803522320664892*^9, 
   3.803522361906684*^9}, {3.803522736883128*^9, 3.8035227390803685`*^9}, {
   3.803523241995756*^9, 3.8035233304470778`*^9}, {3.8035307586927342`*^9, 
   3.8035307792508307`*^9}, 3.803624091699922*^9, {3.803626637427087*^9, 
   3.8036267561339617`*^9}, {3.8036269259314814`*^9, 3.803627170225278*^9}, {
   3.803627316200301*^9, 3.803627419932144*^9}, {3.8036292299065437`*^9, 
   3.8036292322023954`*^9}, {3.803629267795251*^9, 3.8036292744414854`*^9}, {
   3.8036295758473787`*^9, 3.803629657258099*^9}, {3.803629771606022*^9, 
   3.8036298256841946`*^9}, {3.803629882321555*^9, 3.8036299614132767`*^9}, {
   3.803630147524647*^9, 3.8036302099529476`*^9}, {3.8036314035793147`*^9, 
   3.8036314067967787`*^9}, {3.803631493721492*^9, 3.8036315501746364`*^9}, {
   3.803679179252016*^9, 3.8036791989752383`*^9}, {3.8036909724960084`*^9, 
   3.8036910600729675`*^9}, {3.8037117529555683`*^9, 
   3.803711763904562*^9}},ExpressionUUID->"fc5fec8c-f7e2-4873-9a25-\
435bf759641e"],

Cell[CellGroupData[{

Cell["How Quantum Teleportation Works", "Subsubsection",
 CellChangeTimes->{{3.8035223684929585`*^9, 3.80352237587897*^9}, {
  3.803529680819234*^9, 
  3.803529686182083*^9}},ExpressionUUID->"05c2fe85-a049-49b6-9a1b-\
f5cb075bd604"],

Cell[TextData[{
 "In order to understand quantum teleportation, a little mathematics seems \
inevitable. Let\[CloseCurlyQuote]s start with notation. In standard notation \
of quantum mechanics, when a qubit is in state 0, we write its state as  |0\
\[RightAngleBracket] and if its state is 1, we write its state to be |1\
\[RightAngleBracket] . Previously, I mentioned the concept of entangled \
state. By this notation, an example of entangled state are the so called ",
 ButtonBox["Bell states",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.quantiki.org/wiki/bell-state"], None},
  ButtonNote->"https://www.quantiki.org/wiki/bell-state"],
 ". \n \n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     SuperscriptBox[
      SubscriptBox["Bell", "1"], "\[PlusMinus]"]},
    "Ket"], "=", 
   RowBox[{
    TemplateBox[{"00"},
     "Ket"], "\[PlusMinus]", 
    TemplateBox[{"11"},
     "Ket"]}]}]], "DisplayFormula",
  FontWeight->"Bold",ExpressionUUID->"bf6c2a35-2af2-4df0-9258-53d77d172227"],
 "\n\nThe first bit is kept by Alice and the second bit is kept by Bob. If \
the states of Alice and Bob qubits is given by ",
 Cell[BoxData[
  TemplateBox[{
    SubscriptBox["Bell", "1"]},
   "Ket"]],ExpressionUUID->"c0509c7e-beb6-4e85-bf1b-cee7b258b636"],
 ", their qubits would be in the same state wherever they are on the \
universe. If Alice qubit is 0, then Bob qubit is also 0. And if her qubit is \
1, his qubit is also 1. Alice and Bob can also prepare a different kind of \
entangled state that would make their qubits to be always the opposite of \
each other. \n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     SuperscriptBox[
      SubscriptBox["Bell", "2"], "\[PlusMinus]"]},
    "Ket"], "=", 
   RowBox[{
    TemplateBox[{"01"},
     "Ket"], "\[PlusMinus]", 
    TemplateBox[{"10"},
     "Ket"]}]}]], "DisplayFormula",
  FontWeight->"Bold",ExpressionUUID->"eb588cf8-abd1-40ec-803d-ded85596fa55"],
 "\n\nIf they prepare this state instead of the previous one, when Alice\
\[CloseCurlyQuote]s state is 0, Bob\[CloseCurlyQuote]s state is guaranteed to \
be 1 and vice versa.",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 "Both of these entangled states can be used as a resource for quantum \
teleportation. But, without any loss of generality, we assume Alice and Bob \
shares ",
 Cell[BoxData[
  TemplateBox[{
    SubscriptBox["Bell", "1"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"11443783-a295-4ee4-9a93-b3fa75e41d0e"],
 ". One way they can prepare this state is by starting from ",
 Cell[BoxData[
  TemplateBox[{"00"},
   "Ket"]],ExpressionUUID->"b79706fa-6eeb-48f4-ae05-e5bd52535f0a"],
 " and then send their qubits to this ",
 ButtonBox["quantum circuit",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Bell_state#Creating_Bell_states"], 
    None},
  ButtonNote->"https://en.wikipedia.org/wiki/Bell_state#Creating_Bell_states"],
 ". \n\nWe also assume that Bob\[CloseCurlyQuote]s message can be encoded \
into a qubit in the following superposition state,\n \n ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Message"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{"\[Alpha]", 
     TemplateBox[{"0"},
      "Ket"]}], "+", 
    RowBox[{"\[Beta]", 
     TemplateBox[{"1"},
      "Ket"]}]}]}]],
  FontWeight->"Bold",ExpressionUUID->"22616aa4-c237-4489-a952-889fac3dc9d1"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "\n \nwhere \[Alpha] and \[Beta] are coefficients proportional to the \
probability of the qubit to be in state 0 and 1 respectively. Then, the whole \
three qubits state of Alice and Bob can be written as \n ",
 StyleBox["\n", "DisplayFormulaNumbered"],
 StyleBox[Cell[BoxData[
  RowBox[{
   TemplateBox[{"Initial"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       SubscriptBox["Bell", "1"]},
      "Ket"], 
     TemplateBox[{"Message"},
      "Ket"]}], "=", 
    RowBox[{
     RowBox[{"\[Alpha]", 
      TemplateBox[{"000"},
       "Ket"]}], "+", 
     RowBox[{"\[Alpha]", 
      TemplateBox[{"110"},
       "Ket"]}], "+", 
     RowBox[{"\[Beta]", 
      TemplateBox[{"001"},
       "Ket"]}], "+", " ", 
     RowBox[{"\[Beta]", 
      TemplateBox[{"111"},
       "Ket"]}]}]}]}]], "DisplayFormula",
  FontWeight->"Bold",ExpressionUUID->"4150e1dc-e540-41f5-8280-a6c7a37611d4"], 
  "DisplayFormulaNumbered"],
 "\n\nBy a little of algebra, one can express the above equation into a \
superposition of Bell states.\n",
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Initial"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", 
        TemplateBox[{"0"},
         "Ket"]}], "+", 
       RowBox[{"\[Beta]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "1"], "+"]},
      "Ket"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", 
        TemplateBox[{"0"},
         "Ket"]}], "-", 
       RowBox[{"\[Beta]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "1"], "-"]},
      "Ket"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", 
        TemplateBox[{"0"},
         "Ket"]}], "+", 
       RowBox[{"\[Alpha]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "2"], "+"]},
      "Ket"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", 
        TemplateBox[{"0"},
         "Ket"]}], "-", 
       RowBox[{"\[Alpha]", 
        TemplateBox[{"1"},
         "Ket"]}]}], ")"}], 
     TemplateBox[{
       SuperscriptBox[
        SubscriptBox["Bell", "2"], "-"]},
      "Ket"]}]}]}]], "DisplayFormulaNumbered",
  FontWeight->"Bold",ExpressionUUID->"d3b6d70d-10e0-439b-a146-390659f32de0"],
 "\n\nReaders are encouraged to verify this equation. Since Bob has two \
qubits, he can then perform a ",
 ButtonBox["Bell measurement",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.quantiki.org/wiki/bell-measurement"], None},
  ButtonNote->"https://www.quantiki.org/wiki/bell-measurement"],
 " on his qubits. In this type of measurement,  he would obtain one among \
four possible outcomes {",
 Cell[BoxData[
  TemplateBox[{
    SuperscriptBox[
     SubscriptBox["Bell", "1"], "\[PlusMinus]"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"3cee09b1-b1ff-480a-9917-d704631382a6"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    SuperscriptBox[
     SubscriptBox["Bell", "2"], "\[PlusMinus]"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"a1fdf651-3386-479c-9d66-953732f66fc1"],
 "}, which means the state of the two qubits possessed by Bob would be \
entangled after the measurement. Consequently, the state of Alice\
\[CloseCurlyQuote]s qubit would \[OpenCurlyDoubleQuote]collapse\
\[CloseCurlyDoubleQuote] into one of the states in parenthesis depending on \
Bob\[CloseCurlyQuote]s measurement outcome. For example,  if Bob measure ",
 Cell[BoxData[
  TemplateBox[{
    SuperscriptBox[
     SubscriptBox["Bell", "1"], "+"]},
   "Ket"]],
  FontWeight->"Bold",ExpressionUUID->"d8ca9738-d307-4e8c-ad26-64b2a9713454"],
 ", Alice qubit state would collapse into ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Alpha]", 
       TemplateBox[{"0"},
        "Ket"]}], "+", 
      RowBox[{"\[Beta]", 
       TemplateBox[{"1"},
        "Ket"]}]}], ")"}]}]}]],
  FontWeight->"Bold",ExpressionUUID->"4e74cd10-e308-40c2-bbd5-b538be3d6910"],
 ". Note that after the measurement, entanglement between Alice and Bob qubit \
pair has been \[OpenCurlyDoubleQuote]transferred\[CloseCurlyDoubleQuote] to \
Bob\[CloseCurlyQuote]s qubit and his message. In returns, the information \
about \[Alpha] and \[Beta] has been \[OpenCurlyDoubleQuote]teleported\
\[CloseCurlyDoubleQuote] from Bob to Alice! However, in order for Alice to \
obtain the correct state,  Bob must send his measurement result through \
\[OpenCurlyDoubleQuote]classical\[CloseCurlyDoubleQuote] communication \
channel (e.g. telephone, internet) to Alice, so that Alice can decide what \
operation she needs to do to change her qubit into Bob\[CloseCurlyQuote]s \
original message. Since classical communication channel is required, ",
 StyleBox["this protocol can not teleport a message faster than light.",
  FontWeight->"Bold"],
 " But, in this way, Bob can make sure that Alice receives his message \
correctly without violating the no-cloning theorem, since the original qubit\
\[CloseCurlyQuote]s message are no longer identical with ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Message"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{"\[Alpha]", 
     TemplateBox[{"0"},
      "Ket"]}], "+", 
    RowBox[{"\[Beta]", 
     TemplateBox[{"1"},
      "Ket"]}]}]}]],
  FontWeight->"Bold",ExpressionUUID->"30abb341-27d1-4256-9944-06ef8dcf7a52"],
 StyleBox[" ",
  FontWeight->"Bold"],
 " after Bob has performed his measurement.  "
}], "Text",
 CellChangeTimes->{
  3.803472377775651*^9, {3.8035224522772455`*^9, 3.803522586058579*^9}, {
   3.8035227746075563`*^9, 3.803522987930007*^9}, {3.803523023257701*^9, 
   3.803523079386664*^9}, {3.8035233472769327`*^9, 3.803523360138878*^9}, {
   3.8035239784148817`*^9, 3.8035239883014045`*^9}, {3.803524077324028*^9, 
   3.803524122153561*^9}, {3.803524172013693*^9, 3.803524236252082*^9}, {
   3.8035243184187775`*^9, 3.803524337900936*^9}, {3.803524391534884*^9, 
   3.8035243964772906`*^9}, {3.8035244892192717`*^9, 3.803524625391714*^9}, {
   3.803524684735073*^9, 3.803524989219329*^9}, {3.8035250503972673`*^9, 
   3.8035251170015726`*^9}, {3.8035253068820763`*^9, 3.803525462232487*^9}, {
   3.8035279809343557`*^9, 3.8035281270707083`*^9}, {3.8035281991875525`*^9, 
   3.8035283003876843`*^9}, {3.8035307881034365`*^9, 
   3.8035307925424604`*^9}, {3.8035308270272694`*^9, 3.803531073770652*^9}, {
   3.803624127661766*^9, 3.8036241323427744`*^9}, {3.8036241835946875`*^9, 
   3.8036242604340315`*^9}, {3.8036298622687035`*^9, 3.803629873432025*^9}, {
   3.8036302254064703`*^9, 3.803630265582842*^9}, {3.8036302997586536`*^9, 
   3.8036303293452673`*^9}, {3.8036303864186115`*^9, 
   3.8036304146754847`*^9}, {3.803630666539054*^9, 3.8036308433175554`*^9}, {
   3.8036308735891347`*^9, 3.80363092722655*^9}, {3.8036910646923637`*^9, 
   3.803691066163389*^9}, {3.8036911128564625`*^9, 3.8036911731924067`*^9}, {
   3.803711857125614*^9, 3.803711873518858*^9}, {3.803711924726677*^9, 
   3.803712006963462*^9}, {3.8037120395504704`*^9, 3.8037121573339033`*^9}, {
   3.803715394157024*^9, 3.8037154082703433`*^9}, {3.8037154709500504`*^9, 
   3.803715494866928*^9}, {3.8037163646801395`*^9, 3.803716364681137*^9}, {
   3.8037185617436333`*^9, 3.803718581803382*^9}, {3.8037186268143225`*^9, 
   3.803718728096425*^9}, {3.8037187772217026`*^9, 3.8037188289002104`*^9}, {
   3.8037189567311687`*^9, 3.8037189830920877`*^9}, {3.80371925003524*^9, 
   3.803719496136313*^9}, {3.80371955882853*^9, 3.803719570891983*^9}, {
   3.803719872395585*^9, 3.8037199109935694`*^9}, {3.803719961487691*^9, 
   3.8037200040748663`*^9}, {3.8037224777495365`*^9, 
   3.8037225639736843`*^9}, {3.803726656526292*^9, 3.803726663641725*^9}, {
   3.8037266982015696`*^9, 3.8037266985984507`*^9}, {3.8037267696446*^9, 
   3.8037269880588317`*^9}, {3.803727064815078*^9, 
   3.8037270680192595`*^9}},ExpressionUUID->"dd4ebe97-6ee7-4a4d-b5ee-\
2d83214d49d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Project Result: Quantum Teleportation with String", "Subsubsection",
 CellChangeTimes->{{3.8034422976341624`*^9, 3.8034423319679193`*^9}, {
   3.8035254957125187`*^9, 3.8035255183365593`*^9}, 
   3.80353150938494*^9},ExpressionUUID->"701b0c9c-3332-4ab3-908c-\
62d8769f66f7"],

Cell[TextData[{
 "This project is motivated by ",
 ButtonBox["Wolfram Physics Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/"], None},
  ButtonNote->"https://www.wolframphysics.org/"],
 ", a quest to find the fundamental law of physics based on hypergraph \
transformation rules. String substitution system is a simplified one \
dimensional toy model of the hypergraph multiway system in the Wolfram model. \
Therefore, finding quantum teleportation in string system is actually a \
preliminary investigation to the same phenomenon in a more general hypergraph \
setting. So, how can we simulate quantum teleportation in string substitution \
system? The basic idea is to introduce a notation where we replace 0 with A \
and 1 with B. But, since a string does not have a natural sign (\[PlusMinus]) \
assigned, we immediately face some difficulties:"
}], "Text",
 CellChangeTimes->{{3.8035255237764363`*^9, 3.8035255406614285`*^9}, 
   3.8035258140346994`*^9, {3.803525869854211*^9, 3.803525913703757*^9}, {
   3.803525948793776*^9, 3.803526006392272*^9}, {3.8035260783532076`*^9, 
   3.8035260811663857`*^9}, {3.803526149140051*^9, 3.803526201211111*^9}, {
   3.803553544345392*^9, 3.8035538990134735`*^9}, {3.8035539290139894`*^9, 
   3.8035539513233466`*^9}, {3.803597023049919*^9, 3.803597085681134*^9}, {
   3.803624297747076*^9, 3.803624328205927*^9}, {3.8036263695836678`*^9, 
   3.803626441848395*^9}, {3.8036309500514913`*^9, 3.803630996191075*^9}, {
   3.803631313399744*^9, 3.8036313134027348`*^9}, {3.803679400891458*^9, 
   3.803679407134796*^9}, {3.8037271003737884`*^9, 3.8037272538659124`*^9}, {
   3.8037294303314314`*^9, 
   3.8037294829597445`*^9}},ExpressionUUID->"bb9d26a5-aa18-42d3-b90f-\
4796c098b275"],

Cell[CellGroupData[{

Cell["How can we generate superposition and entanglement? ", "Item",
 CellChangeTimes->{{3.8035259385502605`*^9, 3.8035259413836575`*^9}, {
  3.8035260114453106`*^9, 3.803526052697049*^9}, {3.80352609569592*^9, 
  3.8035261395795574`*^9}},ExpressionUUID->"f7535cca-be96-4471-b36b-\
5f471f46994e"],

Cell["How can we perform Bell measurement? ", "Item",
 CellChangeTimes->{{3.8035259385502605`*^9, 3.8035259413836575`*^9}, {
  3.8035260114453106`*^9, 3.803526052362959*^9}, {3.8035260838724236`*^9, 
  3.803526125202569*^9}, {3.8035262115321307`*^9, 
  3.8035262115340743`*^9}},ExpressionUUID->"fa324d12-3e92-4f1b-bffa-\
d901c0515f1c"],

Cell["\<\
Since string substitution system has a fixed rule, how can we combine initial \
state generation and Bell measurement into a single substitution rule without \
their corresponding rules interfering with each other? \
\>", "Item",
 CellChangeTimes->{{3.8035259385502605`*^9, 3.8035259413836575`*^9}, {
  3.8035260114453106`*^9, 3.803526052362959*^9}, {3.8035260838724236`*^9, 
  3.803526125202569*^9}, {3.8035262127251024`*^9, 3.8035263310592756`*^9}, {
  3.803526390472267*^9, 3.803526423808753*^9}, {3.8035971090456533`*^9, 
  3.803597115367394*^9}},ExpressionUUID->"ccbbcd90-daa4-44c4-9071-\
91c229ac79f3"]
}, Open  ]],

Cell["\<\
In this project, I managed to find a string substitution rule that can solve \
all these three problems simultaneously. The rule consist of two parts: \
initial state generation and Bell completion map. \
\>", "Text",
 CellChangeTimes->{{3.8035264566820855`*^9, 3.803526527343703*^9}, {
  3.8035265607442646`*^9, 3.803526623716374*^9}, {3.803531147905531*^9, 
  3.803531203170698*^9}, {3.8035539695545044`*^9, 3.8035539712706337`*^9}, {
  3.8035966324877415`*^9, 3.8035966483230762`*^9}, {3.8035971355103226`*^9, 
  3.8035971379187574`*^9}, {3.803618399516813*^9, 3.8036184045644426`*^9}, {
  3.803631018646837*^9, 3.8036310224924803`*^9}, {3.803679558320955*^9, 
  3.803679563491247*^9}, {3.803679601107952*^9, 3.8036796208830347`*^9}, {
  3.8036796672030673`*^9, 3.8036796734757967`*^9}, {3.803687036687689*^9, 
  3.8036870403548107`*^9}, {3.8037161762780123`*^9, 
  3.8037162238926363`*^9}},ExpressionUUID->"60e726cf-9e33-454e-9b81-\
f676888972e4"],

Cell["String substitution rules to simulate quantum teleportation", "CodeText",
 CellChangeTimes->{{3.8037162881188116`*^9, 
  3.803716308265105*^9}},ExpressionUUID->"ae8fa053-1353-452e-8185-\
1ed60c83d17f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitialState", " ", "=", "\"\<DC\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BellCompletion", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", " ", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", 
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<AB\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<AB\>\""}]}], "}"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"f04c85e7-32df-4d4d-bb0c-325b32df93e3"],

Cell[TextData[{
 "In defining the variables above, one can translate back to the usual \
quantum mechanics notation by transforming A\[Rule]",
 Cell[BoxData[
  TemplateBox[{"0"},
   "Ket"]],ExpressionUUID->"69f2d2b2-c684-4151-884b-70016e10a983"],
 " and B\[Rule]",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"1"},
    "Ket"], ".", " "}]],ExpressionUUID->
  "a04b13ae-576b-4b23-b78e-d62e0890920d"],
 "The variable ",
 StyleBox["\[CloseCurlyDoubleQuote]InitialState\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " simply defines the initial string of our system. Meanwhile, \
\[OpenCurlyDoubleQuote]",
 StyleBox["rule",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] specifies the rule to generate the state required \
for quantum teleportation (",
 Cell[BoxData[
  TemplateBox[{"Initial"},
   "Ket"]],ExpressionUUID->"c9523788-b395-4fd0-b3b1-5aed8b7aef96"],
 ") from the initial string. The letter \[OpenCurlyDoubleQuote]D\
\[CloseCurlyDoubleQuote] denotes an \[OpenCurlyDoubleQuote]origin\
\[CloseCurlyDoubleQuote] state from which we create ",
 Cell[BoxData[
  TemplateBox[{
    SubscriptBox["Bell", "1"]},
   "Ket"]],ExpressionUUID->"72d333eb-2020-4bf7-ada1-90df00eb94eb"],
 " by D\[Rule]AXA and D\[Rule]BXB. The reason why I use a new character to \
define the origin state is such that \[OpenCurlyDoubleQuote]",
 StyleBox["rule\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " and \[OpenCurlyDoubleQuote]",
 StyleBox["BellCompletion",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] do not interfere when we merge them together into \
a single substitution rule (e.g. not creating a new unwanted branch). The \
letter \[OpenCurlyDoubleQuote]X\[CloseCurlyDoubleQuote] denotes spatial \
separation between Alice and Bob. The letter \[OpenCurlyDoubleQuote]C\
\[CloseCurlyDoubleQuote] represents the qubit that we want to teleport. The \
rule C\[Rule]A and C\[Rule]B just means that C can be expressed in terms of a \
superposition of the string basis A and B. The superposition coefficient can \
be controlled by writing the corresponding rule several times as will be \
discussed later. The variable ",
 StyleBox["\[OpenCurlyDoubleQuote]BellCompletion\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " represents the process of Bell measurement which also will be discussed in \
more detail later."
}], "Text",
 CellChangeTimes->{{3.8037163385104237`*^9, 3.803716482811551*^9}, {
  3.8037166314319563`*^9, 3.803716721370262*^9}, {3.8037168350780106`*^9, 
  3.8037174645167675`*^9}, {3.803717780277029*^9, 3.803718109455134*^9}, {
  3.803727293575622*^9, 3.8037272989866066`*^9}, {3.8037273501063414`*^9, 
  3.8037274094587135`*^9}, {3.803727447566859*^9, 3.803727448928224*^9}, {
  3.803727506692125*^9, 3.8037275889086733`*^9}, {3.803727698752554*^9, 
  3.8037276989336834`*^9}, {3.803729372425849*^9, 3.803729381133836*^9}, {
  3.803729525289964*^9, 
  3.8037295262210474`*^9}},ExpressionUUID->"7e2ffeb6-ead8-415d-b1bc-\
d9489c9682ec"],

Cell["\<\
Drawing evolution graph of string substitution system defined above\
\>", "CodeText",
 CellChangeTimes->{{3.803632130665717*^9, 3.8036321606560497`*^9}, {
  3.8037181191549177`*^9, 3.803718119273574*^9}, {3.8037182955639443`*^9, 
  3.803718298176778*^9}},ExpressionUUID->"a9ce1507-4389-40d8-8eab-\
a16705b10a81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "draw", " ", "the", " ", "graph", " ", "with", 
    " ", "annotation"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DrawGraph", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Selecting", " ", "the", " ", "vertices", " ", "to", " ", "be", " ", 
        "colored"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EvolVertexList", " ", "=", " ", 
        RowBox[{"VertexList", "[", 
         RowBox[{
          RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", 
           "InitialState", ",", "4", ",", "\"\<EvolutionGraph\>\""}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"TeleportInitState", " ", "=", " ", 
        RowBox[{"FilterRules", "[", 
         RowBox[{"EvolVertexList", ",", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"BellVertex1", " ", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "\[Rule]", " ", "#"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"StringCases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FilterRules", "[", 
               RowBox[{"EvolVertexList", ",", "3"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", "b"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"__", "~~", "\"\<AA\>\""}], ",", 
               RowBox[{"__", "~~", "\"\<BB\>\""}]}], "}"}]}], "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"BellVertex2", " ", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "\[Rule]", " ", "#"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"StringCases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FilterRules", "[", 
               RowBox[{"EvolVertexList", ",", "3"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", "b"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"__", "~~", "\"\<AB\>\""}], ",", 
               RowBox[{"__", "~~", "\"\<BA\>\""}]}], "}"}]}], "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stripMetadata", "[", "expression_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "expression", "]"}], "===", "Rule"}], ",", 
          RowBox[{"Last", "[", "expression", "]"}], ",", "expression"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Coloring", " ", "BellVertex1"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"a", " ", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], 
           "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", 
            "InitialState", ",", "3", ",", "\"\<EvolutionGraph\>\"", ",", 
            RowBox[{
            "\"\<IncludeStatePathWeights\>\"", "\[Rule]", " ", "True"}], ",", 
            RowBox[{
            "VertexLabels", "\[Rule]", " ", "\"\<VertexWeight\>\""}]}], "]"}],
           ",", 
          InterpretationBox[
           DynamicModuleBox[{Typeset`open = False}, 
            TemplateBox[{"Expression", 
              RowBox[{"Rule", "[", 
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
                "]"}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Byte count: \"", "IconizedLabel"], 
                   "\[InvisibleSpace]", 
                   TagBox["1776", "IconizedItem"]}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              Dynamic[Typeset`open]},
             "IconizedObject"]],
           
           VertexShapeFunction -> {
            Apply[Alternatives, $CellContext`BellVertex1] -> (Text[
               Framed[
                Style[
                 $CellContext`stripMetadata[#2], 
                 Hue[0, 1, 0.1]], Background -> Directive[
                  Opacity[0.6], 
                  Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
                RoundingRadius -> 0, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& )},
           SelectWithContents->True,
           Selectable->False]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Coloring", " ", "BellVertex2"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{"a", ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "BellVertex2"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{
                    RowBox[{"1", "/", "3"}], ",", "1", ",", "1", ",", ".5"}], 
                    "]"}]}], "]"}]}], ",", 
                   InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["712", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[
                    FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Hue[0, 0.1, 0.8200000000000001]]],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Coloring", " ", "the", " ", "initial", " ", "teleportation", " ", 
         "state"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"c", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{"b", ",", 
          RowBox[{"VertexShapeFunction", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Alternatives", "@@", "TeleportInitState"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1008", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[Background -> Directive[
                    Opacity[0.6], 
                    Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
                    RoundingRadius -> 0, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Hue[0, 0.1, 0.8200000000000001]]],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}], ",", "#1", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
            "}"}]}]}], "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", "the", " ", "function"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DrawGraph", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8034426350581417`*^9, 3.8034426642123322`*^9}, {
   3.8034433593898935`*^9, 3.803443361299015*^9}, {3.803443411723054*^9, 
   3.803443463922355*^9}, {3.8034435495497293`*^9, 3.803443597136104*^9}, {
   3.803443821623077*^9, 3.803443871663987*^9}, {3.803444022100918*^9, 
   3.803444075854952*^9}, {3.8034443157812304`*^9, 3.803444447837804*^9}, {
   3.803444512875676*^9, 3.8034446444804707`*^9}, {3.803444679395758*^9, 
   3.8034447254943733`*^9}, {3.8034448843235836`*^9, 
   3.8034449778131647`*^9}, {3.8034450276703095`*^9, 3.803445053559498*^9}, {
   3.803445108772855*^9, 3.803445109754223*^9}, {3.8035251588771825`*^9, 
   3.803525238502618*^9}, {3.8035256021109066`*^9, 3.803525656701886*^9}, {
   3.8035256922716684`*^9, 3.8035257850056334`*^9}, {3.803526348118894*^9, 
   3.803526368479573*^9}, 3.8035266951208243`*^9, {3.8035267281077394`*^9, 
   3.8035267287377243`*^9}, {3.8035267639836655`*^9, 3.803526776222223*^9}, {
   3.8035269273104672`*^9, 3.803527079355946*^9}, 3.8035290794086933`*^9, {
   3.803529132966996*^9, 3.8035293115400105`*^9}, {3.803535879310569*^9, 
   3.8035359029538717`*^9}, {3.8035366883156476`*^9, 
   3.8035367225537524`*^9}, {3.8035367535889683`*^9, 3.80353687835139*^9}, {
   3.8035369101919107`*^9, 3.8035369449970646`*^9}, {3.803537023044797*^9, 
   3.8035370283049135`*^9}, {3.8035966699743524`*^9, 3.8035967614180436`*^9}, 
   3.8037124966246443`*^9, {3.803712589480199*^9, 3.8037126028052263`*^9}, {
   3.803717487203083*^9, 3.8037174885616417`*^9}, {3.803718154066057*^9, 
   3.8037182560110025`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d6596d0f-91a4-4a7a-befc-6c96566590fa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXAC", 1 -> "BXBC", 1 -> "DA", 1 -> "DB", 2 -> "AXAA", 
       2 -> "AXAB", 2 -> "BXBA", 2 -> "BXBB", 3 -> "AXAA", 3 -> "AXAB", 3 -> 
       "AXBA", 3 -> "AXBB", 3 -> "BXAA", 3 -> "BXAB", 3 -> "BXBA", 3 -> 
       "BXBB"}, {{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {4, 6}, {2, 7}, {5, 
       7}, {3, 8}, {4, 8}, {3, 9}, {5, 9}, {7, 10}, {6, 11}, {6, 12}, {7, 
       13}, {8, 14}, {9, 15}, {9, 16}, {8, 17}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , (2 -> "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (2 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& )}, 
       VertexWeight -> {1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 639.1333333333334}, {-135.12770274370274`, 
       129.99999999999983`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{639.1333333333333, Automatic}]], "Output",
 CellChangeTimes->{{3.803529228329492*^9, 3.8035292461967106`*^9}, 
   3.803529316329779*^9, 3.8035359037310734`*^9, {3.8035369028590555`*^9, 
   3.803536913839706*^9}, 3.803536948574195*^9, 3.8035370382772827`*^9, 
   3.803596773400339*^9, 3.803682916448897*^9, 3.8039039274655147`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"73edcb14-4c6c-49fb-b9f8-efe32d0f635f"]
}, Open  ]],

Cell[TextData[{
 "Each downward path in the above graph represents a possible history of \
string transformation. The number below/above each string correspond to state\
\[CloseCurlyQuote]s path weight, which counts the number of possible path one \
can go from initial state \[OpenCurlyDoubleQuote]DC\[CloseCurlyDoubleQuote] \
to the corresponding string. Thus, the bigger the weight, the higher \
probability of obtaining the state. Then, we can understand quantum \
superposition in this model by looking at states and their associated weights \
in each layer. For example, the strings on the orange layer actually \
represent an initial state for teleportation protocol with 0 replaced by A \
and 1 replaced by B as we can see below. \n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Initial"},
    "Ket"], "=", " ", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"AAA", "\[PlusMinus]", "AAB"}], "\[PlusMinus]", 
       RowBox[{"BBA", "\[ImplicitPlus]", 
        RowBox[{"\[PlusMinus]", "BBB"}]}]}], ")"}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"AA", "\[PlusMinus]", "BB"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "\[PlusMinus]", "B"}], ")"}], "\[ImplicitPlus]"}]}]}]}]],
  ExpressionUUID->"46c6cd5f-fb67-456c-b17f-e37dddf09ebd"],
 "\n\nUnder the orange layer are the states after Bell measurement. If we \
consider the states in green and red separately, we may factorize each of \
them into,\n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Green"},
    "Ket"], "=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"AAB", "\[PlusMinus]", "ABA"}], "\[PlusMinus]", "BAB"}], 
       "\[PlusMinus]", 
       RowBox[{"BBA", "\[ImplicitPlus]"}]}], ")"}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"A", "\[PlusMinus]", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AB", "\[PlusMinus]", "BA"}], ")"}]}]}]}]],ExpressionUUID->
  "e521194e-0221-4e26-a224-2e024c5bd505"],
 "\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Red"},
    "Ket"], "    ", "=", " ", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"AAA", "\[PlusMinus]", "ABB"}], "\[PlusMinus]", 
       RowBox[{"BBB", "\[ImplicitPlus]", 
        RowBox[{"\[PlusMinus]", "ABB"}], "\[ImplicitPlus]"}]}], ")"}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"A", "\[PlusMinus]", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AA", "\[PlusMinus]", "BB"}], ")"}]}]}]}]],ExpressionUUID->
  "96d6a31d-226b-499f-9215-abc5ed9bc267"],
 "\n\nThus, Alice qubit state after Bell measurement is proportional to (A\
\[PlusMinus]B). Indeed, the system simulates a teleportation of qubit where \
\[Alpha] = \[Beta] = 1. To control the state we want to teleport, we just \
need to rewrite the rules \[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote] \
\[Rule]\[CloseCurlyDoubleQuote]A\[CloseCurlyDoubleQuote] \[Alpha] times and \
\[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote] \[Rule]\
\[CloseCurlyDoubleQuote]B\[CloseCurlyDoubleQuote] \[Beta] times. For example, \
if Bob wants to teleport  2 |0\[RightAngleBracket]+ 3 |1\[RightAngleBracket] \
to Alice, then we just do,"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQzXM18dSysDeObe1+p0H0lQSRnyB6xe+Zf8F0y1uW
5UD6QBm3HIie0fBWCUTrBO3SANHfuP/pg+j5Gb1mINqvrt8BRK/QEUkG0a/W
6k8C0X8NvbaC6BY3/10gWkoh7z6Ilm95/BhEG/oGPwfRYYyb+FYA6XP394Fp
o5YEJxDtdLXRGURHzTr3G0RPYb8gsBJIt6s4ioLoH2+8wPS0P5mqIDqpvUYL
RAvejpfYAqQXBSwH00KtRxRAdNmDnVog+trDk3og+rbQHH0Q3VBz2wZEn15y
xQlEu8pHl18D0mvuBTaDaIm7zX0g2k/69UEQ7VZ/uvojkL7l7dcAotPmb1L6
DqQn3XutD6LdYhn+MIW/cdxhwfcXRAMAIua/Vw==
  "],ExpressionUUID->"b742e883-6bfc-4937-8c1b-d1bca4940908"],

Cell["Controlling the superposition of the message\[CloseCurlyQuote]s qubit", \
"CodeText",
 CellChangeTimes->{{3.803632182524168*^9, 3.8036321943601007`*^9}, {
  3.8036827646632643`*^9, 
  3.80368276505114*^9}},ExpressionUUID->"f4d79d8b-4f6a-48a1-b210-\
94390e00e55b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawGraph", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8035293399683285`*^9, 3.803529384766429*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"3b9e7a74-6a71-4321-bc28-2e0d8f92f6af"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXAC", 1 -> "BXBC", 1 -> "DA", 1 -> "DB", 2 -> "AXAA", 
       2 -> "AXAB", 2 -> "BXBA", 2 -> "BXBB", 3 -> "AXAA", 3 -> "AXAB", 3 -> 
       "AXBA", 3 -> "AXBB", 3 -> "BXAA", 3 -> "BXAB", 3 -> "BXBA", 3 -> 
       "BXBB"}, {{{9, 16}, {5, 9}, {3, 8}, {3, 9}, {9, 15}, {2, 6}, {1, 2}, {
       1, 3}, {1, 5}, {8, 17}, {6, 12}, {6, 11}, {8, 14}, {4, 6}, {4, 8}, {1, 
       4}, {7, 10}, {7, 13}, {2, 7}, {5, 7}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , (2 -> "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (2 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "AXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& )}, 
       VertexWeight -> {1, 1, 1, 2, 3, 4, 6, 4, 6, 6, 4, 4, 6, 4, 6, 6, 4}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-5.684341886080802*^-14, 
       657.5333333333335}, {-138.882333813906, 133.00000000000009`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{657.5333333333335, Automatic}]], "Output",
 CellChangeTimes->{{3.8035293822293453`*^9, 3.8035293853348417`*^9}, 
   3.8039039316137605`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"aa0f786b-3d64-4da8-8885-4395dc1a98c5"]
}, Open  ]],

Cell[TextData[{
 "Now, the factorization becomes\n\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Green"},
    "Ket"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"4", "AAB"}], "\[PlusMinus]", 
       RowBox[{"4", "ABA"}]}], "\[PlusMinus]", 
      RowBox[{"6", "BAB"}]}], "\[PlusMinus]", 
     RowBox[{"6", 
      RowBox[{"BBA", "\[ImplicitPlus]"}]}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "A"}], "\[PlusMinus]", 
       RowBox[{"3", "B"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AB", "\[PlusMinus]", "BA"}], ")"}]}]}]}]],ExpressionUUID->
  "d238e4f2-da87-45ec-87bb-1fa35376b813"],
 "\n",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"Red"},
    "Ket"], "   ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"6", "AAA"}], "\[PlusMinus]", 
       RowBox[{"6", "ABB"}]}], "\[PlusMinus]", 
      RowBox[{"4", "BAA"}]}], "\[PlusMinus]", 
     RowBox[{"4", 
      RowBox[{"BBB", "\[ImplicitPlus]", " ", "\[ImplicitPlus]"}]}]}], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "A"}], "\[PlusMinus]", 
       RowBox[{"2", "B"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"AA", "\[PlusMinus]", "BB"}], ")"}]}]}]}]],ExpressionUUID->
  "d90447d2-4fa9-4bca-83b3-5d3a1ef35400"],
 "\n\nIn order for Alice to get Bob\[CloseCurlyQuote]s message correctly, Bob \
must tell Alice about his measurement outcome. If Bob \
\[OpenCurlyDoubleQuote]measures\[CloseCurlyDoubleQuote] green, then Alice \
does not need to do anything to her qubit, whereas if Bob \
\[OpenCurlyDoubleQuote]measures\[CloseCurlyDoubleQuote] red, Alice needs to \
perform string transformation A\[Rule]B, and B\[Rule]A. It is for this \
reason, Bob can not teleport his message faster than light. This \
teleportation protocol always work regardless of spatial separation between \
Alice and Bob. To see this, just increase the number of X in the rule \
D\[Rule]AXA and D\[Rule]BXB."
}], "Text",
 CellChangeTimes->{{3.8035294040018587`*^9, 3.8035295312905703`*^9}, {
   3.803529593428549*^9, 3.8035296307956333`*^9}, {3.803531647987611*^9, 
   3.803531687726927*^9}, {3.803531726188395*^9, 3.8035319353568287`*^9}, {
   3.803531989064783*^9, 3.8035320111773853`*^9}, {3.8035320863075905`*^9, 
   3.8035321711878595`*^9}, {3.803554347765708*^9, 3.8035544134677615`*^9}, {
   3.8036797742013206`*^9, 3.803679783464381*^9}, {3.803679821176575*^9, 
   3.803679863767638*^9}, {3.8036914250449347`*^9, 3.8036914302281256`*^9}, 
   3.803713249618037*^9, {3.8037133043218718`*^9, 3.803713325176285*^9}, {
   3.803715690157522*^9, 
   3.8037157245682554`*^9}},ExpressionUUID->"3049f9f7-c6ee-474d-90ca-\
6906ce0d1bd4"],

Cell["Increasing spatial separation between Alice and Bob", "CodeText",
 CellChangeTimes->{{3.803632209919908*^9, 
  3.8036322211005754`*^9}},ExpressionUUID->"a78e551f-f99f-4e43-abf0-\
43f3751dd943"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXXXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXXXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawGraph", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8035369878732347`*^9, 3.8035369968581*^9}, {
  3.803537117606492*^9, 3.803537118999848*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"47870cb7-5c37-4d43-8cac-451064941290"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      0 -> "DC", 1 -> "AXXXAC", 1 -> "BXXXBC", 1 -> "DA", 1 -> "DB", 2 -> 
       "AXXXAA", 2 -> "AXXXAB", 2 -> "BXXXBA", 2 -> "BXXXBB", 3 -> "AXXXAA", 
       3 -> "AXXXAB", 3 -> "AXXXBA", 3 -> "AXXXBB", 3 -> "BXXXAA", 3 -> 
       "BXXXAB", 3 -> "BXXXBA", 3 -> "BXXXBB"}, {{{6, 12}, {7, 10}, {7, 13}, {
       5, 7}, {6, 11}, {8, 17}, {2, 6}, {2, 7}, {1, 2}, {1, 5}, {8, 14}, {4, 
       6}, {4, 8}, {1, 4}, {9, 15}, {9, 16}, {5, 9}, {3, 8}, {3, 9}, {1, 3}}, 
       Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       PerformanceGoal -> "Quality", 
       VertexCoordinates -> {{-2.10203487607658, 3.}, {-2.9350951435018695`, 
        2.}, {-1.268891531536921, 2.}, {-3.5921089820513483`, 
        2.}, {-0.6118985050900174, 2.}, {-4.732858851775591, 
        1.}, {-1.368755810870805, 1.}, {-2.835130166537227, 1.}, {
        0.5288630054716652, 1.}, {-0.38791161869858953`, 
        0.}, {-5.585257034784832, 0.}, {-6.188088158125559, 
        0.}, {-1.1999562638522665`, 0.}, {-3.003694779396482, 0.}, {
        1.9840828200206317`, 0.}, {1.381273883110577, 
        0.}, {-3.8158493224708705`, 0.}}, VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , (3 -> "AXXXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "BXXXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXXXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXXXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXXXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (2 -> 
          "AXXXAA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (2 -> 
          "AXXXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "AXXXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), (3 -> 
          "BXXXAB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (2 -> 
          "BXXXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], 
            Sequence[Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXXXBA") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[1/3, 1, 1, 0.5]], 
            Sequence[
            FrameMargins -> {{2, 2}, {0, 0}}, RoundingRadius -> 0, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]]]], #, {0, 0}]& ), (3 -> 
          "BXXXBB") -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& )}, 
       VertexWeight -> {1, 1, 1, 2, 3, 4, 6, 4, 6, 6, 4, 4, 6, 4, 6, 6, 4}}]],
     Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.10203487607658, 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$1", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2.9350951435018695`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBC\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1.268891531536921, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3.5921089820513483`, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$4", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"DB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.6118985050900174, 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$5", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-4.732858851775591, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.368755810870805, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$7", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-2.835130166537227, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$8", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0.1, 0.7, 3]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {0.5288630054716652, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$9", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-0.38791161869858953`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$10", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-5.585257034784832, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-6.188088158125559, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AXXXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-1.1999562638522665`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXAA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.003694779396482, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$14", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXAB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.9840828200206317`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$15", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBA\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[
                Rational[1, 3], 1, 1, 0.5]], FrameMargins -> {{2, 2}, {0, 0}},
              RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.1, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {1.381273883110577, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$16", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"BXXXBB\"", 
              Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
               Opacity[0.6], 
               Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
            TraditionalForm], {-3.8158493224708705`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$17", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 628.3499999999976}, {-130.39685261944445`, 
       126.00000000000009`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{628.3499999999977, Automatic}]], "Output",
 CellChangeTimes->{
  3.8035369973446355`*^9, 3.8035370420699916`*^9, 3.803537119565056*^9, {
   3.803682888613168*^9, 3.8036829209906855`*^9}, 3.8039039360173807`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"fb23b61f-1d89-41d6-9f6a-0de74cfefc5c"]
}, Open  ]],

Cell[TextData[{
 "Now that we have seen the above string substitution system works properly, \
let\[CloseCurlyQuote]s go deeper. The evolution of the string can be divided \
into two phases, initial state preparation (up to the orange layer) and Bell \
measurement (the green and red layer). Let\[CloseCurlyQuote]s consider the ",
 ButtonBox["causal multiway graph",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-relationship-between-graphs-and-\
the-multiway-causal-graph/"], None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-relationship-between-graphs-and-\
the-multiway-causal-graph/"],
 " for the initial state preparation. "
}], "Text",
 CellChangeTimes->{{3.8036427577068806`*^9, 3.803642815709893*^9}, {
   3.803679813039804*^9, 3.803679816285636*^9}, {3.803682448129937*^9, 
   3.803682737227172*^9}, {3.8036836630081263`*^9, 3.8036836639044857`*^9}, {
   3.8036914609657307`*^9, 3.8036915463723993`*^9}, {3.8037133520672483`*^9, 
   3.80371340878471*^9}, 3.8037157436545143`*^9, {3.803715896944287*^9, 
   3.803715896946282*^9}, 
   3.8037295569287014`*^9},ExpressionUUID->"783ad1f0-759c-4370-bdd0-\
113911cb211d"],

Cell["Causal multiway graph of initial state preparation", "CodeText",
 CellChangeTimes->{{3.803682744984952*^9, 
  3.803682782792365*^9}},ExpressionUUID->"f93cd2ef-0119-4a6b-9496-\
29129f72dc0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<AXA\>\""}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "\"\<BXB\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<A\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
  "rule", ",", " ", "InitialState", ",", "2", ",", 
   "\"\<EvolutionCausalGraph\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.803682786405662*^9, 3.803682817137539*^9}, {
  3.803682852859166*^9, 3.8036828653491945`*^9}, {3.8036829426461763`*^9, 
  3.8036829589902525`*^9}, {3.8036829949643526`*^9, 3.8036830216421275`*^9}, {
  3.8036869198557243`*^9, 3.8036869227589407`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"0448d8d2-6bb3-4673-814b-20156def7ffa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", {
       "C" -> "A", "C", {"AXA", ""}}, {"C" -> "B", "C", {"AXA", ""}}, {
       "C" -> "A", "C", {"BXB", ""}}, {"C" -> "B", "C", {"BXB", ""}}, {
       "D" -> "AXA", "D", {"", "A"}}, {"D" -> "BXB", "D", {"", "A"}}, {
       "D" -> "AXA", "D", {"", "B"}}, {"D" -> "BXB", "D", {"", "B"}}, {
       "C" -> "A", "C", {"D", ""}}, {"C" -> "B", "C", {"D", ""}}, {
       "D" -> "AXA", "D", {"", "C"}}, {"D" -> "BXB", "D", {"", "C"}}}, {{{4, 
       10}, {4, 11}, {5, 12}, {5, 13}, {2, 14}, {2, 15}, {3, 16}, {3, 17}, {1,
        18}, {1, 19}, {1, 20}, {1, 21}, {10, 6}, {12, 7}, {18, 2}, {11, 8}, {
       13, 9}, {19, 3}, {14, 6}, {16, 8}, {20, 4}, {15, 7}, {17, 9}, {21, 5}},
        Null}, {
      EdgeStyle -> {
        DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {"AXAC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.01906487232574189], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-2., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-3., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], 
          TraditionalForm], {-2., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$21"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{2.842170943040401*^-14, 
       505.49999999999886`}, {-144.85857142857074`, 140.57000000000002`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{505.4999999999988, Automatic}]], "Output",
 CellChangeTimes->{{3.803682887702895*^9, 3.8036829595346637`*^9}, {
   3.8036830036177683`*^9, 3.803683023381153*^9}, 3.8036869235851383`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"cb853d20-e851-4eea-b215-f9353b96a38e"]
}, Open  ]],

Cell[TextData[{
 "By the absence of orange arrows between any of the yellow boxes, we can \
infer that each updating events are causally independent. Thus, the paths in \
the multiway graph - which represent the possible system\[CloseCurlyQuote]s \
histories - do not interact with one another. They nevertheless generate an \
entangled state that can be causally connected due to their common ancestry \
in the multiway system. \[OpenCurlyDoubleQuote]Entanglement map\
\[CloseCurlyDoubleQuote] of states in a given multiway system is illustrated \
by its ",
 ButtonBox["branchial graph",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-concept-of-branchial-graphs/"], 
    None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/the-concept-of-branchial-graphs/"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8036830633264546`*^9, 3.803683435944917*^9}, {
  3.8036835303883715`*^9, 3.8036836447432237`*^9}, {3.8036837165402927`*^9, 
  3.8036837900665646`*^9}, {3.803683826711342*^9, 3.8036839870244646`*^9}, {
  3.8036840280554066`*^9, 3.803684054335722*^9}, {3.803684104748723*^9, 
  3.803684111356166*^9}, {3.803684538810404*^9, 3.803684603701357*^9}, {
  3.803686292824942*^9, 3.8036863300185547`*^9}, {3.803686445258136*^9, 
  3.803686596550767*^9}, {3.8036867506504655`*^9, 3.803686750657509*^9}, {
  3.803686845713875*^9, 3.803686871874375*^9}, {3.803691555552726*^9, 
  3.8036916007161446`*^9}, {3.80371344771736*^9, 3.803713469828207*^9}, {
  3.8037292747452397`*^9, 3.8037293192241354`*^9}, {3.8037295725204434`*^9, 
  3.8037296122737713`*^9}},ExpressionUUID->"c19a86d8-db92-45b7-a32a-\
d8eecb454b8e"],

Cell["Branchial graph of the initial state", "CodeText",
 CellChangeTimes->{{3.8036871222303586`*^9, 
  3.803687129516683*^9}},ExpressionUUID->"a67fd45c-2dac-4b4c-84d3-\
bc99221b3112"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
  "rule", ",", " ", "InitialState", ",", "2", ",", "\"\<BranchialGraph\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8036869005083303`*^9, 3.803686929715313*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"77ff92c5-fd66-4784-b99a-3d39e7011674"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"AXAA", "AXAB", "BXBA", "BXBB"}, {
      Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
         Hue[0.89, 0.97, 0.71]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Hue[0.89, 0.97, 0.71], 
       LineBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 1.0106430996148606`*^-15}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-7.044813998280222*^-16, 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {6.049014748177263*^-16, -1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., -1.133107779529596*^-15}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$4"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 234.2999999999972}, {-110.79999999999723`, 106.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{234.29999999999723`, Automatic}]], "Output",
 CellChangeTimes->{{3.803686916477261*^9, 3.8036869300761786`*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"d5f86c92-2f94-4ddb-8251-eef7ad9eb573"]
}, Open  ]],

Cell[TextData[{
 "By imposing a",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 "measurement, we introduce causal relations between updating events in \
different branches. The final form of the multiway causal graph would be \
determined by our choice of measurement. In general, different choices of \
measurements correspond to different \[OpenCurlyDoubleQuote]layering\
\[CloseCurlyDoubleQuote] of the multiway system (see ",
 ButtonBox["quantum measurement",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/potential-\
relation-to-physics/quantum-measurement/"], None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/potential-relation-\
to-physics/quantum-measurement/"],
 "). In the ",
 ButtonBox["quantum formalism of Wolfram model,",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/wolframphysics/Documents/some-\
quantum-mechanical-properties-of-the-wolfram-model.pdf"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/wolframphysics/Documents/some-quantum-\
mechanical-properties-of-the-wolfram-model.pdf"],
 " measurement is imposed by inducing ",
 ButtonBox["Knuth-Bendix completion",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/wolframphysics/Documents/some-\
quantum-mechanical-properties-of-the-wolfram-model.pdf"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/wolframphysics/Documents/some-quantum-\
mechanical-properties-of-the-wolfram-model.pdf"],
 " between events that exist in the same layer. In constructing the string \
substitution system above, we have used the default layering which correspond \
to computational basis measurement frame. However, in our case, we need to \
perform Bell measurement to carry out the teleportation protocol. It is not \
at all clear how can one defines layering that corresponds to a Bell basis \
measurement frame in a string system. However, I managed to solve this \
problem by customizing the Knuth-Bendix completion map on a default layering \
instead of customizing the system\[CloseCurlyQuote]s layering itself. Thus, I \
define the following ",
 StyleBox["Bell completion map.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{
  3.8036867835394*^9, {3.8036871137771416`*^9, 3.803687116866124*^9}, {
   3.803687182953666*^9, 3.803687189570927*^9}, {3.803687260233127*^9, 
   3.803687304126845*^9}, {3.8036880176030416`*^9, 3.803688129508906*^9}, {
   3.803691609868182*^9, 3.8036916523141537`*^9}, {3.8036917022418566`*^9, 
   3.8036917300328207`*^9}, {3.803713504330995*^9, 3.803713553356366*^9}, {
   3.803713643301179*^9, 3.8037136523399487`*^9}, {3.8037159453588886`*^9, 
   3.8037159458404007`*^9}, {3.8037159971685376`*^9, 3.803716011521716*^9}, {
   3.803719100836658*^9, 3.8037191017253227`*^9}, {3.80372785502766*^9, 
   3.803727855605147*^9}},ExpressionUUID->"e5a101ca-884e-4579-8086-\
f20796f6327d"],

Cell["Definition of Bell completion map", "CodeText",
 CellChangeTimes->{{3.8037160703661065`*^9, 
  3.8037160763826885`*^9}},ExpressionUUID->"e00c5c93-144a-4cef-8212-\
715b2df91aef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BellCompletion", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", " ", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", 
     RowBox[{"\"\<BA\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<BA\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<AA\>\""}], ",", 
     RowBox[{"\"\<AA\>\"", "\[Rule]", " ", "\"\<AB\>\""}], ",", " ", 
     RowBox[{"\"\<AB\>\"", "\[Rule]", " ", "\"\<BB\>\""}], ",", 
     RowBox[{"\"\<BB\>\"", "\[Rule]", " ", "\"\<AB\>\""}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.803716026107768*^9, 
  3.803716062229737*^9}},ExpressionUUID->"a07ffdc4-0528-412b-b867-\
baec9e98c7b4"],

Cell["An illustration of Bell completion map", "CodeText",
 CellChangeTimes->{{3.803684208141538*^9, 3.8036842238867083`*^9}, {
  3.8036917717466135`*^9, 3.8036917729216466`*^9}, {3.803713694997501*^9, 
  3.803713721059844*^9}, {3.8037160802786217`*^9, 
  3.803716080874568*^9}},ExpressionUUID->"4b32f5b8-b24d-499c-af06-\
df335c5a99d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{"BellCompletion", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<AA\>\"", ",", "\"\<AB\>\"", ",", "\"\<BA\>\"", ",", "\"\<BB\>\""}], 
    "}"}], ",", "1", ",", " ", "\"\<StatesGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8036841492262087`*^9, 3.8036841812797947`*^9}, {
  3.8036853709252815`*^9, 3.803685371903472*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"d81c78ae-95fc-4771-bf94-01ecd84a9fc8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "AB", "AA", "BA", "BB"}, {{{1, 2}, {3, 2}, {2, 1}, {4, 1}, {2, 3}, {4, 
       3}, {1, 4}, {3, 4}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.5332572940331453, -0.15130721083010584`}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$1", Automatic, Center], {
          0.8499026954602148, 0.5212198069801938}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$2", Automatic, Center], {
          0.5246841946656199, 0.17737465309847977`}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation[
          "VertexID$2", Automatic, Center], {-0.1497024459406013, 
          0.49487847411401686`}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.17897668933305574`, 0.5045062310273692}, 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$3", Automatic, Center], {
          0.49562209076013136`, 1.1770332488376771`}, 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          1.178702989616798, 0.5306681794761109}, 
          DynamicLocation["VertexID$1", Automatic, Center]}]], 
       ArrowBox[
        BezierCurveBox[{
          DynamicLocation["VertexID$4", Automatic, Center], {
          0.504316349010579, 0.8481720004916518}, 
          DynamicLocation["VertexID$3", Automatic, Center]}]]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1.0286672453063102`, 0.026067442268373875`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.02927424339245399, 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 0.9993847051413874}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.999938439770701, 1.0258205441879404`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$4"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0.7606933090100982, 
       235.2393066909899}, {-119.2393066909899, 115.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{237.44999999999845`, Automatic}]], "Output",
 CellChangeTimes->{3.8036841823834057`*^9, 3.803685372871176*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"ca71a143-bcdc-42fe-ac6e-e6aefd0f90fe"]
}, Open  ]],

Cell[TextData[{
 "Note that AA and BB as well as AB and BA are not perceived to be \
equivalent. There is a nice interpretation for this completion map, namely we \
are collapsing the system\[CloseCurlyQuote]s state into either a \
superposition of AA and BB or superposition of AB and BA. And this is exactly \
what",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 "the Bell measurement does! The exciting part is that this way of thinking \
can be generalized into making measurements on any basis as long as we can \
express the basis in terms of superposition of computational basis states! If \
we impose the Bell completion map onto our initial state preparation, we \
generate quantum teleportation string system demonstrated earlier. \
Additionally, the final causal multiway graph turns into a beautiful and \
symmetric network. "
}], "Text",
 CellChangeTimes->{{3.8036846223200727`*^9, 3.8036847562401543`*^9}, {
  3.803684848509742*^9, 3.803684877850457*^9}, {3.803684934902114*^9, 
  3.803685055216903*^9}, {3.803685091652238*^9, 3.803685115982113*^9}, {
  3.8036854285385876`*^9, 3.8036854292624364`*^9}, {3.8036873191041994`*^9, 
  3.803687351755149*^9}, {3.8036881733730755`*^9, 3.8036881735015936`*^9}, {
  3.803713821778144*^9, 3.8037138369801273`*^9}, {3.8037145327935753`*^9, 
  3.8037145349605923`*^9}, {3.80372791267927*^9, 
  3.8037279290634193`*^9}},ExpressionUUID->"f4fa41ae-e016-497b-b614-\
488182f388fa"],

Cell["Causal multiway graph after Bell completion", "CodeText",
 CellChangeTimes->{{3.803691752016958*^9, 
  3.8036917655447626`*^9}},ExpressionUUID->"5b9e993e-3243-4de4-8ae4-\
15c7f662dac2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stripMetadata", "[", "expression_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "expression", "]"}], "===", "Rule"}], ",", 
     RowBox[{"Last", "[", "expression", "]"}], ",", "expression"}], "]"}]}], 
  ";", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", "InitialState", 
      ",", "3", ",", "\"\<EvolutionCausalGraph\>\""}], "]"}], ",", 
    RowBox[{"VertexShapeFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", 
         RowBox[{
         "\"\<AXBA\>\"", ",", "\"\<BXAA\>\"", ",", " ", "\"\<BXAB\>\"", ",", 
          " ", "\"\<AXBB\>\""}], "}"}]}], "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Framed", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"stripMetadata", "[", "#2", "]"}], ",", 
               RowBox[{"Hue", "[", 
                RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Background", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", ".6", "]"}], ",", 
                RowBox[{"Hue", "[", 
                 RowBox[{"0", ",", "0.45", ",", "0.87"}], "]"}]}], "]"}]}], 
             ",", 
             RowBox[{"FrameMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2", ",", "2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                RowBox[{"Hue", "[", 
                 RowBox[{"0", ",", "0.52", ",", "0.8200000000000001"}], 
                 "]"}]}], "]"}]}]}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8036853533488226`*^9, 3.8036853541742797`*^9}, {
  3.803685468402881*^9, 3.8036855496178026`*^9}, {3.8036855897534885`*^9, 
  3.803685653083412*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"e1973d07-fc71-40f5-ab33-020f36a898d1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", 
       "AXBA", "AXBB", "BXAA", "BXAB", {"AA" -> "AB", "AA", {"AX", ""}}, {
       "AA" -> "BA", "AA", {"AX", ""}}, {"AB" -> "AA", "AB", {"AX", ""}}, {
       "AB" -> "BB", "AB", {"AX", ""}}, {"C" -> "A", "C", {"AXA", ""}}, {
       "C" -> "B", "C", {"AXA", ""}}, {"BA" -> "AA", "BA", {"BX", ""}}, {
       "BA" -> "BB", "BA", {"BX", ""}}, {"BB" -> "AB", "BB", {"BX", ""}}, {
       "BB" -> "BA", "BB", {"BX", ""}}, {"C" -> "A", "C", {"BXB", ""}}, {
       "C" -> "B", "C", {"BXB", ""}}, {"D" -> "AXA", "D", {"", "A"}}, {
       "D" -> "BXB", "D", {"", "A"}}, {"D" -> "AXA", "D", {"", "B"}}, {
       "D" -> "BXB", "D", {"", "B"}}, {"C" -> "A", "C", {"D", ""}}, {
       "C" -> "B", "C", {"D", ""}}, {"D" -> "AXA", "D", {"", "C"}}, {
       "D" -> "BXB", "D", {"", "C"}}}, {{{6, 14}, {6, 15}, {8, 16}, {8, 17}, {
       4, 18}, {4, 19}, {7, 20}, {7, 21}, {9, 22}, {9, 23}, {5, 24}, {5, 
       25}, {2, 26}, {2, 27}, {3, 28}, {3, 29}, {1, 30}, {1, 31}, {1, 32}, {1,
        33}, {14, 8}, {15, 10}, {16, 6}, {17, 11}, {20, 12}, {21, 9}, {22, 
       13}, {23, 7}, {18, 6}, {18, 14}, {18, 15}, {24, 7}, {24, 20}, {24, 
       21}, {30, 2}, {30, 14}, {30, 15}, {30, 20}, {30, 21}, {19, 8}, {19, 
       16}, {19, 17}, {25, 9}, {25, 22}, {25, 23}, {31, 3}, {31, 16}, {31, 
       17}, {31, 22}, {31, 23}, {26, 6}, {26, 14}, {26, 15}, {28, 8}, {28, 
       16}, {28, 17}, {32, 4}, {32, 14}, {32, 15}, {32, 16}, {32, 17}, {27, 
       7}, {27, 20}, {27, 21}, {29, 9}, {29, 22}, {29, 23}, {33, 5}, {33, 
       20}, {33, 21}, {33, 22}, {33, 23}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAB", {"AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "BA", "AA", {"AX", ""}}, "AXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBB", {"BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "AA", "BA", {"BX", ""}}, "BXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAB", {"AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "BB", "BA", {"BX", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBB", {"BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"AB" -> "BB", "AB", {"AX", ""}}, "AXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBA", {"BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "AB", "AA", {"AX", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBA", {"BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BB" -> "AB", "BB", {"BX", ""}}, "BXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"BB" -> "BA", "BB", {"BX", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AB" -> "AA", "AB", {"AX", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, GraphLayout -> {"Dimension" -> 2}, 
       PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {{"C" -> "B", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "BA" -> "BB", "BA", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "AXA", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "BA" -> "AA", "BA", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "BXAB" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), "DC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "AXAC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "AA" -> "BA", "AA", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"D", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "B", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "C" -> "A", "C", {"AXA", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), "DB" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "BB" -> "BA", "BB", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "D" -> "BXB", "D", {"", "A"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXBB" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), {
          "AB" -> "BB", "AB", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "BB" -> "AB", "BB", {"BX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXBC" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "AB" -> "AA", "AB", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "BXAA" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXAA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "AXA", "D", {"", "C"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), {
          "AA" -> "AB", "AA", {"AX", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "DA" -> (Text[
           Framed[
            Style[
             
             FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2], 
             Hue[0.62, 1, 0.48]], Background -> Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& ), {
          "D" -> "BXB", "D", {"", "B"}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& ), "AXBA" -> (Text[
           Framed[
            Style[
             $CellContext`stripMetadata[#2], 
             Hue[0, 1, 0.1]], Background -> Directive[
              Opacity[0.6], 
              Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0, 0.52, 0.8200000000000001]]], #, {0, 0}]& ), {
          "C" -> "A", "C", {"BXB", ""}} -> (If[First[
             First[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]]] === Null, 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               RGBColor[0.259, 0.576, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}], 
           Text[
            Framed[
             Style[
              
              FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
getEventRenderingForm[Identity, 
               
               FunctionRepository`$d565908159ef4f95abe6d42d3d3ed1a6`\
stripMetadata[#2]], 
              Hue[0.09, 1, 0.32]], Background -> Directive[
               Opacity[0.7], 
               Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.4], 
               Hue[0.09, 1, 0.91]]], #, {0, 0}]]& )}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.021623018537877372`], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$31", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$32", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$33", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$26", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$27", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$28", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$29", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$23", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.465817985598249, 2.2071960555646712`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.463767503744226, 4.027022378609731}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"DB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2.4673414073177504`, 0.42477072961167783`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.931966091916343, 2.2243073707268195`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBC\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.2205502291076034`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.128153955796733, 2.895182442400397}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.8022376451253572, 2.8948136300057596`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4.133387885532272, 1.5407951190753808`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0.79964207461105, 1.5395108284469827`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXBA\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {4.67650375090432, 4.412863693034111}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AXBB\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {4.650039232150174, 0.001731336595833799}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXAA\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {0.2519224124504911, 4.41051996710136}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"BXAB\"", 
            Hue[0, 1, 0.1], StripOnInput -> False], Background -> Directive[
             Opacity[0.6], 
             Hue[0, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0, 0.52, 0.8200000000000001]], StripOnInput -> False], 
          TraditionalForm], {0.28376882007880644`, 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AA\""}, {"\"AB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.7199803444005415`, 2.807368410004851}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AA\""}, {"\"BA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.9277123242376617`, 3.4429841105145518`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AB\""}, {"\"AA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.728267567105271, 1.6281918503395258`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AX\"", 
              TagBox[
               
               GridBox[{{"\"AB\""}, {"\"BB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.9254834394944824`, 0.9887386075796751}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4.671601269829116, 3.049710495321035}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"AXA\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         4.6720306821128705`, 1.393239938768212}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BA\""}, {"\"AA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.0022552684581896`, 3.441256038388996}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BA\""}, {"\"BB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.210291107146872, 2.808164638500914}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$21"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BB\""}, {"\"AB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.00789000772068, 0.9855048589139426}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$22"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BX\"", 
              TagBox[
               
               GridBox[{{"\"BB\""}, {"\"BA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.2043934525046853`, 1.6264875864539659`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$23"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.2583136283449301, 3.0470726853670413`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$24"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"BXB\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         0.2612621341179211, 1.3898421618991041`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$25"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.521195281199115, 3.697001257130781}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$26"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"A\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.4050483810953727`, 3.701777020515179}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$27"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.522796767902296, 0.7352265464573402}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$28"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"B\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.4114859862611298`, 0.7342594804821949}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$29"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"A\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2.465326336634388, 3.2054145170615382`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$30"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"D\"", 
              TagBox[
               
               GridBox[{{"\"C\""}, {"\"B\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         2.4664197472504497`, 1.2170441004866293`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$31"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"AXA\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         3.8398738366671488`, 2.2198180038447117`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$32"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox[
            TemplateBox[{"\"\"", 
              TagBox[
               
               GridBox[{{"\"D\""}, {"\"BXB\""}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
              "\"C\""}, "RowDefault"], 
            Hue[0.09, 1, 0.32], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.7], 
             Hue[0.14, 0.34, 1]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.4], 
             Hue[0.09, 1, 0.91]], StripOnInput -> False], TraditionalForm], {
         1.0920504267682594`, 2.2177657620731064`}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$33"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{3.552713678800501*^-15, 
       515.2499999999981}, {-225.67954582597199`, 221.36500000000004`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{515.2499999999981, Automatic}]], "Output",
 CellChangeTimes->{
  3.803685560146653*^9, {3.8036856160525513`*^9, 3.803685653925234*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"e2d91b86-485f-4ce0-981b-3cd55741d88a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{"rule", ",", "BellCompletion"}], "]"}], ",", "InitialState", ",", 
   "3", ",", "\"\<EvolutionCausalGraphStructure\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.803685133566905*^9, 3.8036852140274787`*^9}, {
  3.8036854097239976`*^9, 3.803685411788469*^9}, {3.8036855290475073`*^9, 
  3.803685545996517*^9}, {3.8036869408505545`*^9, 3.80368694354819*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"5c5cbf55-c0c4-4a00-a642-2c1cf856dd71"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "DC", "DA", "DB", "AXAC", "BXBC", "AXAA", "BXBA", "AXAB", "BXBB", 
       "AXBA", "AXBB", "BXAA", "BXAB", {"AA" -> "AB", "AA", {"AX", ""}}, {
       "AA" -> "BA", "AA", {"AX", ""}}, {"AB" -> "AA", "AB", {"AX", ""}}, {
       "AB" -> "BB", "AB", {"AX", ""}}, {"C" -> "A", "C", {"AXA", ""}}, {
       "C" -> "B", "C", {"AXA", ""}}, {"BA" -> "AA", "BA", {"BX", ""}}, {
       "BA" -> "BB", "BA", {"BX", ""}}, {"BB" -> "AB", "BB", {"BX", ""}}, {
       "BB" -> "BA", "BB", {"BX", ""}}, {"C" -> "A", "C", {"BXB", ""}}, {
       "C" -> "B", "C", {"BXB", ""}}, {"D" -> "AXA", "D", {"", "A"}}, {
       "D" -> "BXB", "D", {"", "A"}}, {"D" -> "AXA", "D", {"", "B"}}, {
       "D" -> "BXB", "D", {"", "B"}}, {"C" -> "A", "C", {"D", ""}}, {
       "C" -> "B", "C", {"D", ""}}, {"D" -> "AXA", "D", {"", "C"}}, {
       "D" -> "BXB", "D", {"", "C"}}}, {{{6, 14}, {6, 15}, {8, 16}, {8, 17}, {
       4, 18}, {4, 19}, {7, 20}, {7, 21}, {9, 22}, {9, 23}, {5, 24}, {5, 
       25}, {2, 26}, {2, 27}, {3, 28}, {3, 29}, {1, 30}, {1, 31}, {1, 32}, {1,
        33}, {14, 8}, {15, 10}, {16, 6}, {17, 11}, {20, 12}, {21, 9}, {22, 
       13}, {23, 7}, {18, 6}, {18, 14}, {18, 15}, {24, 7}, {24, 20}, {24, 
       21}, {30, 2}, {30, 14}, {30, 15}, {30, 20}, {30, 21}, {19, 8}, {19, 
       16}, {19, 17}, {25, 9}, {25, 22}, {25, 23}, {31, 3}, {31, 16}, {31, 
       17}, {31, 22}, {31, 23}, {26, 6}, {26, 14}, {26, 15}, {28, 8}, {28, 
       16}, {28, 17}, {32, 4}, {32, 14}, {32, 15}, {32, 16}, {32, 17}, {27, 
       7}, {27, 20}, {27, 21}, {29, 9}, {29, 22}, {29, 23}, {33, 5}, {33, 
       20}, {33, 21}, {33, 22}, {33, 23}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "AXA", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "B", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAB", {"AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBC", {"C" -> "A", "C", {"BXB", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "BA", "AA", {"AX", ""}}, "AXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DB", {"D" -> "AXA", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBB", {"BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "AA", "BA", {"BX", ""}}, "BXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"AXA", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAB", {"AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DB", {"D" -> "BXB", "D", {"", "B"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["AXAC", {"C" -> "B", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BA" -> "BB", "BA", {"BX", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBB", {"BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, "DA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge["DC", {"C" -> "B", "C", {"D", ""}}] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "A"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, "AXAC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "AXA", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DA", {"D" -> "BXB", "D", {"", "A"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, "BXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "A"}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"AB" -> "BB", "AB", {"AX", ""}}, "AXBB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "BB" -> "BA", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAC", {"C" -> "A", "C", {"AXA", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["BXBA", {"BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge["DC", {"C" -> "A", "C", {"D", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AA" -> "AB", "AA", {"AX", ""}}, "AXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, {
           "AA" -> "AB", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"AXA", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "B"}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], DirectedEdge[{"C" -> "B", "C", {"D", ""}}, "DB"] -> 
         Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"BXB", ""}}, {
           "BB" -> "AB", "BB", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["BXBA", {"BA" -> "BB", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"BB" -> "AB", "BB", {"BX", ""}}, "BXAB"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "C"}}, {
           "AB" -> "BB", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"BB" -> "BA", "BB", {"BX", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, "BXBA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "A", "C", {"D", ""}}, {
           "AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["DC", {"D" -> "BXB", "D", {"", "C"}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"AB" -> "AA", "AB", {"AX", ""}}, "AXAA"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"C" -> "B", "C", {"D", ""}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "AXA", "D", {"", "B"}}, {
           "AB" -> "AA", "AB", {"AX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, "BXBC"] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}], 
         DirectedEdge[{"D" -> "BXB", "D", {"", "C"}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge[{"C" -> "A", "C", {"BXB", ""}}, {
           "BA" -> "AA", "BA", {"BX", ""}}] -> Directive[{
            Hue[0.07, 0.78, 1], 
            AbsoluteThickness[1], 
            Dashing[None]}], 
         DirectedEdge["AXAA", {"AA" -> "BA", "AA", {"AX", ""}}] -> Directive[{
            Hue[0.75, 0, 0.24], 
            Dashing[None], 
            AbsoluteThickness[1]}]}, GraphLayout -> {"Dimension" -> 2}, 
       PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {{"C" -> "B", "C", {"D", ""}} -> Automatic, 
         "AXAB" -> Automatic, {"BA" -> "BB", "BA", {"BX", ""}} -> 
         Automatic, {"D" -> "AXA", "D", {"", "A"}} -> 
         Automatic, {"C" -> "B", "C", {"AXA", ""}} -> 
         Automatic, {"BA" -> "AA", "BA", {"BX", ""}} -> Automatic, "BXBB" -> 
         Automatic, "BXAB" -> Automatic, "DC" -> Automatic, "AXAC" -> 
         Automatic, {"AA" -> "BA", "AA", {"AX", ""}} -> 
         Automatic, {"C" -> "A", "C", {"D", ""}} -> 
         Automatic, {"C" -> "B", "C", {"BXB", ""}} -> 
         Automatic, {"C" -> "A", "C", {"AXA", ""}} -> 
         Automatic, {"D" -> "BXB", "D", {"", "C"}} -> Automatic, "BXBA" -> 
         Automatic, "DB" -> Automatic, {"BB" -> "BA", "BB", {"BX", ""}} -> 
         Automatic, {"D" -> "BXB", "D", {"", "A"}} -> Automatic, "AXBB" -> 
         Automatic, {"AB" -> "BB", "AB", {"AX", ""}} -> 
         Automatic, {"BB" -> "AB", "BB", {"BX", ""}} -> Automatic, "BXBC" -> 
         Automatic, {"AB" -> "AA", "AB", {"AX", ""}} -> Automatic, "BXAA" -> 
         Automatic, {"D" -> "AXA", "D", {"", "B"}} -> Automatic, "AXAA" -> 
         Automatic, {"D" -> "AXA", "D", {"", "C"}} -> 
         Automatic, {"AA" -> "AB", "AA", {"AX", ""}} -> Automatic, "DA" -> 
         Automatic, {"D" -> "BXB", "D", {"", "B"}} -> Automatic, "AXBA" -> 
         Automatic, {"C" -> "A", "C", {"BXB", ""}} -> Automatic}, 
       VertexStyle -> {{"C" -> "A", "C", {"BXB", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"BB" -> "AB", "BB", {"BX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"BA" -> "BB", "BA", {"BX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"C" -> "B", "C", {"BXB", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"C" -> "A", "C", {"AXA", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "AXA", "D", {"", "C"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"C" -> "A", "C", {"D", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "BXB", "D", {"", "B"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AA" -> "AB", "AA", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "AXAC" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "AXAA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "DC" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"C" -> "B", "C", {"AXA", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "BXB", "D", {"", "A"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AB" -> "BB", "AB", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "AXA", "D", {"", "B"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "BXBA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "AXBB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "DB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "BXAB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "AXAB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "BXAA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"D" -> "BXB", "D", {"", "C"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "AXBA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"BA" -> "AA", "BA", {"BX", ""}} -> 
         Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "BXBB" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"BB" -> "BA", "BB", {"BX", ""}} -> 
         Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], "DA" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], "BXBC" -> Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]], {"C" -> "B", "C", {"D", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AA" -> "BA", "AA", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"AB" -> "AA", "AB", {"AX", ""}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]], {"D" -> "AXA", "D", {"", "A"}} -> Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Arrowheads[0.021623018537877372`], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$31", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$32", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$33", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$26", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$27", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$28", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$29", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$23", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$25", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$27", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$30", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$31", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {
         Directive[{
           Hue[0.75, 0, 0.24], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$33", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], {
         Directive[{
           Hue[0.07, 0.78, 1], 
           AbsoluteThickness[1], 
           Dashing[None]}]}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        StyleBox[
         DiskBox[{2.465817985598249, 2.2071960555646712`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$1"], 
       TagBox[
        StyleBox[
         DiskBox[{2.463767503744226, 4.027022378609731}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$2"], 
       TagBox[
        StyleBox[
         DiskBox[{2.4673414073177504`, 0.42477072961167783`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$3"], 
       TagBox[
        StyleBox[
         DiskBox[{4.931966091916343, 2.2243073707268195`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$4"], 
       TagBox[
        StyleBox[
         DiskBox[{0., 2.2205502291076034`}, 0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$5"], 
       TagBox[
        StyleBox[
         DiskBox[{4.128153955796733, 2.895182442400397}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$6"], 
       TagBox[
        StyleBox[
         DiskBox[{0.8022376451253572, 2.8948136300057596`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$7"], 
       TagBox[
        StyleBox[
         DiskBox[{4.133387885532272, 1.5407951190753808`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$8"], 
       TagBox[
        StyleBox[
         DiskBox[{0.79964207461105, 1.5395108284469827`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$9"], 
       TagBox[
        StyleBox[
         DiskBox[{4.67650375090432, 4.412863693034111}, 0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$10"], 
       TagBox[
        StyleBox[
         DiskBox[{4.650039232150174, 0.001731336595833799}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$11"], 
       TagBox[
        StyleBox[
         DiskBox[{0.2519224124504911, 4.41051996710136}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$12"], 
       TagBox[
        StyleBox[
         DiskBox[{0.28376882007880644`, 0.}, 0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.62, 0.45, 0.87]]}, StripOnInput -> False], "DynamicName", 
        BoxID -> "VertexID$13"], 
       TagBox[
        StyleBox[
         DiskBox[{3.7199803444005415`, 2.807368410004851}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$14"], 
       TagBox[
        StyleBox[
         DiskBox[{3.9277123242376617`, 3.4429841105145518`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$15"], 
       TagBox[
        StyleBox[
         DiskBox[{3.728267567105271, 1.6281918503395258`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$16"], 
       TagBox[
        StyleBox[
         DiskBox[{3.9254834394944824`, 0.9887386075796751}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$17"], 
       TagBox[
        StyleBox[
         DiskBox[{4.671601269829116, 3.049710495321035}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$18"], 
       TagBox[
        StyleBox[
         DiskBox[{4.6720306821128705`, 1.393239938768212}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$19"], 
       TagBox[
        StyleBox[
         DiskBox[{1.0022552684581896`, 3.441256038388996}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$20"], 
       TagBox[
        StyleBox[
         DiskBox[{1.210291107146872, 2.808164638500914}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$21"], 
       TagBox[
        StyleBox[
         DiskBox[{1.00789000772068, 0.9855048589139426}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$22"], 
       TagBox[
        StyleBox[
         DiskBox[{1.2043934525046853`, 1.6264875864539659`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$23"], 
       TagBox[
        StyleBox[
         DiskBox[{0.2583136283449301, 3.0470726853670413`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$24"], 
       TagBox[
        StyleBox[
         DiskBox[{0.2612621341179211, 1.3898421618991041`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$25"], 
       TagBox[
        StyleBox[
         DiskBox[{3.521195281199115, 3.697001257130781}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$26"], 
       TagBox[
        StyleBox[
         DiskBox[{1.4050483810953727`, 3.701777020515179}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$27"], 
       TagBox[
        StyleBox[
         DiskBox[{3.522796767902296, 0.7352265464573402}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$28"], 
       TagBox[
        StyleBox[
         DiskBox[{1.4114859862611298`, 0.7342594804821949}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$29"], 
       TagBox[
        StyleBox[
         DiskBox[{2.465326336634388, 3.2054145170615382`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$30"], 
       TagBox[
        StyleBox[
         DiskBox[{2.4664197472504497`, 1.2170441004866293`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$31"], 
       TagBox[
        StyleBox[
         DiskBox[{3.8398738366671488`, 2.2198180038447117`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$32"], 
       TagBox[
        StyleBox[
         DiskBox[{1.0920504267682594`, 2.2177657620731064`}, 
          0.04265759769347588], {
          Directive[
           Opacity[0.7], 
           Hue[0.11, 1, 0.97]]}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$33"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{8.036000000000001, 
       443.76400000000007`}, {-197.5278096382545, 193.32544000000001`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{451.8, Automatic}]], "Output",
 CellChangeTimes->{{3.803685185118163*^9, 3.803685214525836*^9}, 
   3.8036855564974174`*^9, 3.8036869443005342`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"8a2f6bfd-5ca5-4b10-b092-778053429fd3"]
}, Open  ]],

Cell[TextData[{
 "In contrast with before the measurement, we now observe causal connections \
between different branches in the multiway causal graph! The fact that a \
measurement process induces significant changes toward the causal structure \
is a generic feature of quantum formalism in the multiway system. It has the \
interpretation that measurement is inherently disruptive to the system. More \
remarkably, the states shown in red (AXBA, BXAA, BXAB, and AXBB) are supposed \
to be impossible without the measurement process because the state of Alice \
and Bob qubit pair must be either AA or BB. However, after the Bell \
completion, AB and BA states become available. This is because the \
entanglement between Alice and Bob qubit pair has been exchanged with the \
information about the message qubit state. This indicates that there is a \
non-local information exchange between Alice and Bob. It is plausible that we \
are witnessing a signature of quantum effects in this teleportation model \
that distinguishes it from classical communication. As a remark, this quantum \
signature is somewhat similar to the quantum interference effect discussed ",
 ButtonBox["here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/questions/quantum-mechanics/how-does-\
quantum-interference-occur-within-your-models/"], None},
  ButtonNote->
   "https://www.wolframphysics.org/questions/quantum-mechanics/how-does-\
quantum-interference-occur-within-your-models/"],
 ". But actually, the initial hypothesis was that we would observe updating \
events that occur on Alice induced by measurement done by Bob, which would \
clearly demonstrate non-local quantum information transfer between them. But, \
this model shows that what is happening is more subtle than that, because the \
information being transferred to Alice does not manifest itself in terms of \
updating events, but it is related to the transfer of path weights of the \
message qubit. \n \nNow that Alice and Bob have done teleportation protocol, \
Alice can decode Bob\[CloseCurlyQuote]s secret message. It turns out that the \
message is \[OpenCurlyDoubleQuote]",
 StyleBox["Thank you all for reading!\[CloseCurlyDoubleQuote].",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8036856884426126`*^9, 3.8036857598825097`*^9}, {
   3.803685867671739*^9, 3.8036858815043087`*^9}, {3.803685917094958*^9, 
   3.80368592709929*^9}, {3.803685966598364*^9, 3.8036860986799784`*^9}, 
   3.803687012193205*^9, {3.803687061071497*^9, 3.803687062295523*^9}, {
   3.8036874144669776`*^9, 3.803687534627937*^9}, {3.8036875975885687`*^9, 
   3.8036876181157856`*^9}, {3.8036882164875917`*^9, 3.803688236315143*^9}, {
   3.803713952154969*^9, 3.803713972197456*^9}, {3.803722639928935*^9, 
   3.803722643705014*^9}, {3.803722680472974*^9, 3.803722717298599*^9}, {
   3.8037227781977067`*^9, 3.8037228045413957`*^9}, {3.803722880449711*^9, 
   3.8037232275742826`*^9}, {3.8037237598260193`*^9, 3.803723775767809*^9}, {
   3.8037239072172704`*^9, 3.803723912643984*^9}, {3.803723957251787*^9, 
   3.8037239767110505`*^9}, {3.803724020623607*^9, 3.8037240241986895`*^9}, {
   3.803724308643248*^9, 3.8037250997454567`*^9}, {3.803725135670252*^9, 
   3.8037253118389373`*^9}, {3.8037255109051847`*^9, 3.803725512110508*^9}, {
   3.8037279419041862`*^9, 3.803727957470024*^9}, {3.803728018364318*^9, 
   3.8037280835698495`*^9}, {3.8037281171118455`*^9, 3.803728127378297*^9}, {
   3.8037281904240932`*^9, 3.803728229021076*^9}, {3.803729706650137*^9, 
   3.803729711718074*^9}},ExpressionUUID->"337b5cdc-e7a8-4b7a-baf4-\
c35ad5f22a74"]
}, Open  ]]
},
WindowSize->{1129.8, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"93e78674-835c-4d84-be94-30a9a86dd39d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 5688, 85, 453, "Abstract",ExpressionUUID->"2c29d8df-a05d-4218-8bdc-4287fc0ced72"],
Cell[6249, 107, 1380, 22, 127, "Text",ExpressionUUID->"5a56eb7a-6ac6-4c7b-877b-ab31ac7ef5c2"],
Cell[7632, 131, 190, 3, 38, "CodeText",ExpressionUUID->"426b6d6e-7bce-443f-9d1c-ae47360846a7"],
Cell[CellGroupData[{
Cell[7847, 138, 617, 12, 28, "Input",ExpressionUUID->"92e99047-c261-4992-94ae-c01127a0541a"],
Cell[8467, 152, 5024, 127, 43, "Output",ExpressionUUID->"f94a7a8c-bfea-4988-8d5e-b2ed8df7f149"]
}, Open  ]],
Cell[13506, 282, 2261, 33, 150, "Text",ExpressionUUID->"a342b118-8726-400b-90be-032005f29a73"],
Cell[15770, 317, 279, 6, 38, "CodeText",ExpressionUUID->"ab86e0a0-350a-4064-8f77-336e67e00ced"],
Cell[CellGroupData[{
Cell[16074, 327, 617, 14, 28, "Input",ExpressionUUID->"13f434fb-db7b-41b6-85d1-eb4a56095c7e"],
Cell[16694, 343, 37151, 899, 361, "Output",ExpressionUUID->"a27e16d7-f634-4952-ace9-5a6b026ea2d9"]
}, Open  ]],
Cell[53860, 1245, 3208, 56, 196, "Text",ExpressionUUID->"fc5fec8c-f7e2-4873-9a25-435bf759641e"],
Cell[CellGroupData[{
Cell[57093, 1305, 232, 4, 45, "Subsubsection",ExpressionUUID->"05c2fe85-a049-49b6-9a1b-f5cb075bd604"],
Cell[57328, 1311, 11681, 296, 910, "Text",ExpressionUUID->"dd4ebe97-6ee7-4a4d-b5ee-2d83214d49d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69046, 1612, 280, 4, 45, "Subsubsection",ExpressionUUID->"701b0c9c-3332-4ab3-908c-62d8769f66f7"],
Cell[69329, 1618, 1771, 29, 127, "Text",ExpressionUUID->"bb9d26a5-aa18-42d3-b90f-4796c098b275"],
Cell[CellGroupData[{
Cell[71125, 1651, 296, 4, 32, "Item",ExpressionUUID->"f7535cca-be96-4471-b36b-5f471f46994e"],
Cell[71424, 1657, 335, 5, 32, "Item",ExpressionUUID->"fa324d12-3e92-4f1b-bffa-d901c0515f1c"],
Cell[71762, 1664, 618, 10, 53, "Item",ExpressionUUID->"ccbbcd90-daa4-44c4-9071-91c229ac79f3"]
}, Open  ]],
Cell[72395, 1677, 961, 15, 58, "Text",ExpressionUUID->"60e726cf-9e33-454e-9b81-f676888972e4"],
Cell[73359, 1694, 207, 3, 38, "CodeText",ExpressionUUID->"ae8fa053-1353-452e-8185-1ed60c83d17f"],
Cell[73569, 1699, 1193, 26, 68, "Input",ExpressionUUID->"f04c85e7-32df-4d4d-bb0c-325b32df93e3"],
Cell[74765, 1727, 2957, 61, 205, "Text",ExpressionUUID->"7e2ffeb6-ead8-415d-b1bc-d9489c9682ec"],
Cell[77725, 1790, 322, 6, 38, "CodeText",ExpressionUUID->"a9ce1507-4389-40d8-8eab-a16705b10a81"],
Cell[CellGroupData[{
Cell[78072, 1800, 12542, 274, 426, "Input",ExpressionUUID->"d6596d0f-91a4-4a7a-befc-6c96566590fa"],
Cell[90617, 2076, 27460, 648, 282, "Output",ExpressionUUID->"73edcb14-4c6c-49fb-b9f8-efe32d0f635f"]
}, Open  ]],
Cell[118092, 2727, 3718, 86, 331, "Text",ExpressionUUID->"b742e883-6bfc-4937-8c1b-d1bca4940908"],
Cell[121813, 2815, 269, 5, 38, "CodeText",ExpressionUUID->"f4d79d8b-4f6a-48a1-b210-94390e00e55b"],
Cell[CellGroupData[{
Cell[122107, 2824, 764, 15, 49, "Input",ExpressionUUID->"3b9e7a74-6a71-4321-bc28-2e0d8f92f6af"],
Cell[122874, 2841, 27288, 646, 288, "Output",ExpressionUUID->"aa0f786b-3d64-4da8-8885-4395dc1a98c5"]
}, Open  ]],
Cell[150177, 3490, 2700, 66, 217, "Text",ExpressionUUID->"3049f9f7-c6ee-474d-90ca-6906ce0d1bd4"],
Cell[152880, 3558, 199, 3, 38, "CodeText",ExpressionUUID->"a78e551f-f99f-4e43-abf0-43f3751dd943"],
Cell[CellGroupData[{
Cell[153104, 3565, 815, 16, 49, "Input",ExpressionUUID->"47870cb7-5c37-4d43-8cac-451064941290"],
Cell[153922, 3583, 27429, 648, 273, "Output",ExpressionUUID->"fb23b61f-1d89-41d6-9f6a-0de74cfefc5c"]
}, Open  ]],
Cell[181366, 4234, 1331, 24, 58, "Text",ExpressionUUID->"783ad1f0-759c-4370-bdd0-113911cb211d"],
Cell[182700, 4260, 196, 3, 38, "CodeText",ExpressionUUID->"f93cd2ef-0119-4a6b-9496-29129f72dc0e"],
Cell[CellGroupData[{
Cell[182921, 4267, 937, 19, 49, "Input",ExpressionUUID->"0448d8d2-6bb3-4673-814b-20156def7ffa"],
Cell[183861, 4288, 52594, 1322, 305, "Output",ExpressionUUID->"cb853d20-e851-4eea-b215-f9353b96a38e"]
}, Open  ]],
Cell[236470, 5613, 1802, 31, 104, "Text",ExpressionUUID->"c19a86d8-db92-45b7-a32a-d8eecb454b8e"],
Cell[238275, 5646, 184, 3, 38, "CodeText",ExpressionUUID->"a67fd45c-2dac-4b4c-84d3-bc99221b3112"],
Cell[CellGroupData[{
Cell[238484, 5653, 354, 7, 28, "Input",ExpressionUUID->"77ff92c5-fd66-4784-b99a-3d39e7011674"],
Cell[238841, 5662, 4939, 119, 233, "Output",ExpressionUUID->"d5f86c92-2f94-4ddb-8251-eef7ad9eb573"]
}, Open  ]],
Cell[243795, 5784, 2970, 57, 173, "Text",ExpressionUUID->"e5a101ca-884e-4579-8086-f20796f6327d"],
Cell[246768, 5843, 183, 3, 38, "CodeText",ExpressionUUID->"e00c5c93-144a-4cef-8212-715b2df91aef"],
Cell[246954, 5848, 773, 16, 28, "Input",ExpressionUUID->"a07ffdc4-0528-412b-b867-baec9e98c7b4"],
Cell[247730, 5866, 336, 5, 38, "CodeText",ExpressionUUID->"4b32f5b8-b24d-499c-af06-df335c5a99d6"],
Cell[CellGroupData[{
Cell[248091, 5875, 512, 10, 28, "Input",ExpressionUUID->"d81c78ae-95fc-4771-bf94-01ecd84a9fc8"],
Cell[248606, 5887, 6466, 160, 254, "Output",ExpressionUUID->"ca71a143-bcdc-42fe-ac6e-e6aefd0f90fe"]
}, Open  ]],
Cell[255087, 6050, 1432, 24, 127, "Text",ExpressionUUID->"f4fa41ae-e016-497b-b614-488182f388fa"],
Cell[256522, 6076, 191, 3, 38, "CodeText",ExpressionUUID->"5b9e993e-3243-4de4-8ae4-15c7f662dac2"],
Cell[CellGroupData[{
Cell[256738, 6083, 2697, 66, 107, "Input",ExpressionUUID->"e1973d07-fc71-40f5-ab33-020f36a898d1"],
Cell[259438, 6151, 102256, 2533, 467, "Output",ExpressionUUID->"e2d91b86-485f-4ce0-981b-3cd55741d88a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361731, 8689, 581, 10, 28, "Input",ExpressionUUID->"5c5cbf55-c0c4-4a00-a642-2c1cf856dd71"],
Cell[362315, 8701, 52569, 1304, 423, "Output",ExpressionUUID->"8a2f6bfd-5ca5-4b10-b092-778053429fd3"]
}, Open  ]],
Cell[414899, 10008, 3629, 54, 311, "Text",ExpressionUUID->"337b5cdc-e7a8-4b7a-baf4-c35ad5f22a74"]
}, Open  ]]
}
]
*)

